Notebook[{

Cell[CellGroupData[{
Cell["SIMBADData", "Title",
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->739579479,ExpressionUUID->"840595f1-32c8-4374-85f0-11120b3d3262"],

Cell["Import astronomical data from the SIMBAD database", "Text",
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->984070183,ExpressionUUID->"e5f29cba-4eba-4e61-8458-bc59ff55733b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
      True, CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4953bcd8-3555-46a2-a8b3-f8d7631ff309"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->201182710,ExpressionUUID->"c7926be0-45a3-4867-a1b2-59182f2cde0e"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "SIMBADData", "]"}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.82423412191677*^9, 3.824234129044581*^9}, {
  3.824505132033164*^9, 3.824505133143635*^9}, {3.835791346674563*^9, 
  3.8357913529407377`*^9}},
 CellLabel->"In[1]:=",
 CellID->886232885,ExpressionUUID->"96afe938-3118-4e44-966b-2698c6dc0474"],

Cell[CellGroupData[{

Cell["Messages", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8233543007241783`*^9, 3.8233543038072023`*^9}, 
   3.8353726475577917`*^9},
 CellLabel->"In[7]:=",
 CellID->545224670,ExpressionUUID->"568a620b-ae86-4a1f-83e0-f634c2b60d81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongprop"}], " ", "=", " ", 
   "\"\<The property or list of properties \\\"`1`\\\" are not \
supported.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "queryfail"}], " ", "=", " ", 
   "\"\<The query to SIMBAD database failed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "noinfofound"}], " ", "=", " ", 
   "\"\<No object has been found.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongmaxitems"}], " ", "=", " ", 
   "\"\<`1` is not a valid MaxItems specification.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongradius"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"AstroRange\\\" specification.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "bigradius"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"AstroRange\\\" specification. To specify a \
circle in the sky the radius must be in the interval [0\[Degree], \
90\[Degree]].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongcenter"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"AstroCenter\\\" specification.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongdec"}], " ", "=", " ", 
   "\"\<Invalid declination specification. Declination must be in the \
interval [-90\[Degree], 90\[Degree]].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongbox"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"AstroRange\\\" specification.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongpoly"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"AstroRange\\\" specification.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongpolysegment"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"AstroRange\\\" specification. To specify a \
polygon, a segment cannot be 180\[Degree] in length.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongmirror"}], " ", "=", " ", 
   "\"\<`1` is not a valid \\\"DataSource\\\" specification. France and US \
are available.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "invalidquery"}], " ", "=", " ", 
   "\"\<The query `1` is invalid.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "wrongobject"}], " ", "=", " ", 
   "\"\<The input `1` is not a valid astronomical object.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "::", "modi"}], " ", "=", " ", 
   "\"\<Invalid data modifier.\>\""}], ";"}]}], "Code",
 TaggingRules->{},
 CellLabel->"In[2]:=",
 CellID->258618181,ExpressionUUID->"dfef046f-37ea-4449-9ee9-2caba3de26ed"]
}, Closed]],

Cell[CellGroupData[{

Cell["Roots", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.823684678719131*^9, 3.823684679967502*^9}},
 CellLabel->"In[16]:=",
 CellID->452615129,ExpressionUUID->"202dc5ae-5693-48f5-b4ef-6f4cb13f132d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "rootFrance", " ", "=", " ", 
   "\"\<http://simbad.u-strasbg.fr/simbad/sim-tap/sync?request=doQuery&lang=\
adql&format=tsv&query=\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "rootUS", " ", "=", " ", 
   "\"\<http://simbad.cfa.harvard.edu/simbad/sim-tap/sync?request=doQuery&\
lang=adql&format=tsv&query=\>\""}], ";"}]}], "Code",
 TaggingRules->{},
 CellLabel->"In[17]:=",
 CellID->166641172,ExpressionUUID->"38228be3-e45f-4ea3-9b1d-f62d5cca583b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.823683123338277*^9, 3.823683130107099*^9}, {
  3.8239658546473637`*^9, 3.8239658547063704`*^9}, {3.823966103818585*^9, 
  3.8239661193866673`*^9}},
 CellLabel->"In[3]:=",
 CellID->890561554,ExpressionUUID->"64768b98-bed8-4bca-9b5e-fa5a1b3e2b1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SIMBADData", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"\"\<DataSource\>\"", " ", "\[Rule]", " ", "\"\<US\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Code",
 TaggingRules->{},
 CellLabel->"In[19]:=",
 CellID->682658085,ExpressionUUID->"80fe0d4e-c5c9-40b5-a14a-dfcef39f2633"]
}, Closed]],

Cell[CellGroupData[{

Cell["Information", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.823351461120417*^9, 3.823351479391293*^9}, 
   3.824506200695952*^9},
 CellLabel->"In[2]:=",
 CellID->669225353,ExpressionUUID->"dbe2409b-6469-421f-bfc0-547e3823b4c3"],

Cell[CellGroupData[{

Cell["Relation between SIMBADData properties and SIMBAD database", \
"Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8353799587426662`*^9, 3.8353799635768347`*^9}, {
  3.8353800760657196`*^9, 3.8353801109689865`*^9}},
 CellLabel->"In[1]:=",
 CellID->356123078,ExpressionUUID->"f92abf19-c0d1-4f3a-bb99-4a3cebc1cdcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"infoProperties", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<Identifiers\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<ids.ids\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<ids\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<ids\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<MainIdentifier\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.main_id\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<main_id\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<ObjectTypes\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<alltypes.otypes\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<alltypes\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<otypes\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<MainObjectType\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.otype_txt\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<otype_txt\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<RightAscensionWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.ra\>\"", ",", "\"\<basic.dec\>\"", ",", 
          "\"\<basic.coo_err_maj\>\"", ",", "\"\<basic.coo_err_min\>\"", ",", 
          "\"\<basic.coo_err_angle\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<ra\>\"", ",", "\"\<dec\>\"", ",", "\"\<coo_err_maj\>\"", ",", 
          "\"\<coo_err_min\>\"", ",", "\"\<coo_err_angle\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<RightAscension\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.ra\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<ra\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<DeclinationWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.dec\>\"", ",", "\"\<basic.ra\>\"", ",", 
          "\"\<basic.coo_err_maj\>\"", ",", "\"\<basic.coo_err_min\>\"", ",", 
          "\"\<basic.coo_err_angle\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<dec\>\"", ",", "\"\<ra\>\"", ",", "\"\<coo_err_maj\>\"", ",", 
          "\"\<coo_err_min\>\"", ",", "\"\<coo_err_angle\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<Declination\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.dec\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<dec\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<PositionErrorEllipse\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.dec\>\"", ",", "\"\<basic.ra\>\"", ",", 
          "\"\<basic.coo_err_maj\>\"", ",", "\"\<basic.coo_err_min\>\"", ",", 
          "\"\<basic.coo_err_angle\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<dec\>\"", ",", "\"\<ra\>\"", ",", "\"\<coo_err_maj\>\"", ",", 
          "\"\<coo_err_min\>\"", ",", "\"\<coo_err_angle\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<PositionWavelengthClass\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.coo_wavelength\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<coo_wavelength\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<PositionQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.coo_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<coo_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<PositionBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.coo_bibcode\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<coo_bibcode\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<ProperMotionRightAscensionWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.pmra\>\"", ",", "\"\<basic.pm_err_maj\>\"", ",", 
          "\"\<basic.pm_err_min\>\"", ",", "\"\<basic.pm_err_angle\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<pmra\>\"", ",", "\"\<pm_err_maj\>\"", ",", "\"\<pm_err_min\>\"",
           ",", "\"\<pm_err_angle\>\""}], "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<ProperMotionRightAscension\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.pmra\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<pmra\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<ProperMotionDeclinationWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.pmdec\>\"", ",", "\"\<basic.pm_err_maj\>\"", ",", 
          "\"\<basic.pm_err_min\>\"", ",", "\"\<basic.pm_err_angle\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<pmdec\>\"", ",", "\"\<pm_err_maj\>\"", ",", 
          "\"\<pm_err_min\>\"", ",", "\"\<pm_err_angle\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<ProperMotionDeclination\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.pmdec\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<pmdec\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<ProperMotionErrorEllipse\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.pmra\>\"", ",", "\"\<basic.pmdec\>\"", ",", 
          "\"\<basic.pm_err_maj\>\"", ",", "\"\<basic.pm_err_min\>\"", ",", 
          "\"\<basic.pm_err_angle\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<pmra\>\"", ",", "\"\<pmdec\>\"", ",", "\"\<pm_err_maj\>\"", 
          ",", "\"\<pm_err_min\>\"", ",", "\"\<pm_err_angle\>\""}], "}"}]}]}],
       "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<ProperMotionQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.pm_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<pm_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<ProperMotionBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.pm_bibcode\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<pm_bibcode\>\"", "}"}]}]}], "\[RightAssociation]"}],
      ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<ParallaxWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<basic.plx_value\>\"", ",", "\"\<basic.plx_err\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<plx_value\>\"", ",", "\"\<plx_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<Parallax\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.plx_value\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<plx_value\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<ParallaxQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.plx_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<plx_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<ParallaxBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.plx_bibcode\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<plx_bibcode\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<RedshiftWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.rvz_type\>\"", ",", "\"\<basic.rvz_redshift\>\"", ",", 
          "\"\<basic.rvz_err\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<rvz_type\>\"", ",", "\"\<rvz_redshift\>\"", ",", 
          "\"\<rvz_err\>\""}], "}"}]}]}], "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<Redshift\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.rvz_redshift\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<rvz_redshift\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<RedshiftQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<basic.rvz_qual\>\"", ",", "\"\<basic.rvz_type\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<rvz_qual\>\"", ",", "\"\<rvz_type\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<RedshiftBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<basic.rvz_bibcode\>\"", ",", "\"\<basic.rvz_type\>\""}],
          "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<rvz_bibcode\>\"", ",", "\"\<rvz_type\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<RadialVelocityWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<basic.rvz_type\>\"", ",", "\"\<basic.rvz_radvel\>\"", ",", 
          "\"\<basic.rvz_err\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<rvz_type\>\"", ",", "\"\<rvz_radvel\>\"", ",", 
          "\"\<rvz_err\>\""}], "}"}]}]}], "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<RadialVelocity\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.rvz_radvel\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<rvz_radvel\>\"", "}"}]}]}], "\[RightAssociation]"}],
      ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<RadialVelocityQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<basic.rvz_qual\>\"", ",", "\"\<basic.rvz_type\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<rvz_qual\>\"", ",", "\"\<rvz_type\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<RadialVelocityBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<basic.rvz_bibcode\>\"", ",", "\"\<basic.rvz_type\>\""}],
          "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<rvz_bibcode\>\"", ",", "\"\<rvz_type\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<SpectralClass\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.sp_type\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sp_type\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SpectralClassQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.sp_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sp_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SpectralClassBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.sp_bibcode\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sp_bibcode\>\"", "}"}]}]}], "\[RightAssociation]"}],
      ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<MorphologicalClass\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.morph_type\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<morph_type\>\"", "}"}]}]}], "\[RightAssociation]"}],
      ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<MorphologicalClassQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.morph_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<morph_qual\>\"", "}"}]}]}], "\[RightAssociation]"}],
      ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<MorphologicalClassBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.morph_bibcode\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<morph_bibcode\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<GalaxyMajorAxis\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.galdim_majaxis\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<galdim_majaxis\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<GalaxyMinorAxis\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.galdim_minaxis\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<galdim_minaxis\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<GalaxyPositionAngle\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.galdim_angle\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<galdim_angle\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<GalaxySizeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.galdim_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<galdim_qual\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<GalaxySizeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic.galdim_bibcode\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<basic\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<galdim_bibcode\>\"", "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<VMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<v.flux as \\\"V\\\"\>\"", ",", 
          "\"\<v.flux_err as \\\"V_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux v\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<V\>\"", ",", "\"\<V_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<VMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<v.flux as \\\"V\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux v\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<V\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<VMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<v.qual as \\\"V_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux v\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<V_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<VMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<v.bibcode as \\\"V_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux v\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<V_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<UMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<u.flux as \\\"U\\\"\>\"", ",", 
          "\"\<u.flux_err as \\\"U_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux u\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<U\>\"", ",", "\"\<U_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<UMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<u.flux as \\\"U\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux u\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<U\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<UMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<u.qual as \\\"U_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux u\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<U_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<UMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<u.bibcode as \\\"U_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux u\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<U_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",",
      "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<BMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<b.flux as \\\"B\\\"\>\"", ",", 
          "\"\<b.flux_err as \\\"B_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux b\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<B\>\"", ",", "\"\<B_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<BMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<b.flux as \\\"B\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux b\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<B\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<BMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<b.qual as \\\"B_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux b\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<B_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<BMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<b.bibcode as \\\"B_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux b\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<B_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<RMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<r.flux as \\\"R\\\"\>\"", ",", 
          "\"\<r.flux_err as \\\"R_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux r\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<R\>\"", ",", "\"\<R_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<RMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<r.flux as \\\"R\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux r\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<R\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<RMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<r.qual as \\\"R_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux r\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<R_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<RMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<r.bibcode as \\\"R_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux r\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<R_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<IMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<i.flux as \\\"I\\\"\>\"", ",", 
          "\"\<i.flux_err as \\\"I_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux i\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<I\>\"", ",", "\"\<I_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<IMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<i.flux as \\\"I\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux i\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<I\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<IMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<i.qual as \\\"I_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux i\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<I_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<IMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<i.bibcode as \\\"I_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux i\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<I_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<JMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<j.flux as \\\"J\\\"\>\"", ",", 
          "\"\<j.flux_err as \\\"J_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux j\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<J\>\"", ",", "\"\<J_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<JMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<j.flux as \\\"J\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux j\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<J\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<JMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<j.qual as \\\"J_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux j\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<J_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<JMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<j.bibcode as \\\"J_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux j\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<J_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<HMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<h.flux as \\\"H\\\"\>\"", ",", 
          "\"\<h.flux_err as \\\"H_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux h\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<H\>\"", ",", "\"\<H_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<HMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<h.flux as \\\"H\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux h\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<H\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<HMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<h.qual as \\\"H_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux h\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<H_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<HMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<h.bibcode as \\\"H_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux h\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<H_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<KMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k.flux as \\\"K\\\"\>\"", ",", 
          "\"\<k.flux_err as \\\"K_err\\\"\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux k\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<K\>\"", ",", "\"\<K_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<KMagnitude\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<k.flux as \\\"K\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux k\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<K\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<KMagnitudeQuality\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<k.qual as \\\"K_qual\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux k\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<K_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<KMagnitudeBibcode\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<k.bibcode as \\\"K_bib\\\"\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux k\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<K_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",",
      "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<SDSSUMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<sdssu.flux as u\>\"", ",", "\"\<sdssu.flux_err as u_err\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssu\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<u\>\"", ",", "\"\<u_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSUMagnitude\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssu.flux as u\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssu\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<u\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSUMagnitudeQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssu.qual as u_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssu\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<u_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSUMagnitudeBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssu.bibcode as u_bib\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssu\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<u_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<SDSSGMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<sdssg.flux as g\>\"", ",", "\"\<sdssg.flux_err as g_err\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssg\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<g\>\"", ",", "\"\<g_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSGMagnitude\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssg.flux as g\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssg\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<g\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSGMagnitudeQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssg.qual as g_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssg\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<g_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSGMagnitudeBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssg.bibcode as g_bib\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssg\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<g_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<SDSSRMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<sdssr.flux as r\>\"", ",", "\"\<sdssr.flux_err as r_err\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssr\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r\>\"", ",", "\"\<r_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSRMagnitude\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssr.flux as r\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssr\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<r\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSRMagnitudeQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssr.qual as r_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssr\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<r_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSRMagnitudeBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssr.bibcode as r_bib\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssr\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<r_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",",
      "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<SDSSIMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<sdssi.flux as i\>\"", ",", "\"\<sdssi.flux_err as i_err\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssi\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<i\>\"", ",", "\"\<i_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSIMagnitude\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssi.flux as i\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssi\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<i\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSIMagnitudeQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssi.qual as i_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssi\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<i_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSIMagnitudeBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssi.bibcode as i_bib\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssi\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<i_bib\>\"", "}"}]}]}], "\[RightAssociation]"}], ",",
      "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", 
        "\"\<SDSSZMagnitudeWithUncertainty\>\""}], ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<sdssz.flux as z\>\"", ",", "\"\<sdssz.flux_err as z_err\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssz\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<z\>\"", ",", "\"\<z_err\>\""}], "}"}]}]}], 
      "\[RightAssociation]"}], ",", "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSZMagnitude\>\""}],
        ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssz.flux as z\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssz\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<z\>\"", "}"}]}]}], "\[RightAssociation]"}], ",", 
     "\n", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSZMagnitudeQuality\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssz.qual as z_qual\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssz\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<z_qual\>\"", "}"}]}]}], "\[RightAssociation]"}], 
     ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<Property Name\>\"", "\[Rule]", "\"\<SDSSZMagnitudeBibcode\>\""}], 
       ",", 
       RowBox[{"\"\<Simbad Columns Called\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<sdssz.bibcode as z_bib\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Tables Involved\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<flux sdssz\>\"", "}"}]}], ",", 
       RowBox[{"\"\<Simbad Columns Returned\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<z_bib\>\"", "}"}]}]}], "\[RightAssociation]"}]}], 
    "}"}]}], ";"}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{
  3.822070036028308*^9, {3.82207007918421*^9, 3.822070081484845*^9}, {
   3.822074715975224*^9, 3.822074725948855*^9}, 3.82207484879723*^9, {
   3.82207504343635*^9, 3.822075047930154*^9}, {3.822243056426958*^9, 
   3.822243058134183*^9}, {3.822244975255776*^9, 3.8222449963802137`*^9}, {
   3.8223992246502857`*^9, 3.822399242287519*^9}, {3.822402125518468*^9, 
   3.822402217759239*^9}, {3.822402766727749*^9, 3.8224027689554358`*^9}, {
   3.8224032327796783`*^9, 3.8224032349735823`*^9}, {3.822403310851389*^9, 
   3.822403342266711*^9}, {3.822404528695187*^9, 3.822404538089916*^9}, 
   3.822404569161542*^9, {3.822566824508963*^9, 3.822566868900692*^9}, {
   3.822568583581265*^9, 3.822568644157856*^9}, {3.8225703946826153`*^9, 
   3.822570418105754*^9}, {3.822571946880742*^9, 3.82257195286943*^9}, {
   3.822572058098817*^9, 3.8225720606526327`*^9}, {3.823969061019919*^9, 
   3.8239691359337273`*^9}, {3.824637077585631*^9, 3.824637102834148*^9}, {
   3.824639002824267*^9, 3.8246390654488287`*^9}, {3.82463920901886*^9, 
   3.824639214051642*^9}, {3.824640633413662*^9, 3.824640640312522*^9}, {
   3.824640735231283*^9, 3.8246407560846977`*^9}, {3.8246410459246597`*^9, 
   3.8246410705938053`*^9}, 3.824641136631638*^9, {3.824641203297659*^9, 
   3.8246412182860737`*^9}, {3.8246416772661943`*^9, 
   3.8246418339750853`*^9}, {3.824641995578176*^9, 3.8246420319594507`*^9}, {
   3.824642138660948*^9, 3.824642144118754*^9}, {3.8246421880775023`*^9, 
   3.82464225302346*^9}, {3.824645241196231*^9, 3.824645242984178*^9}, {
   3.824647476045052*^9, 3.8246474775289183`*^9}, {3.8353799756773615`*^9, 
   3.8353799780994196`*^9}, {3.835380245418132*^9, 3.835380503017659*^9}, 
   3.839953991237623*^9, 3.839954060168013*^9, {3.839958426628755*^9, 
   3.839958470087936*^9}},
 CellLabel->"In[20]:=",
 CellID->719484069,ExpressionUUID->"a8252b67-4d23-4d42-b867-32162b62f01e"]
}, Closed]],

Cell[CellGroupData[{

Cell["List of Properties available", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824506287479747*^9, 3.824506295377535*^9}, {
  3.8246481530930767`*^9, 3.824648153869274*^9}, {3.8358648241368*^9, 
  3.8358648262949767`*^9}},
 CellLabel->"In[2]:=",
 CellID->274006648,ExpressionUUID->"f1b6325d-9353-4472-8571-0fe5284b8249"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SIMBADData", "[", "\"\<Properties\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Identifiers\>\"", ",", "\"\<MainIdentifier\>\"", ",", 
     "\"\<ObjectTypes\>\"", ",", "\"\<MainObjectType\>\"", ",", 
     "\"\<RightAscensionWithUncertainty\>\"", ",", "\"\<RightAscension\>\"", 
     ",", "\"\<DeclinationWithUncertainty\>\"", ",", "\"\<Declination\>\"", 
     ",", "\"\<PositionErrorEllipse\>\"", ",", 
     "\"\<PositionWavelengthClass\>\"", ",", "\"\<PositionQuality\>\"", ",", 
     "\"\<PositionBibcode\>\"", ",", 
     "\"\<ProperMotionRightAscensionWithUncertainty\>\"", ",", 
     "\"\<ProperMotionRightAscension\>\"", ",", 
     "\"\<ProperMotionDeclinationWithUncertainty\>\"", ",", 
     "\"\<ProperMotionDeclination\>\"", ",", 
     "\"\<ProperMotionErrorEllipse\>\"", ",", "\"\<ProperMotionQuality\>\"", 
     ",", "\"\<ProperMotionBibcode\>\"", ",", 
     "\"\<ParallaxWithUncertainty\>\"", ",", "\"\<Parallax\>\"", ",", 
     "\"\<ParallaxQuality\>\"", ",", "\"\<ParallaxBibcode\>\"", ",", 
     "\"\<RedshiftWithUncertainty\>\"", ",", "\"\<Redshift\>\"", ",", 
     "\"\<RedshiftQuality\>\"", ",", "\"\<RedshiftBibcode\>\"", ",", 
     "\"\<RadialVelocityWithUncertainty\>\"", ",", "\"\<RadialVelocity\>\"", 
     ",", "\"\<RadialVelocityQuality\>\"", ",", 
     "\"\<RadialVelocityBibcode\>\"", ",", "\"\<SpectralClass\>\"", ",", 
     "\"\<SpectralClassQuality\>\"", ",", "\"\<SpectralClassBibcode\>\"", 
     ",", "\"\<MorphologicalClass\>\"", ",", 
     "\"\<MorphologicalClassQuality\>\"", ",", 
     "\"\<MorphologicalClassBibcode\>\"", ",", "\"\<GalaxyMajorAxis\>\"", 
     ",", "\"\<GalaxyMinorAxis\>\"", ",", "\"\<GalaxyPositionAngle\>\"", ",", 
     "\"\<GalaxySizeQuality\>\"", ",", "\"\<GalaxySizeBibcode\>\"", ",", 
     "\"\<VMagnitudeWithUncertainty\>\"", ",", "\"\<VMagnitude\>\"", ",", 
     "\"\<VMagnitudeQuality\>\"", ",", "\"\<VMagnitudeBibcode\>\"", ",", 
     "\"\<UMagnitudeWithUncertainty\>\"", ",", "\"\<UMagnitude\>\"", ",", 
     "\"\<UMagnitudeQuality\>\"", ",", "\"\<UMagnitudeBibcode\>\"", ",", 
     "\"\<BMagnitudeWithUncertainty\>\"", ",", "\"\<BMagnitude\>\"", ",", 
     "\"\<BMagnitudeQuality\>\"", ",", "\"\<BMagnitudeBibcode\>\"", ",", 
     "\"\<RMagnitudeWithUncertainty\>\"", ",", "\"\<RMagnitude\>\"", ",", 
     "\"\<RMagnitudeQuality\>\"", ",", "\"\<RMagnitudeBibcode\>\"", ",", 
     "\"\<IMagnitudeWithUncertainty\>\"", ",", "\"\<IMagnitude\>\"", ",", 
     "\"\<IMagnitudeQuality\>\"", ",", "\"\<IMagnitudeBibcode\>\"", ",", 
     "\"\<JMagnitudeWithUncertainty\>\"", ",", "\"\<JMagnitude\>\"", ",", 
     "\"\<JMagnitudeQuality\>\"", ",", "\"\<JMagnitudeBibcode\>\"", ",", 
     "\"\<HMagnitudeWithUncertainty\>\"", ",", "\"\<HMagnitude\>\"", ",", 
     "\"\<HMagnitudeQuality\>\"", ",", "\"\<HMagnitudeBibcode\>\"", ",", 
     "\"\<KMagnitudeWithUncertainty\>\"", ",", "\"\<KMagnitude\>\"", ",", 
     "\"\<KMagnitudeQuality\>\"", ",", "\"\<KMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSUMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSUMagnitude\>\"", 
     ",", "\"\<SDSSUMagnitudeQuality\>\"", ",", 
     "\"\<SDSSUMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSGMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSGMagnitude\>\"", 
     ",", "\"\<SDSSGMagnitudeQuality\>\"", ",", 
     "\"\<SDSSGMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSRMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSRMagnitude\>\"", 
     ",", "\"\<SDSSRMagnitudeQuality\>\"", ",", 
     "\"\<SDSSRMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSIMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSIMagnitude\>\"", 
     ",", "\"\<SDSSIMagnitudeQuality\>\"", ",", 
     "\"\<SDSSIMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSZMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSZMagnitude\>\"", 
     ",", "\"\<SDSSZMagnitudeQuality\>\"", ",", 
     "\"\<SDSSZMagnitudeBibcode\>\"", ",", "\"\<AllMagnitudes\>\"", ",", 
     "\"\<AllMagnitudesWithUncertainty\>\"", ",", 
     "\"\<AllMagnitudesBibcode\>\"", ",", "\"\<AllMagnitudesQuality\>\""}], 
    "}"}]}], ";"}]], "Code",
 TaggingRules->{},
 CellLabel->"In[21]:=",
 CellID->783321540,ExpressionUUID->"9527f1ba-298f-4610-b0b9-ed71d86a9afd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonCompoundProperties", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Identifiers\>\"", ",", "\"\<MainIdentifier\>\"", ",", 
     "\"\<ObjectTypes\>\"", ",", "\"\<MainObjectType\>\"", ",", 
     "\"\<RightAscensionWithUncertainty\>\"", ",", "\"\<RightAscension\>\"", 
     ",", "\"\<DeclinationWithUncertainty\>\"", ",", "\"\<Declination\>\"", 
     ",", "\"\<PositionErrorEllipse\>\"", ",", 
     "\"\<PositionWavelengthClass\>\"", ",", "\"\<PositionQuality\>\"", ",", 
     "\"\<PositionBibcode\>\"", ",", 
     "\"\<ProperMotionRightAscensionWithUncertainty\>\"", ",", 
     "\"\<ProperMotionRightAscension\>\"", ",", 
     "\"\<ProperMotionDeclinationWithUncertainty\>\"", ",", 
     "\"\<ProperMotionDeclination\>\"", ",", 
     "\"\<ProperMotionErrorEllipse\>\"", ",", "\"\<ProperMotionQuality\>\"", 
     ",", "\"\<ProperMotionBibcode\>\"", ",", 
     "\"\<ParallaxWithUncertainty\>\"", ",", "\"\<Parallax\>\"", ",", 
     "\"\<ParallaxQuality\>\"", ",", "\"\<ParallaxBibcode\>\"", ",", 
     "\"\<RedshiftWithUncertainty\>\"", ",", "\"\<Redshift\>\"", ",", 
     "\"\<RedshiftQuality\>\"", ",", "\"\<RedshiftBibcode\>\"", ",", 
     "\"\<RadialVelocityWithUncertainty\>\"", ",", "\"\<RadialVelocity\>\"", 
     ",", "\"\<RadialVelocityQuality\>\"", ",", 
     "\"\<RadialVelocityBibcode\>\"", ",", "\"\<SpectralClass\>\"", ",", 
     "\"\<SpectralClassQuality\>\"", ",", "\"\<SpectralClassBibcode\>\"", 
     ",", "\"\<MorphologicalClass\>\"", ",", 
     "\"\<MorphologicalClassQuality\>\"", ",", 
     "\"\<MorphologicalClassBibcode\>\"", ",", "\"\<GalaxyMajorAxis\>\"", 
     ",", "\"\<GalaxyMinorAxis\>\"", ",", "\"\<GalaxyPositionAngle\>\"", ",", 
     "\"\<GalaxySizeQuality\>\"", ",", "\"\<GalaxySizeBibcode\>\"", ",", 
     "\"\<VMagnitudeWithUncertainty\>\"", ",", "\"\<VMagnitude\>\"", ",", 
     "\"\<VMagnitudeQuality\>\"", ",", "\"\<VMagnitudeBibcode\>\"", ",", 
     "\"\<UMagnitudeWithUncertainty\>\"", ",", "\"\<UMagnitude\>\"", ",", 
     "\"\<UMagnitudeQuality\>\"", ",", "\"\<UMagnitudeBibcode\>\"", ",", 
     "\"\<BMagnitudeWithUncertainty\>\"", ",", "\"\<BMagnitude\>\"", ",", 
     "\"\<BMagnitudeQuality\>\"", ",", "\"\<BMagnitudeBibcode\>\"", ",", 
     "\"\<RMagnitudeWithUncertainty\>\"", ",", "\"\<RMagnitude\>\"", ",", 
     "\"\<RMagnitudeQuality\>\"", ",", "\"\<RMagnitudeBibcode\>\"", ",", 
     "\"\<IMagnitudeWithUncertainty\>\"", ",", "\"\<IMagnitude\>\"", ",", 
     "\"\<IMagnitudeQuality\>\"", ",", "\"\<IMagnitudeBibcode\>\"", ",", 
     "\"\<JMagnitudeWithUncertainty\>\"", ",", "\"\<JMagnitude\>\"", ",", 
     "\"\<JMagnitudeQuality\>\"", ",", "\"\<JMagnitudeBibcode\>\"", ",", 
     "\"\<HMagnitudeWithUncertainty\>\"", ",", "\"\<HMagnitude\>\"", ",", 
     "\"\<HMagnitudeQuality\>\"", ",", "\"\<HMagnitudeBibcode\>\"", ",", 
     "\"\<KMagnitudeWithUncertainty\>\"", ",", "\"\<KMagnitude\>\"", ",", 
     "\"\<KMagnitudeQuality\>\"", ",", "\"\<KMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSUMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSUMagnitude\>\"", 
     ",", "\"\<SDSSUMagnitudeQuality\>\"", ",", 
     "\"\<SDSSUMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSGMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSGMagnitude\>\"", 
     ",", "\"\<SDSSGMagnitudeQuality\>\"", ",", 
     "\"\<SDSSGMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSRMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSRMagnitude\>\"", 
     ",", "\"\<SDSSRMagnitudeQuality\>\"", ",", 
     "\"\<SDSSRMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSIMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSIMagnitude\>\"", 
     ",", "\"\<SDSSIMagnitudeQuality\>\"", ",", 
     "\"\<SDSSIMagnitudeBibcode\>\"", ",", 
     "\"\<SDSSZMagnitudeWithUncertainty\>\"", ",", "\"\<SDSSZMagnitude\>\"", 
     ",", "\"\<SDSSZMagnitudeQuality\>\"", ",", 
     "\"\<SDSSZMagnitudeBibcode\>\""}], "}"}]}], ";"}]], "Code",
 TaggingRules->{},
 CellLabel->"In[22]:=",
 CellID->605896283,ExpressionUUID->"3cc6a43e-53d5-4f74-b00c-01dfd3c9c7a1"],

Cell["Properties that call other properties", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.824645853729376*^9, 3.82464586103196*^9}},
 CellID->790097859,ExpressionUUID->"2237f39d-2fa2-4e42-89d7-dc1b9e2d58b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compoundProperties", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<AllMagnitudes\>\"", " ", "\[Rule]", " ", 
      RowBox[{"List", "[", 
       RowBox[{
       "\"\<VMagnitude\>\"", ",", "\"\<UMagnitude\>\"", ",", 
        "\"\<BMagnitude\>\"", ",", "\"\<RMagnitude\>\"", ",", 
        "\"\<IMagnitude\>\"", ",", "\"\<JMagnitude\>\"", ",", 
        "\"\<HMagnitude\>\"", ",", "\"\<KMagnitude\>\"", ",", 
        "\"\<SDSSUMagnitude\>\"", ",", "\"\<SDSSGMagnitude\>\"", ",", 
        "\"\<SDSSRMagnitude\>\"", ",", "\"\<SDSSIMagnitude\>\"", ",", 
        "\"\<SDSSZMagnitude\>\""}], "]"}]}], ",", 
     RowBox[{"\"\<AllMagnitudesWithUncertainty\>\"", "\[Rule]", 
      RowBox[{"Sequence", "[", 
       RowBox[{
       "\"\<VMagnitudeWithUncertainty\>\"", ",", 
        "\"\<UMagnitudeWithUncertainty\>\"", ",", 
        "\"\<BMagnitudeWithUncertainty\>\"", ",", 
        "\"\<RMagnitudeWithUncertainty\>\"", ",", 
        "\"\<IMagnitudeWithUncertainty\>\"", ",", 
        "\"\<JMagnitudeWithUncertainty\>\"", ",", 
        "\"\<HMagnitudeWithUncertainty\>\"", ",", 
        "\"\<KMagnitudeWithUncertainty\>\"", ",", 
        "\"\<SDSSUMagnitudeWithUncertainty\>\"", ",", 
        "\"\<SDSSGMagnitudeWithUncertainty\>\"", ",", 
        "\"\<SDSSRMagnitudeWithUncertainty\>\"", ",", 
        "\"\<SDSSIMagnitudeWithUncertainty\>\"", ",", 
        "\"\<SDSSZMagnitudeWithUncertainty\>\""}], "]"}]}], ",", 
     RowBox[{"\"\<AllMagnitudesQuality\>\"", "\[Rule]", 
      RowBox[{"Sequence", "[", 
       RowBox[{
       "\"\<VMagnitudeQuality\>\"", ",", "\"\<UMagnitudeQuality\>\"", ",", 
        "\"\<BMagnitudeQuality\>\"", ",", "\"\<RMagnitudeQuality\>\"", ",", 
        "\"\<IMagnitudeQuality\>\"", ",", "\"\<JMagnitudeQuality\>\"", ",", 
        "\"\<HMagnitudeQuality\>\"", ",", "\"\<KMagnitudeQuality\>\"", ",", 
        "\"\<SDSSUMagnitudeQuality\>\"", ",", "\"\<SDSSGMagnitudeQuality\>\"",
         ",", "\"\<SDSSRMagnitudeQuality\>\"", ",", 
        "\"\<SDSSIMagnitudeQuality\>\"", ",", 
        "\"\<SDSSZMagnitudeQuality\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<AllMagnitudesBibcode\>\"", " ", "\[Rule]", " ", 
      RowBox[{"List", "[", 
       RowBox[{
       "\"\<VMagnitudeBibcode\>\"", ",", "\"\<UMagnitudeBibcode\>\"", ",", 
        "\"\<BMagnitudeBibcode\>\"", ",", "\"\<RMagnitudeBibcode\>\"", ",", 
        "\"\<IMagnitudeBibcode\>\"", ",", "\"\<JMagnitudeBibcode\>\"", ",", 
        "\"\<HMagnitudeBibcode\>\"", ",", "\"\<KMagnitudeBibcode\>\"", ",", 
        "\"\<SDSSUMagnitudeBibcode\>\"", ",", "\"\<SDSSGMagnitudeBibcode\>\"",
         ",", "\"\<SDSSRMagnitudeBibcode\>\"", ",", 
        "\"\<SDSSIMagnitudeBibcode\>\"", ",", 
        "\"\<SDSSZMagnitudeBibcode\>\""}], "]"}]}], ",", "\n", 
     RowBox[{"All", " ", "\[Rule]", " ", "nonCompoundProperties"}]}], "}"}]}],
   ";"}]], "Code",
 TaggingRules->{},
 CellLabel->"In[23]:=",
 CellID->32444771,ExpressionUUID->"a5b55a5e-62e4-49fc-88f5-81681f37732d"]
}, Closed]],

Cell[CellGroupData[{

Cell["SIMBAD Greek letters coding", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.823255332006152*^9, 3.823255349127112*^9}, {
  3.824506240513729*^9, 3.824506242337331*^9}},
 CellLabel->"In[4]:=",
 CellID->900399324,ExpressionUUID->"5fd026fa-31ec-444d-92b6-c51075f75607"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "coding", " ", "was", " ", "obtained", " ", "from", " ", 
    "SIMBAD", " ", "web", " ", "page"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"simbadGreekCoding", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", "\"\<alf\>\""}], ",", 
      RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", "\"\<bet\>\""}], ",", 
      RowBox[{"\"\<\[Gamma]\>\"", "\[Rule]", "\"\<gam\>\""}], ",", 
      RowBox[{"\"\<\[Delta]\>\"", "\[Rule]", "\"\<del\>\""}], ",", 
      RowBox[{"\"\<\[Epsilon]\>\"", "\[Rule]", "\"\<eps\>\""}], ",", 
      RowBox[{"\"\<\[Zeta]\>\"", "\[Rule]", "\"\<zet\>\""}], ",", 
      RowBox[{"\"\<\[Eta]\>\"", "\[Rule]", "\"\<eta\>\""}], ",", 
      RowBox[{"\"\<\[Theta]\>\"", "\[Rule]", "\"\<tet\>\""}], ",", "\n", 
      RowBox[{"\"\<\[Iota]\>\"", "\[Rule]", "\"\<iot\>\""}], ",", 
      RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", "\"\<kap\>\""}], ",", 
      RowBox[{"\"\<\[Lambda]\>\"", "\[Rule]", "\"\<lam\>\""}], ",", 
      RowBox[{"\"\<\[Mu]\>\"", "\[Rule]", "\"\<mu.\>\""}], ",", 
      RowBox[{"\"\<\[Nu]\>\"", "\[Rule]", "\"\<nu.\>\""}], ",", 
      RowBox[{"\"\<\[Xi]\>\"", "\[Rule]", "\"\<ksi\>\""}], ",", 
      RowBox[{"\"\<\[Omicron]\>\"", "\[Rule]", "\"\<omi\>\""}], ",", 
      RowBox[{"\"\<\[Pi]\>\"", "\[Rule]", "\"\<pi.\>\""}], ",", "\n", 
      RowBox[{"\"\<\[Rho]\>\"", "\[Rule]", "\"\<rho\>\""}], ",", 
      RowBox[{"\"\<\[Sigma]\>\"", "\[Rule]", "\"\<sig\>\""}], ",", 
      RowBox[{"\"\<\[Tau]\>\"", "\[Rule]", "\"\<tau\>\""}], ",", 
      RowBox[{"\"\<\[Upsilon]\>\"", "\[Rule]", "\"\<ups\>\""}], ",", 
      RowBox[{"\"\<\[Phi]\>\"", "\[Rule]", "\"\<phi\>\""}], ",", 
      RowBox[{"\"\<\[Chi]\>\"", "\[Rule]", "\"\<khi\>\""}], ",", 
      RowBox[{"\"\<\[Psi]\>\"", "\[Rule]", "\"\<psi\>\""}], ",", 
      RowBox[{"\"\<\[Omega]\>\"", "\[Rule]", "\"\<ome\>\""}]}], "}"}]}], 
   ";"}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[24]:=",
 CellID->325835801,ExpressionUUID->"bc5f6ee2-ab0b-41e4-b782-881b442cdc0c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get the meaning of each object type of SIMBAD", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.822242206538423*^9, 3.82224225052073*^9}, {
  3.822242327059918*^9, 3.822242330706765*^9}, {3.835373328262492*^9, 
  3.8353733283074465`*^9}},
 CellLabel->"In[2]:=",
 CellID->643070393,ExpressionUUID->"3fa0b281-ac9b-4b28-9e4f-b83cf2d68c3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "nomenclature", " ", "was", " ", "obtained", " ", "from", " ",
     "the", " ", "SIMBAD", " ", "web", " ", "page"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"otypeDescription", " ", "=", " ", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<?\>\"", "\[Rule]", "\"\<Object of unknown nature\>\""}], 
      ",", 
      RowBox[{"\"\<ev\>\"", "\[Rule]", "\"\<transient event\>\""}], ",", 
      RowBox[{"\"\<Rad\>\"", "\[Rule]", "\"\<Radio-source\>\""}], ",", 
      RowBox[{"\"\<mR\>\"", "\[Rule]", "\"\<metric Radio-source\>\""}], ",", 
      RowBox[{"\"\<cm\>\"", "\[Rule]", "\"\<centimetric Radio-source\>\""}], 
      ",", 
      RowBox[{"\"\<mm\>\"", "\[Rule]", "\"\<millimetric Radio-source\>\""}], 
      ",", 
      RowBox[{"\"\<smm\>\"", "\[Rule]", "\"\<sub-millimetric source\>\""}], 
      ",", 
      RowBox[{"\"\<HI\>\"", "\[Rule]", "\"\<HI (21cm) source\>\""}], ",", 
      RowBox[{"\"\<rB\>\"", "\[Rule]", "\"\<radio Burst\>\""}], ",", 
      RowBox[{"\"\<Mas\>\"", "\[Rule]", "\"\<Maser\>\""}], ",", 
      RowBox[{"\"\<IR\>\"", "\[Rule]", "\"\<Infra-Red source\>\""}], ",", 
      RowBox[{
      "\"\<FIR\>\"", "\[Rule]", 
       "\"\<Far-IR source  (\\\\lambda >= 30 {\\\\mu}m)\>\""}], ",", 
      RowBox[{
      "\"\<NIR\>\"", "\[Rule]", 
       "\"\<Near-IR source (\\\\lambda < 10 {\\\\mu}m)\>\""}], ",", 
      RowBox[{"\"\<red\>\"", "\[Rule]", "\"\<Very red source\>\""}], ",", 
      RowBox[{"\"\<ERO\>\"", "\[Rule]", "\"\<Extremely Red Object\>\""}], ",", 
      RowBox[{"\"\<blu\>\"", "\[Rule]", "\"\<Blue object\>\""}], ",", 
      RowBox[{"\"\<UV\>\"", "\[Rule]", "\"\<UV-emission source\>\""}], ",", 
      RowBox[{"\"\<X\>\"", "\[Rule]", "\"\<X-ray source\>\""}], ",", 
      RowBox[{
      "\"\<UX?\>\"", "\[Rule]", "\"\<Ultra-luminous X-ray candidate\>\""}], 
      ",", 
      RowBox[{
      "\"\<ULX\>\"", "\[Rule]", "\"\<Ultra-luminous X-ray source\>\""}], ",", 
      RowBox[{"\"\<gam\>\"", "\[Rule]", "\"\<gamma-ray source\>\""}], ",", 
      RowBox[{"\"\<gB\>\"", "\[Rule]", "\"\<gamma-ray Burst\>\""}], ",", 
      RowBox[{"\"\<grv\>\"", "\[Rule]", "\"\<Gravitational Source\>\""}], ",", 
      RowBox[{"\"\<Lev\>\"", "\[Rule]", "\"\<(Micro)Lensing Event\>\""}], ",", 
      RowBox[{
      "\"\<LS?\>\"", "\[Rule]", 
       "\"\<Possible gravitational lens System\>\""}], ",", 
      RowBox[{
      "\"\<Le?\>\"", "\[Rule]", "\"\<Possible gravitational lens\>\""}], ",", 
      RowBox[{
      "\"\<LI?\>\"", "\[Rule]", 
       "\"\<Possible gravitationally lensed image\>\""}], ",", 
      RowBox[{"\"\<gLe\>\"", "\[Rule]", "\"\<Gravitational Lens\>\""}], ",", 
      RowBox[{
      "\"\<gLS\>\"", "\[Rule]", 
       "\"\<Gravitational Lens System (lens+images)\>\""}], ",", 
      RowBox[{"\"\<..?\>\"", "\[Rule]", "\"\<Candidate objects\>\""}], ",", 
      RowBox[{"\"\<G?\>\"", "\[Rule]", "\"\<Possible Galaxy\>\""}], ",", 
      RowBox[{
      "\"\<SC?\>\"", "\[Rule]", "\"\<Possible Supercluster of Galaxies\>\""}],
       ",", 
      RowBox[{
      "\"\<C?G\>\"", "\[Rule]", "\"\<Possible Cluster of Galaxies\>\""}], ",", 
      RowBox[{
      "\"\<Gr?\>\"", "\[Rule]", "\"\<Possible Group of Galaxies\>\""}], ",", 
      RowBox[{"\"\<**?\>\"", "\[Rule]", "\"\<Physical Binary Candidate\>\""}],
       ",", 
      RowBox[{
      "\"\<EB?\>\"", "\[Rule]", "\"\<Eclipsing Binary Candidate\>\""}], ",", 
      RowBox[{"\"\<Sy?\>\"", "\[Rule]", "\"\<Symbiotic Star Candidate\>\""}], 
      ",", 
      RowBox[{
      "\"\<CV?\>\"", "\[Rule]", "\"\<Cataclysmic Binary Candidate\>\""}], ",", 
      RowBox[{"\"\<No?\>\"", "\[Rule]", "\"\<Nova Candidate\>\""}], ",", 
      RowBox[{"\"\<XB?\>\"", "\[Rule]", "\"\<X-ray binary Candidate\>\""}], 
      ",", 
      RowBox[{
      "\"\<LX?\>\"", "\[Rule]", "\"\<Low-Mass X-ray binary Candidate\>\""}], 
      ",", 
      RowBox[{
      "\"\<HX?\>\"", "\[Rule]", "\"\<High-Mass X-ray binary Candidate\>\""}], 
      ",", 
      RowBox[{"\"\<Pec?\>\"", "\[Rule]", "\"\<Possible Peculiar Star\>\""}], 
      ",", 
      RowBox[{
      "\"\<Y*?\>\"", "\[Rule]", "\"\<Young Stellar Object Candidate\>\""}], 
      ",", 
      RowBox[{
      "\"\<pr?\>\"", "\[Rule]", "\"\<Pre-main sequence Star Candidate\>\""}], 
      ",", 
      RowBox[{"\"\<TT?\>\"", "\[Rule]", "\"\<T Tau star Candidate\>\""}], ",", 
      RowBox[{"\"\<C*?\>\"", "\[Rule]", "\"\<Possible Carbon Star\>\""}], ",", 
      RowBox[{"\"\<S*?\>\"", "\[Rule]", "\"\<Possible S Star\>\""}], ",", 
      RowBox[{
      "\"\<OH?\>\"", "\[Rule]", 
       "\"\<Possible Star with envelope of OH/IR type\>\""}], ",", 
      RowBox[{
      "\"\<CH?\>\"", "\[Rule]", 
       "\"\<Possible Star with envelope of CH type\>\""}], ",", 
      RowBox[{"\"\<WR?\>\"", "\[Rule]", "\"\<Possible Wolf-Rayet Star\>\""}], 
      ",", 
      RowBox[{"\"\<Be?\>\"", "\[Rule]", "\"\<Possible Be Star\>\""}], ",", 
      RowBox[{
      "\"\<Ae?\>\"", "\[Rule]", "\"\<Possible Herbig Ae/Be Star\>\""}], ",", 
      RowBox[{
      "\"\<HB?\>\"", "\[Rule]", "\"\<Possible Horizontal Branch Star\>\""}], 
      ",", 
      RowBox[{
      "\"\<RR?\>\"", "\[Rule]", "\"\<Possible Star of RR Lyr type\>\""}], ",", 
      RowBox[{"\"\<Ce?\>\"", "\[Rule]", "\"\<Possible Cepheid\>\""}], ",", 
      RowBox[{
      "\"\<RB?\>\"", "\[Rule]", "\"\<Possible Red Giant Branch star\>\""}], 
      ",", 
      RowBox[{"\"\<sg?\>\"", "\[Rule]", "\"\<Possible Supergiant star\>\""}], 
      ",", 
      RowBox[{
      "\"\<s?r\>\"", "\[Rule]", "\"\<Possible Red supergiant star\>\""}], ",", 
      RowBox[{
      "\"\<s?y\>\"", "\[Rule]", "\"\<Possible Yellow supergiant star\>\""}], 
      ",", 
      RowBox[{
      "\"\<s?b\>\"", "\[Rule]", "\"\<Possible Blue supergiant star\>\""}], 
      ",", 
      RowBox[{
      "\"\<AB?\>\"", "\[Rule]", 
       "\"\<Asymptotic Giant Branch Star candidate\>\""}], ",", 
      RowBox[{
      "\"\<LP?\>\"", "\[Rule]", "\"\<Long Period Variable candidate\>\""}], 
      ",", 
      RowBox[{"\"\<Mi?\>\"", "\[Rule]", "\"\<Mira candidate\>\""}], ",", 
      RowBox[{
      "\"\<sv?\>\"", "\[Rule]", "\"\<Semi-regular variable candidate\>\""}], 
      ",", 
      RowBox[{"\"\<pA?\>\"", "\[Rule]", "\"\<Post-AGB Star Candidate\>\""}], 
      ",", 
      RowBox[{
      "\"\<BS?\>\"", "\[Rule]", "\"\<Candidate blue Straggler Star\>\""}], 
      ",", 
      RowBox[{"\"\<WD?\>\"", "\[Rule]", "\"\<White Dwarf Candidate\>\""}], 
      ",", 
      RowBox[{"\"\<N*?\>\"", "\[Rule]", "\"\<Neutron Star Candidate\>\""}], 
      ",", 
      RowBox[{"\"\<BH?\>\"", "\[Rule]", "\"\<Black Hole Candidate\>\""}], ",", 
      RowBox[{"\"\<SN?\>\"", "\[Rule]", "\"\<SuperNova Candidate\>\""}], ",", 
      RowBox[{"\"\<LM?\>\"", "\[Rule]", "\"\<Low-mass star candidate\>\""}], 
      ",", 
      RowBox[{"\"\<BD?\>\"", "\[Rule]", "\"\<Brown Dwarf Candidate\>\""}], 
      ",", 
      RowBox[{"\"\<mul\>\"", "\[Rule]", "\"\<Composite object\>\""}], ",", 
      RowBox[{"\"\<reg\>\"", "\[Rule]", "\"\<Region defined in the sky\>\""}],
       ",", 
      RowBox[{
      "\"\<vid\>\"", "\[Rule]", "\"\<Underdense region of the Universe\>\""}],
       ",", 
      RowBox[{"\"\<SCG\>\"", "\[Rule]", "\"\<Supercluster of Galaxies\>\""}], 
      ",", 
      RowBox[{"\"\<ClG\>\"", "\[Rule]", "\"\<Cluster of Galaxies\>\""}], ",", 
      RowBox[{"\"\<GrG\>\"", "\[Rule]", "\"\<Group of Galaxies\>\""}], ",", 
      RowBox[{"\"\<CGG\>\"", "\[Rule]", "\"\<Compact Group of Galaxies\>\""}],
       ",", 
      RowBox[{"\"\<PaG\>\"", "\[Rule]", "\"\<Pair of Galaxies\>\""}], ",", 
      RowBox[{"\"\<IG\>\"", "\[Rule]", "\"\<Interacting Galaxies\>\""}], ",", 
      RowBox[{
      "\"\<C?*\>\"", "\[Rule]", "\"\<Possible (open) star cluster\>\""}], ",", 
      RowBox[{"\"\<Gl?\>\"", "\[Rule]", "\"\<Possible Globular Cluster\>\""}],
       ",", 
      RowBox[{"\"\<Cl*\>\"", "\[Rule]", "\"\<Cluster of Stars\>\""}], ",", 
      RowBox[{"\"\<GlC\>\"", "\[Rule]", "\"\<Globular Cluster\>\""}], ",", 
      RowBox[{"\"\<OpC\>\"", "\[Rule]", "\"\<Open (galactic) Cluster\>\""}], 
      ",", 
      RowBox[{"\"\<As*\>\"", "\[Rule]", "\"\<Association of Stars\>\""}], ",", 
      RowBox[{"\"\<St*\>\"", "\[Rule]", "\"\<Stellar Stream\>\""}], ",", 
      RowBox[{"\"\<MGr\>\"", "\[Rule]", "\"\<Moving Group\>\""}], ",", 
      RowBox[{"\"\<**\>\"", "\[Rule]", "\"\<Double or multiple star\>\""}], 
      ",", 
      RowBox[{"\"\<EB*\>\"", "\[Rule]", "\"\<Eclipsing binary\>\""}], ",", 
      RowBox[{
      "\"\<Al*\>\"", "\[Rule]", 
       "\"\<Eclipsing binary of Algol type (detached)\>\""}], ",", 
      RowBox[{
      "\"\<bL*\>\"", "\[Rule]", 
       "\"\<Eclipsing binary of beta Lyr type (semi-detached)\>\""}], ",", 
      RowBox[{
      "\"\<WU*\>\"", "\[Rule]", 
       "\"\<Eclipsing binary of W UMa type (contact binary)\>\""}], ",", 
      RowBox[{
      "\"\<EP*\>\"", "\[Rule]", 
       "\"\<Star showing eclipses by its planet\>\""}], ",", 
      RowBox[{"\"\<SB*\>\"", "\[Rule]", "\"\<Spectroscopic binary\>\""}], ",", 
      RowBox[{"\"\<El*\>\"", "\[Rule]", "\"\<Ellipsoidal variable Star\>\""}],
       ",", 
      RowBox[{"\"\<Sy*\>\"", "\[Rule]", "\"\<Symbiotic Star\>\""}], ",", 
      RowBox[{"\"\<CV*\>\"", "\[Rule]", "\"\<Cataclysmic Variable Star\>\""}],
       ",", 
      RowBox[{
      "\"\<DQ*\>\"", "\[Rule]", 
       "\"\<CV DQ Her type (intermediate polar)\>\""}], ",", 
      RowBox[{"\"\<AM*\>\"", "\[Rule]", "\"\<CV of AM Her type (polar)\>\""}],
       ",", 
      RowBox[{"\"\<NL*\>\"", "\[Rule]", "\"\<Nova-like Star\>\""}], ",", 
      RowBox[{"\"\<No*\>\"", "\[Rule]", "\"\<Nova\>\""}], ",", 
      RowBox[{"\"\<DN*\>\"", "\[Rule]", "\"\<Dwarf Nova\>\""}], ",", 
      RowBox[{"\"\<XB*\>\"", "\[Rule]", "\"\<X-ray Binary\>\""}], ",", 
      RowBox[{"\"\<LXB\>\"", "\[Rule]", "\"\<Low Mass X-ray Binary\>\""}], 
      ",", 
      RowBox[{"\"\<HXB\>\"", "\[Rule]", "\"\<High Mass X-ray Binary\>\""}], 
      ",", 
      RowBox[{"\"\<ISM\>\"", "\[Rule]", "\"\<Interstellar matter\>\""}], ",", 
      RowBox[{"\"\<PoC\>\"", "\[Rule]", "\"\<Part of Cloud\>\""}], ",", 
      RowBox[{"\"\<PN?\>\"", "\[Rule]", "\"\<Possible Planetary Nebula\>\""}],
       ",", 
      RowBox[{"\"\<CGb\>\"", "\[Rule]", "\"\<Cometary Globule\>\""}], ",", 
      RowBox[{"\"\<bub\>\"", "\[Rule]", "\"\<Bubble\>\""}], ",", 
      RowBox[{"\"\<EmO\>\"", "\[Rule]", "\"\<Emission Object\>\""}], ",", 
      RowBox[{"\"\<Cld\>\"", "\[Rule]", "\"\<Cloud\>\""}], ",", 
      RowBox[{"\"\<GNe\>\"", "\[Rule]", "\"\<Galactic Nebula\>\""}], ",", 
      RowBox[{"\"\<BNe\>\"", "\[Rule]", "\"\<Bright Nebula\>\""}], ",", 
      RowBox[{"\"\<DNe\>\"", "\[Rule]", "\"\<Dark Cloud (nebula)\>\""}], ",", 
      RowBox[{"\"\<RNe\>\"", "\[Rule]", "\"\<Reflection Nebula\>\""}], ",", 
      RowBox[{"\"\<MoC\>\"", "\[Rule]", "\"\<Molecular Cloud\>\""}], ",", 
      RowBox[{
      "\"\<glb\>\"", "\[Rule]", "\"\<Globule (low-mass dark cloud)\>\""}], 
      ",", 
      RowBox[{"\"\<cor\>\"", "\[Rule]", "\"\<Dense core\>\""}], ",", 
      RowBox[{"\"\<SFR\>\"", "\[Rule]", "\"\<Star forming region\>\""}], ",", 
      RowBox[{"\"\<HVC\>\"", "\[Rule]", "\"\<High-velocity Cloud\>\""}], ",", 
      RowBox[{"\"\<HII\>\"", "\[Rule]", "\"\<HII (ionized) region\>\""}], ",", 
      RowBox[{"\"\<PN\>\"", "\[Rule]", "\"\<Planetary Nebula\>\""}], ",", 
      RowBox[{"\"\<sh\>\"", "\[Rule]", "\"\<HI shell\>\""}], ",", 
      RowBox[{
      "\"\<SR?\>\"", "\[Rule]", "\"\<SuperNova Remnant Candidate\>\""}], ",", 
      RowBox[{"\"\<SNR\>\"", "\[Rule]", "\"\<SuperNova Remnant\>\""}], ",", 
      RowBox[{"\"\<cir\>\"", "\[Rule]", "\"\<CircumStellar matter\>\""}], ",", 
      RowBox[{"\"\<of?\>\"", "\[Rule]", "\"\<Outflow candidate\>\""}], ",", 
      RowBox[{"\"\<out\>\"", "\[Rule]", "\"\<Outflow\>\""}], ",", 
      RowBox[{"\"\<HH\>\"", "\[Rule]", "\"\<Herbig-Haro Object\>\""}], ",", 
      RowBox[{"\"\<*\>\"", "\[Rule]", "\"\<Star\>\""}], ",", 
      RowBox[{"\"\<*iC\>\"", "\[Rule]", "\"\<Star in Cluster\>\""}], ",", 
      RowBox[{"\"\<*iN\>\"", "\[Rule]", "\"\<Star in Nebula\>\""}], ",", 
      RowBox[{"\"\<*iA\>\"", "\[Rule]", "\"\<Star in Association\>\""}], ",", 
      RowBox[{"\"\<*i*\>\"", "\[Rule]", "\"\<Star in double system\>\""}], 
      ",", 
      RowBox[{
      "\"\<V*?\>\"", "\[Rule]", "\"\<Star suspected of Variability\>\""}], 
      ",", 
      RowBox[{"\"\<Pe*\>\"", "\[Rule]", "\"\<Peculiar Star\>\""}], ",", 
      RowBox[{"\"\<HB*\>\"", "\[Rule]", "\"\<Horizontal Branch Star\>\""}], 
      ",", 
      RowBox[{"\"\<Y*O\>\"", "\[Rule]", "\"\<Young Stellar Object\>\""}], ",", 
      RowBox[{"\"\<Ae*\>\"", "\[Rule]", "\"\<Herbig Ae/Be star\>\""}], ",", 
      RowBox[{"\"\<Em*\>\"", "\[Rule]", "\"\<Emission-line Star\>\""}], ",", 
      RowBox[{"\"\<Be*\>\"", "\[Rule]", "\"\<Be Star\>\""}], ",", 
      RowBox[{"\"\<BS*\>\"", "\[Rule]", "\"\<Blue Straggler Star\>\""}], ",", 
      RowBox[{"\"\<RG*\>\"", "\[Rule]", "\"\<Red Giant Branch star\>\""}], 
      ",", 
      RowBox[{
      "\"\<AB*\>\"", "\[Rule]", 
       "\"\<Asymptotic Giant Branch Star (He-burning)\>\""}], ",", 
      RowBox[{"\"\<C*\>\"", "\[Rule]", "\"\<Carbon Star\>\""}], ",", 
      RowBox[{"\"\<S*\>\"", "\[Rule]", "\"\<S Star\>\""}], ",", 
      RowBox[{"\"\<sg*\>\"", "\[Rule]", "\"\<Evolved supergiant star\>\""}], 
      ",", 
      RowBox[{"\"\<s*r\>\"", "\[Rule]", "\"\<Red supergiant star\>\""}], ",", 
      RowBox[{"\"\<s*y\>\"", "\[Rule]", "\"\<Yellow supergiant star\>\""}], 
      ",", 
      RowBox[{"\"\<s*b\>\"", "\[Rule]", "\"\<Blue supergiant star\>\""}], ",", 
      RowBox[{"\"\<pA*\>\"", "\[Rule]", "\"\<Post-AGB Star (proto-PN)\>\""}], 
      ",", 
      RowBox[{"\"\<WD*\>\"", "\[Rule]", "\"\<White Dwarf\>\""}], ",", 
      RowBox[{"\"\<ZZ*\>\"", "\[Rule]", "\"\<Pulsating White Dwarf\>\""}], 
      ",", 
      RowBox[{
      "\"\<LM*\>\"", "\[Rule]", "\"\<Low-mass star (M<1solMass)\>\""}], ",", 
      RowBox[{
      "\"\<BD*\>\"", "\[Rule]", "\"\<Brown Dwarf (M<0.08solMass)\>\""}], ",", 
      RowBox[{"\"\<N*\>\"", "\[Rule]", "\"\<Confirmed Neutron Star\>\""}], 
      ",", 
      RowBox[{"\"\<OH*\>\"", "\[Rule]", "\"\<OH/IR star\>\""}], ",", 
      RowBox[{
      "\"\<CH*\>\"", "\[Rule]", "\"\<Star with envelope of CH type\>\""}], 
      ",", 
      RowBox[{"\"\<pr*\>\"", "\[Rule]", "\"\<Pre-main sequence Star\>\""}], 
      ",", 
      RowBox[{"\"\<TT*\>\"", "\[Rule]", "\"\<T Tau-type Star\>\""}], ",", 
      RowBox[{"\"\<WR*\>\"", "\[Rule]", "\"\<Wolf-Rayet Star\>\""}], ",", 
      RowBox[{"\"\<PM*\>\"", "\[Rule]", "\"\<High proper-motion Star\>\""}], 
      ",", 
      RowBox[{"\"\<HV*\>\"", "\[Rule]", "\"\<High-velocity Star\>\""}], ",", 
      RowBox[{"\"\<V*\>\"", "\[Rule]", "\"\<Variable Star\>\""}], ",", 
      RowBox[{
      "\"\<Ir*\>\"", "\[Rule]", "\"\<Variable Star of irregular type\>\""}], 
      ",", 
      RowBox[{
      "\"\<Or*\>\"", "\[Rule]", "\"\<Variable Star of Orion Type\>\""}], ",", 
      RowBox[{
      "\"\<RI*\>\"", "\[Rule]", 
       "\"\<Variable Star with rapid variations\>\""}], ",", 
      RowBox[{"\"\<Er*\>\"", "\[Rule]", "\"\<Eruptive variable Star\>\""}], 
      ",", 
      RowBox[{"\"\<Fl*\>\"", "\[Rule]", "\"\<Flare Star\>\""}], ",", 
      RowBox[{
      "\"\<FU*\>\"", "\[Rule]", "\"\<Variable Star of FU Ori type\>\""}], ",", 
      RowBox[{
      "\"\<RC*\>\"", "\[Rule]", "\"\<Variable Star of R CrB type\>\""}], ",", 
      RowBox[{
      "\"\<RC?\>\"", "\[Rule]", 
       "\"\<Variable Star of R CrB type candiate\>\""}], ",", 
      RowBox[{
      "\"\<Ro*\>\"", "\[Rule]", "\"\<Rotationally variable Star\>\""}], ",", 
      RowBox[{
      "\"\<a2*\>\"", "\[Rule]", "\"\<Variable Star of alpha2 CVn type\>\""}], 
      ",", 
      RowBox[{"\"\<Psr\>\"", "\[Rule]", "\"\<Pulsar\>\""}], ",", 
      RowBox[{"\"\<BY*\>\"", "\[Rule]", "\"\<Variable of BY Dra type\>\""}], 
      ",", 
      RowBox[{"\"\<RS*\>\"", "\[Rule]", "\"\<Variable of RS CVn type\>\""}], 
      ",", 
      RowBox[{"\"\<Pu*\>\"", "\[Rule]", "\"\<Pulsating variable Star\>\""}], 
      ",", 
      RowBox[{
      "\"\<RR*\>\"", "\[Rule]", "\"\<Variable Star of RR Lyr type\>\""}], ",", 
      RowBox[{"\"\<Ce*\>\"", "\[Rule]", "\"\<Cepheid variable Star\>\""}], 
      ",", 
      RowBox[{
      "\"\<dS*\>\"", "\[Rule]", "\"\<Variable Star of delta Sct type\>\""}], 
      ",", 
      RowBox[{
      "\"\<RV*\>\"", "\[Rule]", "\"\<Variable Star of RV Tau type\>\""}], ",", 
      RowBox[{
      "\"\<WV*\>\"", "\[Rule]", "\"\<Variable Star of W Vir type\>\""}], ",", 
      RowBox[{
      "\"\<bC*\>\"", "\[Rule]", "\"\<Variable Star of beta Cep type\>\""}], 
      ",", 
      RowBox[{
      "\"\<cC*\>\"", "\[Rule]", 
       "\"\<Classical Cepheid (delta Cep type)\>\""}], ",", 
      RowBox[{
      "\"\<gD*\>\"", "\[Rule]", "\"\<Variable Star of gamma Dor type\>\""}], 
      ",", 
      RowBox[{
      "\"\<SX*\>\"", "\[Rule]", 
       "\"\<Variable Star of SX Phe type (subdwarf)\>\""}], ",", 
      RowBox[{"\"\<LP*\>\"", "\[Rule]", "\"\<Long-period variable star\>\""}],
       ",", 
      RowBox[{
      "\"\<Mi*\>\"", "\[Rule]", "\"\<Variable Star of Mira Cet type\>\""}], 
      ",", 
      RowBox[{
      "\"\<sr*\>\"", "\[Rule]", "\"\<Semi-regular pulsating Star\>\""}], ",", 
      RowBox[{"\"\<SN*\>\"", "\[Rule]", "\"\<SuperNova\>\""}], ",", 
      RowBox[{"\"\<su*\>\"", "\[Rule]", "\"\<Sub-stellar object\>\""}], ",", 
      RowBox[{
      "\"\<Pl?\>\"", "\[Rule]", "\"\<Extra-solar Planet Candidate\>\""}], ",", 
      RowBox[{
      "\"\<Pl\>\"", "\[Rule]", "\"\<Extra-solar Confirmed Planet\>\""}], ",", 
      RowBox[{"\"\<G\>\"", "\[Rule]", "\"\<Galaxy\>\""}], ",", 
      RowBox[{"\"\<PoG\>\"", "\[Rule]", "\"\<Part of a Galaxy\>\""}], ",", 
      RowBox[{
      "\"\<GiC\>\"", "\[Rule]", "\"\<Galaxy in Cluster of Galaxies\>\""}], 
      ",", 
      RowBox[{
      "\"\<BiC\>\"", "\[Rule]", 
       "\"\<Brightest galaxy in a Cluster (BCG)\>\""}], ",", 
      RowBox[{
      "\"\<GiG\>\"", "\[Rule]", "\"\<Galaxy in Group of Galaxies\>\""}], ",", 
      RowBox[{
      "\"\<GiP\>\"", "\[Rule]", "\"\<Galaxy in Pair of Galaxies\>\""}], ",", 
      RowBox[{"\"\<HzG\>\"", "\[Rule]", "\"\<Galaxy with high redshift\>\""}],
       ",", 
      RowBox[{"\"\<ALS\>\"", "\[Rule]", "\"\<Absorption Line system\>\""}], 
      ",", 
      RowBox[{
      "\"\<LyA\>\"", "\[Rule]", "\"\<Ly alpha Absorption Line system\>\""}], 
      ",", 
      RowBox[{
      "\"\<DLA\>\"", "\[Rule]", 
       "\"\<Damped Ly-alpha Absorption Line system\>\""}], ",", 
      RowBox[{
      "\"\<mAL\>\"", "\[Rule]", "\"\<metallic Absorption Line system\>\""}], 
      ",", 
      RowBox[{"\"\<LLS\>\"", "\[Rule]", "\"\<Lyman limit system\>\""}], ",", 
      RowBox[{
      "\"\<BAL\>\"", "\[Rule]", "\"\<Broad Absorption Line system\>\""}], ",", 
      RowBox[{"\"\<rG\>\"", "\[Rule]", "\"\<Radio Galaxy\>\""}], ",", 
      RowBox[{"\"\<H2G\>\"", "\[Rule]", "\"\<HII Galaxy\>\""}], ",", 
      RowBox[{
      "\"\<LSB\>\"", "\[Rule]", "\"\<Low Surface Brightness Galaxy\>\""}], 
      ",", 
      RowBox[{
      "\"\<AG?\>\"", "\[Rule]", "\"\<Possible Active Galaxy Nucleus\>\""}], 
      ",", 
      RowBox[{"\"\<Q?\>\"", "\[Rule]", "\"\<Possible Quasar\>\""}], ",", 
      RowBox[{"\"\<Bz?\>\"", "\[Rule]", "\"\<Possible Blazar\>\""}], ",", 
      RowBox[{"\"\<BL?\>\"", "\[Rule]", "\"\<Possible BL Lac\>\""}], ",", 
      RowBox[{"\"\<EmG\>\"", "\[Rule]", "\"\<Emission-line galaxy\>\""}], ",", 
      RowBox[{"\"\<SBG\>\"", "\[Rule]", "\"\<Starburst Galaxy\>\""}], ",", 
      RowBox[{"\"\<bCG\>\"", "\[Rule]", "\"\<Blue compact Galaxy\>\""}], ",", 
      RowBox[{
      "\"\<LeI\>\"", "\[Rule]", "\"\<Gravitationally Lensed Image\>\""}], ",", 
      RowBox[{
      "\"\<LeG\>\"", "\[Rule]", 
       "\"\<Gravitationally Lensed Image of a Galaxy\>\""}], ",", 
      RowBox[{
      "\"\<LeQ\>\"", "\[Rule]", 
       "\"\<Gravitationally Lensed Image of a Quasar\>\""}], ",", 
      RowBox[{"\"\<AGN\>\"", "\[Rule]", "\"\<Active Galaxy Nucleus\>\""}], 
      ",", 
      RowBox[{
      "\"\<LIN\>\"", "\[Rule]", "\"\<LINER-type Active Galaxy Nucleus\>\""}], 
      ",", 
      RowBox[{"\"\<SyG\>\"", "\[Rule]", "\"\<Seyfert Galaxy\>\""}], ",", 
      RowBox[{"\"\<Sy1\>\"", "\[Rule]", "\"\<Seyfert 1 Galaxy\>\""}], ",", 
      RowBox[{"\"\<Sy2\>\"", "\[Rule]", "\"\<Seyfert 2 Galaxy\>\""}], ",", 
      RowBox[{"\"\<Bla\>\"", "\[Rule]", "\"\<Blazar\>\""}], ",", 
      RowBox[{"\"\<BLL\>\"", "\[Rule]", "\"\<BL Lac - type object\>\""}], ",", 
      RowBox[{
      "\"\<OVV\>\"", "\[Rule]", 
       "\"\<Optically Violently Variable object\>\""}], ",", 
      RowBox[{"\"\<QSO\>\"", "\[Rule]", "\"\<Quasar\>\""}], ",", 
      RowBox[{"\"\<GWE\>\"", "\[Rule]", "\"\<Gravitational Wave Event\>\""}], 
      ",", 
      RowBox[{"\"\<HS?\>\"", "\[Rule]", "\"\<Hot subdwarf candidate\>\""}], 
      ",", 
      RowBox[{"\"\<HS*\>\"", "\[Rule]", "\"\<Hot subdwarf\>\""}], ",", 
      RowBox[{
      "\"\<err\>\"", "\[Rule]", 
       "\"\<Not an object (error, artefact, ...)\>\""}]}], 
     "\[RightAssociation]"}]}], ";"}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[25]:=",
 CellID->327471827,ExpressionUUID->"455e4430-2ef1-4388-a390-56c5de76c793"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get info about position wavelength", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.822152575039098*^9, 3.82215257601368*^9}, {
  3.822152620924259*^9, 3.82215262701227*^9}, {3.822152664597652*^9, 
  3.822152671408225*^9}, {3.824506255355681*^9, 3.8245062804583673`*^9}, {
  3.835373509853861*^9, 3.8353735213310456`*^9}},
 CellLabel->"In[2]:=",
 CellID->912401574,ExpressionUUID->"e8404d0d-0043-4299-b04d-0877ee7bfbe6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "nomenclature", " ", "was", " ", "obtained", " ", "from", " ",
     "the", " ", "SIMBAD", " ", "web", " ", "page"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"wavelengthDescription", " ", "=", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<R\>\"", "\[Rule]", "\"\<Radio\>\""}], ",", 
      RowBox[{"\"\<I\>\"", "\[Rule]", "\"\<Infrared\>\""}], ",", 
      RowBox[{"\"\<O\>\"", "\[Rule]", "\"\<Optical\>\""}], ",", 
      RowBox[{"\"\<U\>\"", "\[Rule]", "\"\<Ultraviolet\>\""}], ",", 
      RowBox[{"\"\<X\>\"", "\[Rule]", "\"\<X-ray\>\""}], ",", 
      RowBox[{"\"\<G\>\"", "\[Rule]", "\"\<Gamma-ray\>\""}], ",", "\n", 
      RowBox[{"\"\<N\>\"", "\[Rule]", "\"\<Near-IR\>\""}], ",", 
      RowBox[{"\"\<F\>\"", "\[Rule]", "\"\<Far-IR\>\""}], ",", 
      RowBox[{"\"\<Y\>\"", "\[Rule]", "\"\<Middle-IR\>\""}], ",", 
      RowBox[{"\"\<M\>\"", "\[Rule]", "\"\<mm\>\""}], ",", 
      RowBox[{"\"\<S\>\"", "\[Rule]", "\"\<smm\>\""}]}], "|>"}]}], 
   ";"}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[26]:=",
 CellID->50645961,ExpressionUUID->"b9523977-68f0-466f-bda7-d787461701b1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Utility functions", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.821890893855648*^9, 3.821890898204281*^9}, 
   3.8223976417798357`*^9},
 CellLabel->"In[2]:=",
 CellID->423093905,ExpressionUUID->"6012b4a8-00bf-4f83-961a-aa83557204bf"],

Cell[CellGroupData[{

Cell["Transform the SIMBAD error ellipse to VectorAround", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824221410867403*^9, 3.824221440362115*^9}, {
   3.835373480485891*^9, 3.8353734814189863`*^9}, {3.8353736679241652`*^9, 
   3.835373683678751*^9}, 3.8396764524803257`*^9},
 CellLabel->"In[1]:=",
 CellID->864856624,ExpressionUUID->"3f44e180-7e82-43df-930c-debee75a0594"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"This", " ", "is", " ", "based", " ", "on", " ", 
    RowBox[{"Jose", "'"}], "s", " ", "function", " ", "to", " ", "transform", 
    " ", "error", " ", "ellipse", " ", "to", " ", "a", " ", 
    RowBox[{"VectorAround", ".", "\n", "The"}], " ", "variable", " ", "angle",
     " ", "must", " ", "be", " ", "always", " ", "in", " ", 
    RowBox[{"AngularDegrees", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"makeVectorAround", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ra_", ",", " ", "dec_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"maj_", ",", " ", "min_", ",", " ", "angle_"}], "}"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"N", " ", "@", " ", 
    RowBox[{"VectorAround", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ra", ",", " ", "dec"}], "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rot", " ", "=", " ", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{"Quantity", "[", 
             RowBox[{"90", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], " ", 
            "-", " ", 
            RowBox[{"UnitConvert", "[", 
             RowBox[{"angle", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", " ", "+", " ", 
              RowBox[{"Transpose", "[", "#", "]"}]}], ")"}], "/", "2"}], 
           ")"}], " ", "&"}], " ", "[", 
         RowBox[{"rot", ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"maj", ",", " ", "min"}], "}"}], "^", "2"}], "]"}], ".", 
          RowBox[{"Transpose", "[", "rot", "]"}]}], "]"}]}], "]"}]}], 
     "]"}]}]}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[27]:=",
 CellID->305483104,ExpressionUUID->"89796056-7ff1-4ca2-a74e-b6e61df116a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Join a table or a flux to form a query", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824221457163391*^9, 3.82422149115947*^9}, {
   3.824221625942862*^9, 3.8242216289357452`*^9}, 3.8353739206306963`*^9},
 CellLabel->"In[2]:=",
 CellID->773572280,ExpressionUUID->"a3bcb4e3-d387-4d97-bb41-13b287e3913d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joinTable", "[", "table_String", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"table", " ", "=!=", " ", "\"\<basic\>\""}], ",", " ", 
    RowBox[{
     RowBox[{
     "StringTemplate", "[", 
      "\"\<left join `tb` on(basic.oid=`tb`.oidref)\>\"", "]"}], "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<tb\>\"", " ", "\[Rule]", " ", "table"}], "|>"}], "]"}], 
    ",", " ", "Nothing"}], "]"}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[28]:=",
 CellID->194104182,ExpressionUUID->"f1e42f7d-bcae-43a4-b6ad-0c2a2aeafc60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "filter", " ", "alias", " ", "selection", " ", "is", " ", 
    "going", " ", "to", " ", "be", " ", "based", " ", "on", " ", "the", " ", 
    "lenght", " ", "of", " ", "the", " ", 
    RowBox[{"alias", ".", " ", "All"}], " ", "filters", " ", "except", " ", 
    "SDSS", " ", "filters", " ", "are", " ", "lenght", " ", "1.", " ", "\n", 
    RowBox[{"(", 
     RowBox[{
     "The", " ", "filter", " ", "alias", " ", "is", " ", "the", " ", "name", 
      " ", "of", " ", "the", " ", "columns", " ", "asociated", " ", "with", 
      " ", "a", " ", 
      RowBox[{"filter", "."}]}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"joinFlux", "[", "flux_String", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"filterAlias", " ", "=", " ", 
        RowBox[{"First", " ", "@", " ", 
         RowBox[{"StringCases", "[", 
          RowBox[{"flux", ",", " ", 
           RowBox[{
            RowBox[{"\"\<flux \>\"", " ", "~~", " ", "a__"}], " ", 
            "\[RuleDelayed]", " ", "a"}]}], "]"}]}]}], ",", " ", "filter"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"filter", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "filterAlias", "]"}], " ", "\[Equal]", 
          " ", "1"}], ",", " ", 
         RowBox[{"ToUpperCase", "[", "filterAlias", "]"}], ",", " ", 
         RowBox[{"First", " ", "@", " ", 
          RowBox[{"StringCases", "[", 
           RowBox[{"filterAlias", ",", " ", 
            RowBox[{
             RowBox[{"\"\<sdss\>\"", " ", "~~", " ", "a_"}], " ", 
             "\[RuleDelayed]", " ", "a"}]}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "StringTemplate", "[", 
        "\"\<left join flux as `falias` on(basic.oid=`falias`.oidref and \
`falias`.filter='`f`')\>\"", "]"}], "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<falias\>\"", " ", "\[Rule]", " ", "filterAlias"}], ",", 
         " ", 
         RowBox[{"\"\<f\>\"", " ", "\[Rule]", " ", "filter"}]}], "|>"}], 
       "]"}]}]}], "]"}]}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[29]:=",
 CellID->840980523,ExpressionUUID->"4a749e14-fc69-4e55-9a75-d12cf52a0264"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parse astronomical objects", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824221551190804*^9, 3.8242215694443283`*^9}, {
   3.824636929254384*^9, 3.824636943135667*^9}, 3.8353737183203363`*^9, {
   3.835373841676264*^9, 3.83537386520286*^9}},
 CellLabel->"In[3]:=",
 CellID->694273886,ExpressionUUID->"4a1bfc6e-ca9b-44a3-9e36-880d118aeb4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Astro", " ", "types"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"astroEntityTypes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Star\>\"", ",", "\"\<Galaxy\>\"", ",", "\"\<Planet\>\"", ",", 
      "\"\<MinorPlanet\>\"", ",", "\"\<PlanetaryMoon\>\"", ",", 
      "\"\<Nebula\>\"", ",", "\"\<StarCluster\>\"", ",", 
      "\"\<SolarSystemFeature\>\"", ",", "\n", "\"\<Pulsar\>\"", ",", 
      "\"\<Supernova\>\"", ",", "\"\<Comet\>\"", ",", "\"\<Exoplanet\>\"", 
      ",", "\"\<Constellation\>\"", ",", "\"\<AstronomicalRadioSource\>\"", 
      ",", "\"\<MeteorShower\>\""}], "}"}]}], ";"}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[30]:=",
 CellID->423877029,ExpressionUUID->"57e9251b-f592-4bff-b721-cbc434ae005d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Get", " ", "the", " ", "full", " ", "name", " ", "of", " ", "an", " ", 
     "astronomical", " ", "object"}], ",", " ", 
    RowBox[{
    "using", " ", "the", " ", "simbad", " ", "greek", " ", "letters", " ", 
     "coding"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"fullName", "[", "object_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "string", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "object", "]"}], " ", "===", " ", "Entity"}], 
         " ", "&&", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"astroEntityTypes", ",", 
           RowBox[{"First", "[", "object", "]"}]}], "]"}]}], ",", " ", 
        RowBox[{"string", " ", "=", " ", 
         RowBox[{"object", "[", "\"\<Name\>\"", "]"}]}], ",", "\n", 
        RowBox[{"StringQ", "[", "object", "]"}], ",", " ", 
        RowBox[{"string", " ", "=", " ", "object"}], ",", "\n", "True", ",", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongobject"}], ",", "object"}], 
          "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], "]"}], 
      ";", "\n", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"string", ",", " ", "simbadGreekCoding"}], "]"}]}]}], "\n", 
    "]"}], " "}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[31]:=",
 CellID->276687415,ExpressionUUID->"08395846-46eb-4063-9927-b33b231cd73e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Transform the properties of SIMBADData to the columns and tables of the \
dataset\
\>", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824313027173623*^9, 3.824313072942124*^9}, {
  3.824313129586649*^9, 3.824313137055277*^9}, {3.8353738942586665`*^9, 
  3.8353739734267616`*^9}, {3.8353740068359976`*^9, 3.835374020637097*^9}},
 CellLabel->"In[3]:=",
 CellID->157183064,ExpressionUUID->"703b4970-c3f6-4f62-8200-be68154f6fd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"translateProperties", "[", "prop_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"columns", ",", " ", "tables", ",", " ", "cleanProperties"}], 
     "\n", "}"}], ",", "\n", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Check", " ", "the", " ", "ways", " ", "one", " ", "can", " ", "specify",
       " ", "properties"}], " ", "*)"}], "\n", 
    RowBox[{
     RowBox[{"cleanProperties", " ", "=", " ", 
      RowBox[{"Which", "[", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"As", " ", "a", " ", "list"}], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"ListQ", "[", "prop", "]"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Length", "[", "prop", "]"}], " ", "\[NotEqual]", " ", 
          "0"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Depth", "[", "prop", "]"}], " ", "\[Equal]", " ", "2"}]}], 
        ",", " ", "prop", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"As", " ", "a", " ", "string"}], " ", "*)"}], "\n", " ", 
        RowBox[{"StringQ", "[", "prop", "]"}], ",", " ", 
        RowBox[{"List", "[", "prop", "]"}], ",", "\n", " ", 
        RowBox[{"(*", " ", "All", " ", "*)"}], "\n", " ", 
        RowBox[{"prop", " ", "===", " ", "All"}], ",", " ", 
        RowBox[{"{", "prop", "}"}], ",", "\n", " ", "True", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongprop"}], ",", " ", "prop"}], 
          "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "\n", " ", "]"}]}], ";", "\n", 
     RowBox[{"cleanProperties", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"cleanProperties", " ", "/.", " ", "compoundProperties"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Check", " ", "that", " ", "the", " ", "input", " ", "properties", " ", 
       "are", " ", "the", " ", "supported"}], " ", "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SubsetQ", "[", 
         RowBox[{"nonCompoundProperties", ",", " ", "cleanProperties"}], 
         "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{
          RowBox[{"SIMBADData", "::", "wrongprop"}], ",", " ", "prop"}], 
         "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], "]"}], 
     ";", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Searching", " ", "what", " ", "columns", " ", "and", " ", "tables", 
       " ", "are", " ", "going", " ", "to", " ", "be", " ", "queried", " ", 
       "from", " ", "Simbad"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"columns", ",", " ", "tables"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteDuplicates", " ", "@", " ", 
         RowBox[{"Flatten", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{"Transpose", " ", "@", "\n", 
         RowBox[{
          RowBox[{"Query", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"cleanProperties", ",", " ", 
                RowBox[{"Slot", "[", "\"\<Property Name\>\"", "]"}]}], "]"}], 
              " ", "&"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<Simbad Columns Called\>\"", ",", " ", 
               "\"\<Simbad Tables Involved\>\""}], "}"}], " ", "/*", " ", 
             "Values"}]}], "]"}], " ", "@", " ", "infoProperties"}]}], 
        ")"}]}]}], ";", "\n", 
     RowBox[{"columns", "=", 
      RowBox[{"DeleteDuplicates", " ", "@", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"columns", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<basic.main_id\>\"", ",", "\"\<ident.id\>\""}], 
           "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Arranging", " ", "the", " ", "list", " ", "of", " ", "tables", " ", 
       "and", " ", "columns", " ", "to", " ", "their", " ", "correct", " ", 
       "form", " ", "in", " ", "the", " ", "SQL", " ", "query"}], " ", "*)"}],
      "\n", 
     RowBox[{"columns", " ", "=", " ", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "columns", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<\>\""}], ",", " ", 
          RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"tables", " ", "=", " ", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringMatchQ", "[", 
               RowBox[{"#", ",", 
                RowBox[{"\"\<flux\>\"", " ", "~~", " ", "__"}]}], "]"}], ",", 
              " ", 
              RowBox[{"joinFlux", "[", "#", "]"}], ",", " ", 
              RowBox[{"joinTable", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", 
           "/@", " ", "tables"}], ")"}], "]"}], ",", "\n", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<\>\""}], ",", " ", 
          RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<\>\""}], ",", " ", 
          RowBox[{"\"\<,\>\"", "\[Rule]", "\"\< \>\""}]}], "}"}]}], "]"}]}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{"columns", ",", " ", "tables", ",", " ", "cleanProperties"}], 
      "}"}]}]}], "\n", "]"}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.839677563731382*^9, 3.8396776210065575`*^9}, {
  3.83967861830637*^9, 3.8396786494961977`*^9}, {3.8396786883576727`*^9, 
  3.8396787006853867`*^9}},
 CellLabel->"In[32]:=",
 CellID->564217695,ExpressionUUID->"e6ab9802-9ea9-4209-8e0a-64ac66d01c5e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import and arrange the data obtained from SIMBAD", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824224486672649*^9, 3.8242245055582533`*^9}, {
   3.824224577800499*^9, 3.824224606706785*^9}, {3.824470406773788*^9, 
   3.824470407477882*^9}, {3.83537363909099*^9, 3.8353736398331895`*^9}, {
   3.8353741098127813`*^9, 3.8353741113046885`*^9}, 3.8396764498774652`*^9},
 CellLabel->"In[2]:=",
 CellID->273540854,ExpressionUUID->"e1af5a6e-979f-4e79-8683-0d55649b6943"],

Cell["Get data when objects are the first argument of SIMBADData:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8396859156506677`*^9, 3.839685983792494*^9}, {
  3.8396860155428133`*^9, 3.839686053199091*^9}},
 CellID->391430943,ExpressionUUID->"4e5eb9d0-9fc8-4c8a-9ec1-3222edab0701"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getData", "[", 
   RowBox[{
   "root_", ",", " ", "query_", ",", "objs_", ",", " ", "cleanProperties_", 
    ",", " ", "modifier_"}], "]"}], ":=", "\[IndentingNewLine]", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "import", ",", "headers", ",", "simbadFormInput", ",", "dummyQuery", ",",
       "objects", ",", "numeration", ",", "columnsPerProperty", ",", 
      "columns", ",", "filteredRow", ",", "input", ",", "row"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"input", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "objs", "]"}], ",", "objs", ",", 
        RowBox[{"{", "objs", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Import", " ", "the", " ", "data"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"import", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"root", " ", "<>", " ", "query"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Checking", " ", "that", " ", "the", " ", "query", " ", "was", " ", 
       "correct"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FailureQ", "[", "import", "]"}], "||", 
        RowBox[{"!", 
         RowBox[{"MatrixQ", "[", "import", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{"SIMBADData", "::", "queryfail"}], "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{"$Failed", ",", "\"\<AstroDataError\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", "import", "]"}], "<", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{"SIMBADData", "::", "noinfofound"}], "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{
          RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], ",", " ", 
          "\"\<AstroDataError\>\""}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Extract", " ", "the", " ", "headers"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"headers", "=", 
      RowBox[{"First", " ", "@", " ", "import"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Clean", " ", "repeated", " ", "rows", " ", "and", " ", "get", " ", 
       "data"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"import", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Rest", " ", "@", " ", 
         RowBox[{"DeleteDuplicates", " ", "@", " ", "import"}]}], ")"}], "/.", 
       RowBox[{"\"\<\>\"", "->", 
        RowBox[{"Missing", "[", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Define", " ", "a", " ", "function", " ", "to", " ", "filter", " ", 
       "rows"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"numeration", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{"headers", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "headers"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getSpecificColumns", "[", 
       RowBox[{"row_", ",", "columns1_"}], "]"}], ":=", 
      RowBox[{"row", "[", 
       RowBox[{"[", 
        RowBox[{"Lookup", "[", 
         RowBox[{"numeration", ",", "columns1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Get", " ", "the", " ", "columns", " ", "returned", " ", "by", " ", 
       "each", " ", "property"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"columnsPerProperty", "=", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"property", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Query", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"property", "===", 
                 RowBox[{"Slot", "[", "\"\<Property Name\>\"", "]"}]}], "&"}],
                "]"}], ",", "\"\<Simbad Columns Returned\>\""}], "]"}], " ", 
            "@", " ", "infoProperties"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "cleanProperties"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Sort", " ", "the", " ", "data", " ", "for", " ", "all", " ", 
       "modifiers", " ", "except", " ", "for", " ", 
       "\"\<ExternalIdentifierAssociation\>\""}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"modifier", "=!=", "\"\<ExternalIdentifierAssociation\>\""}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"import", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
         RowBox[{"StringTrim", " ", "/@", " ", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"import", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"Whitespace", "->", "\"\< \>\""}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"objects", "=", 
         RowBox[{"fullName", " ", "/@", " ", "input"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Get", " ", "the", " ", "Simbad", " ", "representation", " ", "of", 
           " ", "input", " ", 
           RowBox[{"objects", ".", " ", "Input"}], " ", "object", " ", 
           "names", " ", "are", " ", "transformed", " ", "automatically", " ",
            "in", " ", "Simbad", " ", "by", " ", "the", " ", "function", " ", 
           "\"\<normId\>\""}], ",", 
          RowBox[{
          "then", " ", "I", " ", "transform", " ", "the", " ", "input", " ", 
           "object", " ", "to", " ", "the", " ", "Simbad", " ", "form", " ", 
           "through", " ", "a", " ", "dummy", " ", "query", " ", "to", " ", 
           "make", " ", "easier", " ", "the", " ", "sorting", " ", "of", " ", 
           "the", " ", 
           RowBox[{"output", ".", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "See", " ", "the", " ", "section", " ", 
               "\"\<Object name/ID\>\"", " ", "in", " ", 
               RowBox[{"http", ":"}]}], "//", 
              RowBox[{
               RowBox[{"simbad", ".", "u"}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"strasbg", ".", "fr"}], "/", "simbad"}], "/", 
                   "tap"}], "/", "help"}], "/", 
                 RowBox[{"adqlHelp", ".", "html"}]}], " ", "for", " ", "more",
                 " ", "info"}]}]}], ")"}]}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"dummyQuery", "=", 
         RowBox[{"URLEncode", "[", 
          RowBox[{"\"\<SELECT TOP 1 \>\"", "<>", 
           RowBox[{"StringRiffle", "[", 
            RowBox[{"objects", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<normId('\>\"", ",", "\"\<'),normId('\>\"", ",", 
               "\"\<')\>\""}], "}"}]}], "]"}], "<>", "\"\< FROM basic;\>\""}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"simbadFormInput", "=", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"rootFrance", "<>", "dummyQuery"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "The", " ", "function", " ", "normId", " ", "just", " ", "works", 
          " ", "in", " ", "the", " ", "France", " ", "mirror"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"simbadFormInput", "=", 
         RowBox[{"StringTrim", " ", "/@", " ", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"simbadFormInput", ",", 
            RowBox[{"Whitespace", "->", "\"\< \>\""}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Sort", " ", "the", " ", "data"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"import", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{"input", ",", 
                RowBox[{"Select", "[", 
                 RowBox[{"import", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "input"}], "&"}]}],
                  "]"}]}], "]"}], ",", "simbadFormInput"}], "]"}], "/.", 
            RowBox[{
             RowBox[{"{", "}"}], "->", 
             RowBox[{"Missing", "[", "\"\<NoObject\>\"", "]"}]}]}], ",", 
           "1"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Arrange", " ", "the", " ", "data", " ", "depending", " ", "on", " ", 
       "the", " ", "modifier"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "modifier", ",", "\[IndentingNewLine]", "\"\<Default\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"row", ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"row", "=!=", 
                RowBox[{"Missing", "[", "\"\<NoObject\>\"", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"columns", "=", 
                   RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"filteredRow", "=", 
                   RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                  RowBox[{"arrangeProperty", "[", 
                   RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", "import"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cleanProperties", "]"}], "==", "1"}], ",", 
          RowBox[{"import", "=", 
           RowBox[{"First", " ", "/@", " ", "import"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "input", "]"}], "==", "1"}], ",", 
          RowBox[{"First", " ", "@", " ", "import"}], ",", "import"}], 
         "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\"\<ExternalIdentifierAssociation\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Association", " ", "@@", " ", 
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"row", ",", "\[IndentingNewLine]", 
              RowBox[{"Rule", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ExternalIdentifier", "[", 
                 RowBox[{"\"\<SIMBADID\>\"", ",", 
                  RowBox[{"StringTrim", " ", "@", " ", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"row", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Whitespace", " ", "\[Rule]", " ", "\"\< \>\""}], 
                    "}"}]}], "]"}]}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"columns", "=", 
                    RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   RowBox[{"filteredRow", "=", 
                    RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                   RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                 "]"}]}], "\[IndentingNewLine]", "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            "import"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cleanProperties", "]"}], "==", "1"}], ",", 
          RowBox[{"First", " ", "/@", " ", "import"}], ",", "import"}], 
         "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\"\<ObjectAssociation\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Association", " ", "@@", " ", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"row", "=", 
              RowBox[{"import", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"row", "=!=", 
                RowBox[{"Missing", "[", "\"\<NoObject\>\"", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "->", 
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"columns", "=", 
                    RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   RowBox[{"filteredRow", "=", 
                    RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "->", 
                RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}]}], 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "@", "import"}]}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cleanProperties", "]"}], "==", "1"}], ",", 
          RowBox[{"First", " ", "/@", " ", "import"}], ",", "import"}], 
         "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\"\<Association\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Association", " ", "@@", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"row", "=", 
            RowBox[{"import", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"row", "=!=", 
              RowBox[{"Missing", "[", "\"\<NoObject\>\"", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"input", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "->", 
              RowBox[{"Association", " ", "@@", " ", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"columns", "=", 
                   RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"filteredRow", "=", 
                   RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "->", 
                   RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                "]"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"input", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "->", 
              RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}]}], 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "@", "import"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\"\<Dataset\>\"", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
        RowBox[{"Association", " ", "@@", " ", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"row", "=", 
             RowBox[{"import", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"row", "=!=", 
               RowBox[{"Missing", "[", "\"\<NoObject\>\"", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "->", 
               RowBox[{"Association", " ", "@@", " ", 
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"columns", "=", 
                    RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   RowBox[{"filteredRow", "=", 
                    RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "->", 
                    RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                 "]"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"input", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "->", 
               RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}]}], 
             "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "@", "import"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "_", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{"SIMBADData", "::", "modi"}], "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.839685922258091*^9, 3.839685925762309*^9}, {
   3.8396865164418993`*^9, 3.8396865241675286`*^9}, {3.8396931097569056`*^9, 
   3.8396931390895643`*^9}, {3.8397693623715353`*^9, 
   3.8397693689325094`*^9}, {3.839781968307925*^9, 3.8397819983624926`*^9}, {
   3.8397822050848403`*^9, 3.8397822308223066`*^9}, {3.8397823341407447`*^9, 
   3.839782364831634*^9}, {3.8397824110050726`*^9, 3.8397828284985*^9}, {
   3.83978286586269*^9, 3.8397828761811934`*^9}, {3.8397829158851566`*^9, 
   3.8397829169960966`*^9}, {3.8397829719593844`*^9, 
   3.8397829990816164`*^9}, {3.839783222778754*^9, 3.839783224640913*^9}, {
   3.8397832943704615`*^9, 3.839783300122751*^9}, {3.839783562695135*^9, 
   3.839783576667673*^9}, {3.839783765093874*^9, 3.8397838071147313`*^9}, {
   3.8397838657432423`*^9, 3.839783871471526*^9}, {3.8397839981319833`*^9, 
   3.8397840052958517`*^9}, {3.8397842919125967`*^9, 
   3.8397842936265283`*^9}, {3.8397843462213492`*^9, 
   3.8397843668712707`*^9}, {3.8397844203965454`*^9, 
   3.8397844205914927`*^9}, {3.839784490162567*^9, 3.839784496536056*^9}, {
   3.8397849954362907`*^9, 3.8397850180612288`*^9}, {3.839785373720271*^9, 
   3.839785386321846*^9}, {3.839785563328545*^9, 3.83978557714213*^9}, {
   3.839785674554865*^9, 3.839785679824849*^9}, {3.8397866086308203`*^9, 
   3.839786617008114*^9}, {3.8397876308278675`*^9, 3.839787688797677*^9}, {
   3.83978776905809*^9, 3.8397879106464405`*^9}, {3.8397879464491634`*^9, 
   3.8397879680490065`*^9}, {3.8397880140167103`*^9, 3.839788014514504*^9}, {
   3.839933647234928*^9, 3.8399336522921767`*^9}, {3.8399395602817984`*^9, 
   3.8399395908269024`*^9}, {3.839940525806491*^9, 3.8399405376142626`*^9}, {
   3.839940575878089*^9, 3.8399405763229403`*^9}, {3.8399406091251807`*^9, 
   3.839940654041916*^9}, {3.8399408840818553`*^9, 3.8399408922965813`*^9}, {
   3.8399409252749343`*^9, 3.839941041571606*^9}, {3.8399410876753645`*^9, 
   3.8399411462857943`*^9}, {3.8399411962387133`*^9, 3.839941215207364*^9}, {
   3.839941382235422*^9, 3.8399414268175054`*^9}, {3.839941472483571*^9, 
   3.839941537227067*^9}, {3.839941601330768*^9, 3.839941623938982*^9}, {
   3.839941790199576*^9, 3.8399418369027414`*^9}, {3.8399418690767198`*^9, 
   3.839941890928111*^9}, 3.839941926402234*^9, {3.839941964236455*^9, 
   3.8399419887921643`*^9}, {3.8399421786535892`*^9, 3.839942285617852*^9}, {
   3.839942576545389*^9, 3.83994257833057*^9}, {3.839942690507886*^9, 
   3.839942690815339*^9}, {3.839964836935537*^9, 3.8399648476440926`*^9}, {
   3.839965278692751*^9, 3.8399652805804605`*^9}, {3.83996531456815*^9, 
   3.8399653950125284`*^9}, {3.8399654743828783`*^9, 3.839965524102129*^9}, {
   3.840025121377372*^9, 3.8400251287218323`*^9}, {3.840025213785005*^9, 
   3.840025282345291*^9}, {3.8400253720044565`*^9, 3.840025372514281*^9}, {
   3.8400254045764427`*^9, 3.8400254294638686`*^9}, {3.8400254872191215`*^9, 
   3.840025518741021*^9}, {3.8400255532780237`*^9, 3.840025556563053*^9}, {
   3.840025587654299*^9, 3.840025593589548*^9}, {3.84002565150226*^9, 
   3.8400256522030163`*^9}, {3.8400257021343727`*^9, 
   3.8400257091333637`*^9}, {3.8400260303754835`*^9, 3.8400260388913755`*^9}, 
   3.840026124825967*^9, {3.840026638299123*^9, 3.8400266555486565`*^9}, {
   3.8400278980044737`*^9, 3.8400279409509096`*^9}, {3.8400285228118796`*^9, 
   3.8400286911467648`*^9}, {3.8400289402266116`*^9, 3.840028997631221*^9}, {
   3.8400290583465176`*^9, 3.8400291056713486`*^9}, {3.8400291990888495`*^9, 
   3.840029200520796*^9}, {3.840029371465375*^9, 3.840029435989518*^9}, {
   3.84002949628092*^9, 3.840029496458605*^9}, {3.840029545459058*^9, 
   3.8400295466006794`*^9}, {3.8400382093545856`*^9, 3.84003821637504*^9}, {
   3.8400417864898696`*^9, 3.8400417930408764`*^9}, {3.840041844190852*^9, 
   3.8400418511038475`*^9}, {3.840105191307698*^9, 3.840105196339316*^9}},
 CellID->523657677,ExpressionUUID->"775caf1a-f233-4328-bb61-ffdcc7df505f"],

Cell["\<\
Get data when a sky region is the first argument of SIMBADData:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8397883700835905`*^9},
 CellID->46589015,ExpressionUUID->"86e761f2-f3d6-4182-940a-5cd5ff0a4ecd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getData", "[", 
   RowBox[{
   "root_", ",", " ", "query_", ",", " ", "cleanProperties_", ",", " ", 
    "modi_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "import", ",", "headers", ",", "numeration", ",", "columnsPerProperty", 
      ",", "columns", ",", "filteredRow", ",", "modifier"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Import", " ", "the", " ", "data"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"import", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"root", " ", "<>", " ", "query"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Checking", " ", "that", " ", "the", " ", "query", " ", "was", " ", 
       "correct"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FailureQ", "[", "import", "]"}], "||", 
        RowBox[{"!", 
         RowBox[{"MatrixQ", "[", "import", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{"SIMBADData", "::", "queryfail"}], "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{"$Failed", ",", "\"\<AstroDataError\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", "import", "]"}], "<", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{"SIMBADData", "::", "noinfofound"}], "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{
          RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], ",", " ", 
          "\"\<AstroDataError\>\""}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Extract", " ", "the", " ", "headers"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"headers", "=", 
      RowBox[{"First", " ", "@", " ", "import"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Clean", " ", "repeated", " ", "rows", " ", "and", " ", "get", " ", 
       "data"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"import", "=", 
      RowBox[{
       RowBox[{"Rest", " ", "@", " ", 
        RowBox[{"DeleteDuplicates", " ", "@", " ", "import"}]}], "/.", 
       RowBox[{"\"\<\>\"", "->", 
        RowBox[{"Missing", "[", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Define", " ", "a", " ", "function", " ", "to", " ", "filter", " ", 
       "rows"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"numeration", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{"headers", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "headers"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getSpecificColumns", "[", 
       RowBox[{"row_", ",", "columns1_"}], "]"}], ":=", 
      RowBox[{"row", "[", 
       RowBox[{"[", 
        RowBox[{"Lookup", "[", 
         RowBox[{"numeration", ",", "columns1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Get", " ", "the", " ", "columns", " ", "returned", " ", "by", " ", 
       "each", " ", "property"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"columnsPerProperty", "=", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"property", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Query", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"property", "===", 
                 RowBox[{"Slot", "[", "\"\<Property Name\>\"", "]"}]}], "&"}],
                "]"}], ",", "\"\<Simbad Columns Returned\>\""}], "]"}], " ", 
            "@", " ", "infoProperties"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "cleanProperties"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Change", " ", "modifier"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"modifier", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modi", "===", "\"\<ObjectAssociation\>\""}], ",", 
        "\"\<ExternalIdentifierAssociation\>\"", ",", "modi"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Arrange", " ", "the", " ", "data", " ", "depending", " ", "on", " ", 
       "the", " ", "modifier"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "modifier", ",", "\[IndentingNewLine]", "\"\<Default\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"row", ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"columns", "=", 
                 RowBox[{"columnsPerProperty", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                RowBox[{"filteredRow", "=", 
                 RowBox[{"getSpecificColumns", "[", 
                  RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                RowBox[{"arrangeProperty", "[", 
                 RowBox[{
                  RowBox[{"AssociationThread", "[", 
                   RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                  RowBox[{"cleanProperties", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", "import"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cleanProperties", "]"}], "==", "1"}], ",", 
          RowBox[{"First", " ", "/@", " ", "import"}], ",", "import"}], 
         "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\"\<ExternalIdentifierAssociation\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Association", " ", "@@", " ", 
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"row", ",", "\[IndentingNewLine]", 
              RowBox[{"Rule", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ExternalIdentifier", "[", 
                 RowBox[{"\"\<SIMBADID\>\"", ",", 
                  RowBox[{"StringTrim", " ", "@", " ", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"row", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Whitespace", " ", "\[Rule]", " ", "\"\< \>\""}], 
                    "}"}]}], "]"}]}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"columns", "=", 
                    RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   RowBox[{"filteredRow", "=", 
                    RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                   RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                 "]"}]}], "\[IndentingNewLine]", "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            "import"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cleanProperties", "]"}], "==", "1"}], ",", 
          RowBox[{"First", " ", "/@", " ", "import"}], ",", "import"}], 
         "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\"\<Association\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Association", " ", "@@", " ", 
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"row", ",", "\[IndentingNewLine]", 
            RowBox[{"Rule", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ExternalIdentifier", "[", 
               RowBox[{"\"\<SIMBADID\>\"", ",", 
                RowBox[{"StringTrim", " ", "@", " ", 
                 RowBox[{"StringReplace", "[", 
                  RowBox[{
                   RowBox[{"row", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Whitespace", " ", "\[Rule]", " ", "\"\< \>\""}], 
                    "}"}]}], "]"}]}]}], "]"}], ",", 
              RowBox[{"Association", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"columns", "=", 
                   RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"filteredRow", "=", 
                   RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                  RowBox[{
                   RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "->", 
                   RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          "import"}], "]"}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\"\<Dataset\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
        RowBox[{"Association", " ", "@@", " ", 
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"row", ",", "\[IndentingNewLine]", 
             RowBox[{"Rule", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ExternalIdentifier", "[", 
                RowBox[{"\"\<SIMBADID\>\"", ",", 
                 RowBox[{"StringTrim", " ", "@", " ", 
                  RowBox[{"StringReplace", "[", 
                   RowBox[{
                    RowBox[{"row", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Whitespace", " ", "\[Rule]", " ", "\"\< \>\""}], 
                    "}"}]}], "]"}]}]}], "]"}], ",", 
               RowBox[{"Association", " ", "@@", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"columns", "=", 
                    RowBox[{"columnsPerProperty", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   RowBox[{"filteredRow", "=", 
                    RowBox[{"getSpecificColumns", "[", 
                    RowBox[{"row", ",", "columns"}], "]"}]}], ";", 
                   RowBox[{
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "->", 
                    RowBox[{"arrangeProperty", "[", 
                    RowBox[{
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"columns", "->", "filteredRow"}], "]"}], ",", 
                    RowBox[{"cleanProperties", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "cleanProperties"}]}], "}"}]}], 
                 "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           "import"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "_", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{"SIMBADData", "::", "modi"}], "]"}], ";", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8364242637516184`*^9, 3.836424300421602*^9}, {
   3.8396039914220037`*^9, 3.8396040031717443`*^9}, {3.839609580686623*^9, 
   3.839609586883542*^9}, {3.8396769517788963`*^9, 3.8396769823606*^9}, {
   3.8396777789416*^9, 3.839677784668306*^9}, {3.8396798773407197`*^9, 
   3.839679882002288*^9}, {3.8396805820473146`*^9, 3.839680601360507*^9}, {
   3.8396856705884*^9, 3.8396857521367235`*^9}, {3.839685797859686*^9, 
   3.83968586181054*^9}, {3.8396859094511375`*^9, 3.8396859140276623`*^9}, 
   3.8396860741698704`*^9, {3.8396863649111605`*^9, 3.839686424776094*^9}, {
   3.8396865497494545`*^9, 3.839686575924403*^9}, 3.8396868031953945`*^9, {
   3.8396868773224363`*^9, 3.839686949756447*^9}, 3.839687523163521*^9, {
   3.839688471476395*^9, 3.8396884968881493`*^9}, {3.8396885985415344`*^9, 
   3.8396886694167757`*^9}, {3.8396902757279687`*^9, 3.8396902865073953`*^9}, 
   3.83969034826655*^9, 3.839690635625269*^9, {3.8396906896446705`*^9, 
   3.839690743561385*^9}, {3.8396908150746794`*^9, 3.8396908196800723`*^9}, 
   3.839690976658124*^9, {3.8396910973079863`*^9, 3.8396911239894485`*^9}, {
   3.8396911929663477`*^9, 3.8396912524703646`*^9}, {3.83969129380867*^9, 
   3.839691301580798*^9}, {3.839691542269414*^9, 3.839691691821067*^9}, {
   3.839691864774245*^9, 3.839691895559285*^9}, {3.8396919440964375`*^9, 
   3.8396920295906115`*^9}, {3.839692126830562*^9, 3.8396921942279763`*^9}, {
   3.8396922652459784`*^9, 3.839692308835475*^9}, {3.8396926258200808`*^9, 
   3.83969263204638*^9}, {3.83969275021209*^9, 3.839692761309653*^9}, {
   3.8397828344375486`*^9, 3.839782839311598*^9}, {3.839783757582612*^9, 
   3.839783757959496*^9}, {3.839942084526229*^9, 3.839942097581454*^9}, {
   3.83994236750891*^9, 3.839942384975108*^9}, {3.8399424266581135`*^9, 
   3.8399425248522673`*^9}, 3.839942557570603*^9, {3.839964857718835*^9, 
   3.839964858228774*^9}, {3.8399655551504354`*^9, 3.839965562099862*^9}, {
   3.8400296320206547`*^9, 3.840029699235155*^9}, {3.8400306573893795`*^9, 
   3.840030669443327*^9}, {3.840030721069764*^9, 3.8400307378227825`*^9}, 
   3.8400309081759224`*^9, {3.840031212748805*^9, 3.8400312140798464`*^9}, {
   3.840031983060136*^9, 3.8400319915788183`*^9}, {3.840032076697274*^9, 
   3.8400320964825706`*^9}, {3.840032128767906*^9, 3.84003214237251*^9}, {
   3.8400354089883595`*^9, 3.840035409326149*^9}, {3.840035921506687*^9, 
   3.8400359262610598`*^9}, {3.840036128569598*^9, 3.8400361416112*^9}, {
   3.8400362918286552`*^9, 3.8400362998094387`*^9}, {3.8400363423497295`*^9, 
   3.8400363425465784`*^9}, 3.8400381772639956`*^9, {3.8400418810196185`*^9, 
   3.840041883231717*^9}, {3.8401052125155334`*^9, 3.8401052128717437`*^9}},
 CellID->461293911,ExpressionUUID->"42b7a90e-14ee-45ce-8f13-d7e12b4bfb3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions that arrange the properties", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.822255473590868*^9, 3.822255481187611*^9}},
 CellLabel->"In[3]:=",
 CellID->816695288,ExpressionUUID->"cce22618-3ea2-4007-aac1-518939e76b5f"],

Cell["\<\
The following functions take the SIMBAD rows and arrange them into the \
properties.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8233516768578367`*^9, 3.823351717695471*^9}, {
   3.8353741568921275`*^9, 3.835374186916438*^9}, 3.835791678507738*^9},
 CellID->445598192,ExpressionUUID->"d042b58e-9825-4889-ae43-e9b6ea611a80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{
    RowBox[{"asso_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"#", ",", 
         RowBox[{"_", "?", "MissingQ"}]}], "]"}], "&"}], ")"}]}], ",", "_"}], 
   "]"}], ":=", 
  RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8397834049440837`*^9, 3.8397834146288977`*^9}, {
  3.8397835051798935`*^9, 3.8397835266694365`*^9}, {3.839786446880079*^9, 
  3.839786513049531*^9}, {3.8397865526191664`*^9, 3.8397865526972823`*^9}, {
  3.8397865829321527`*^9, 3.8397865906378965`*^9}, {3.839786952191963*^9, 
  3.839786955380724*^9}, {3.839946640093346*^9, 3.839946684101717*^9}, {
  3.839946818504797*^9, 3.839946834708685*^9}, {3.8399469085960608`*^9, 
  3.839946950073801*^9}, {3.8399470031847506`*^9, 3.8399470262216005`*^9}, {
  3.839947185700938*^9, 3.839947200592644*^9}, {3.8399472627294555`*^9, 
  3.8399472698575897`*^9}, {3.839947724715367*^9, 3.8399477344500484`*^9}, {
  3.839947811254486*^9, 3.839947813606846*^9}},
 CellLabel->"In[35]:=",
 CellID->266584890,ExpressionUUID->"b9b10aae-2099-47ec-9a8d-3818298dd412"],

Cell[CellGroupData[{

Cell["Quantity properties", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{3.822255489976077*^9},
 CellLabel->"In[1]:=",
 CellID->994128557,ExpressionUUID->"beab6a3e-6c10-484c-8d34-7541110fe14a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RightAscension\>\""}], "]"}], " ", ":=", 
   RowBox[{"UnitConvert", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<ra\>\"", "]"}], ",", 
       "\"\<AngularDegrees\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MixedUnit", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<HoursOfRightAscension\>\"", ",", 
        "\"\<MinutesOfRightAscension\>\"", ",", 
        "\"\<SecondsOfRightAscension\>\""}], "}"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<Declination\>\""}], "]"}], ":=", 
   RowBox[{"UnitConvert", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<dec\>\"", "]"}], ",", 
       "\"\<AngularDegrees\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MixedUnit", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AngularDegrees\>\"", ",", "\"\<ArcMinutes\>\"", ",", 
        "\"\<ArcSeconds\>\""}], "}"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ProperMotionRightAscension\>\""}], "]"}], ":=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<pmra\>\"", "]"}], ",", 
     RowBox[{"\"\<MilliarcSeconds\>\"", "/", "\"\<Years\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ProperMotionDeclination\>\""}], "]"}], ":=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<pmdec\>\"", "]"}], ",", 
     RowBox[{"\"\<MilliarcSeconds\>\"", "/", "\"\<Years\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<Parallax\>\""}], "]"}], ":=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<plx_value\>\"", "]"}], ",", 
     "\"\<MilliarcSeconds\>\""}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RadialVelocity\>\""}], "]"}], ":=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<rvz_radvel\>\"", "]"}], ",", 
     RowBox[{"\"\<Kilometers\>\"", "/", "\"\<Seconds\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<Redshift\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<rvz_redshift\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<UMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<U\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<BMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<B\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<VMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<V\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<R\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<IMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<I\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<JMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<J\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<HMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<H\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<KMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<K\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<G\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSUMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<u\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSGMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<g\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSRMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<r\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSIMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<i\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSZMagnitude\>\""}], "]"}], ":=", 
   RowBox[{"asso", "[", "\"\<z\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GalaxyPositionAngle\>\""}], "]"}], ":=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<galdim_angle\>\"", "]"}], ",", 
     "\"\<AngularDegrees\>\""}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GalaxyMajorAxis\>\""}], "]"}], ":=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<galdim_majaxis\>\"", "]"}], ",", 
     "\"\<ArcMinutes\>\""}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{"asso_", ",", "\"\<GalaxyMinorAxis\>\""}], "]"}], ":=", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{"asso", "[", "\"\<galdim_minaxis\>\"", "]"}], ",", 
    "\"\<ArcMinutes\>\""}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.835825903355404*^9, 3.8358259402616525`*^9}, {
   3.8358680132480326`*^9, 3.835868028579322*^9}, {3.8358686920183935`*^9, 
   3.835868735114072*^9}, {3.8358691949507494`*^9, 3.8358692376220927`*^9}, {
   3.8358704933733745`*^9, 3.83587051202647*^9}, {3.8364243466161017`*^9, 
   3.8364244247285833`*^9}, {3.836424854503995*^9, 3.8364249206735926`*^9}, {
   3.836424950921521*^9, 3.8364253543170834`*^9}, {3.8396895298390207`*^9, 
   3.8396895568260584`*^9}, 3.839690124022163*^9, {3.8399476278592815`*^9, 
   3.8399476325664062`*^9}, {3.839947700881342*^9, 3.839947714863944*^9}, {
   3.8399478050420585`*^9, 3.8399478059737773`*^9}, {3.839947866803564*^9, 
   3.8399479324462037`*^9}, {3.83994798299745*^9, 3.8399480969116316`*^9}, {
   3.839948188992927*^9, 3.8399482331076403`*^9}, {3.8399482706348486`*^9, 
   3.8399482773445234`*^9}, {3.8399483174382477`*^9, 3.839948331469819*^9}, {
   3.8399483724104943`*^9, 3.839948411724203*^9}, {3.8399484433678894`*^9, 
   3.8399485779697556`*^9}, {3.8399486173963265`*^9, 
   3.8399486322975063`*^9}, {3.839948690161675*^9, 3.839948715748881*^9}},
 CellLabel->"In[36]:=",
 CellID->335869394,ExpressionUUID->"61c756b2-0bc3-4b38-b38b-e7f948230356"]
}, Closed]],

Cell[CellGroupData[{

Cell["Properties with uncertainty", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{3.822255567830035*^9},
 CellLabel->"In[25]:=",
 CellID->130792956,ExpressionUUID->"fe4cbfcc-5fa3-4365-a288-baa72da354b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ProperMotionDeclinationWithUncertainty\>\""}], 
    "]"}], ":=", 
   RowBox[{"Last", " ", "@", " ", 
    RowBox[{"Around", " ", "@", " ", 
     RowBox[{"arrangeProperty", "[", 
      RowBox[{"asso", ",", "\"\<ProperMotionErrorEllipse\>\""}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{
    "asso_", ",", "\"\<ProperMotionRightAscensionWithUncertainty\>\""}], 
    "]"}], ":=", 
   RowBox[{"First", " ", "@", " ", 
    RowBox[{"Around", " ", "@", " ", 
     RowBox[{"arrangeProperty", "[", 
      RowBox[{"asso", ",", "\"\<ProperMotionErrorEllipse\>\""}], "]"}]}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ProperMotionErrorEllipse\>\""}], "]"}], ":=", 
   RowBox[{"makeVectorAround", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<pmra\>\"", "]"}], ",", 
         RowBox[{"\"\<MilliarcSeconds\>\"", "/", "\"\<Years\>\""}]}], "]"}], 
       ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<pmdec\>\"", "]"}], ",", 
         RowBox[{"\"\<MilliarcSeconds\>\"", "/", "\"\<Years\>\""}]}], "]"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<pm_err_maj\>\"", "]"}], ",", 
         RowBox[{"\"\<MilliarcSeconds\>\"", "/", "\"\<Years\>\""}]}], "]"}], 
       ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<pm_err_min\>\"", "]"}], ",", 
         RowBox[{"\"\<MilliarcSeconds\>\"", "/", "\"\<Years\>\""}]}], "]"}], 
       ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<pm_err_angle\>\"", "]"}], ",", 
         "\"\<AngularDegrees\>\""}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<DeclinationWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{
     RowBox[{"Last", " ", "@", " ", 
      RowBox[{"Around", " ", "@", " ", 
       RowBox[{"arrangeProperty", "[", 
        RowBox[{"asso", ",", "\"\<PositionErrorEllipse\>\""}], "]"}]}]}], ",", 
     RowBox[{"MixedUnit", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AngularDegrees\>\"", ",", "\"\<ArcMinutes\>\"", ",", 
        "\"\<ArcSeconds\>\""}], "}"}], "]"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RightAscensionWithUncertainty\>\""}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"UnitConvert", "[", " ", 
    RowBox[{
     RowBox[{"First", " ", "@", " ", 
      RowBox[{"Around", " ", "@", " ", 
       RowBox[{"arrangeProperty", "[", 
        RowBox[{"asso", ",", "\"\<PositionErrorEllipse\>\""}], "]"}]}]}], ",", 
     RowBox[{"MixedUnit", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<HoursOfRightAscension\>\"", ",", 
        "\"\<MinutesOfRightAscension\>\"", ",", 
        "\"\<SecondsOfRightAscension\>\""}], "}"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "following", " ", "units", " ", "are", " ", "based", " ", "on",
     " ", "the", " ", "metada", " ", "that", " ", "reports", " ", "Simbad", 
    " ", "on", " ", "the", " ", "TAP", " ", "service"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<PositionErrorEllipse\>\""}], "]"}], ":=", 
   RowBox[{"makeVectorAround", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<ra\>\"", "]"}], ",", 
         "\"\<AngularDegrees\>\""}], "]"}], ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<dec\>\"", "]"}], ",", 
         "\"\<AngularDegrees\>\""}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"asso", "[", "\"\<coo_err_maj\>\"", "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"3600", "*", "1000"}], ")"}]}], ",", 
         "\"\<AngularDegrees\>\""}], "]"}], ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"asso", "[", "\"\<coo_err_min\>\"", "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"3600", "*", "1000"}], ")"}]}], ",", 
         "\"\<AngularDegrees\>\""}], "]"}], ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<coo_err_angle\>\"", "]"}], ",", 
         "\"\<AngularDegrees\>\""}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RadialVelocityWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<v\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"Around", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<rvz_radvel\>\"", "]"}], ",", 
         RowBox[{"asso", "[", "\"\<rvz_err\>\"", "]"}]}], "]"}], ",", 
       RowBox[{"\"\<Kilometers\>\"", "/", "\"\<Seconds\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RedshiftWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<z\>\""}], "||", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<c\>\""}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_redshift\>\"", "]"}], ",", 
       RowBox[{"asso", "[", "\"\<rvz_err\>\"", "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<UMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<U\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<U_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<BMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<B\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<B_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<VMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<V\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<V_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<R\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<R_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<IMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<I\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<I_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<JMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<J\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<J_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<HMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<H\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<H_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<KMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<K\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<K_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<G\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<G_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSUMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<u\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<u_err\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSGMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<g\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<g_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSRMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<r\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<r_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSIMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<i\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<i_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSZMagnitudeWithUncertainty\>\""}], "]"}], ":=", 
   RowBox[{"Around", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<z\>\"", "]"}], ",", 
     RowBox[{"asso", "[", "\"\<z_err\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{"asso_", ",", "\"\<ParallaxWithUncertainty\>\""}], "]"}], ":=", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{"Around", "[", 
     RowBox[{
      RowBox[{"asso", "[", "\"\<plx_value\>\"", "]"}], ",", 
      RowBox[{"asso", "[", "\"\<plx_err\>\"", "]"}]}], "]"}], ",", 
    "\"\<MilliarcSeconds\>\""}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{
  3.822255682172933*^9, 3.8222557442704763`*^9, {3.8222558074212503`*^9, 
   3.8222558274145184`*^9}, {3.822255860263134*^9, 3.8222558891349688`*^9}, {
   3.822255940058111*^9, 3.8222559690185757`*^9}, {3.822256030500749*^9, 
   3.822256082626444*^9}, {3.82225614548206*^9, 3.822256169023163*^9}, {
   3.822391872156086*^9, 3.822391882635701*^9}, {3.822392650881049*^9, 
   3.822392657484591*^9}, 3.822392829452897*^9, {3.822392952656242*^9, 
   3.822392955009207*^9}, {3.822393084551058*^9, 3.822393092861876*^9}, {
   3.822393207055434*^9, 3.822393217569298*^9}, {3.822408721530984*^9, 
   3.822408721913767*^9}, 3.822408921168154*^9, {3.8224089674185963`*^9, 
   3.822409064274788*^9}, {3.822409135523102*^9, 3.822409157479308*^9}, {
   3.822409188830531*^9, 3.8224092190274982`*^9}, {3.822409289675831*^9, 
   3.822409309794839*^9}, {3.8224093873141823`*^9, 3.8224093878924637`*^9}, {
   3.822409428816778*^9, 3.822409446354199*^9}, {3.822409487704348*^9, 
   3.82240959525836*^9}, {3.822409632771429*^9, 3.822409672641852*^9}, {
   3.822409750860722*^9, 3.822409950387445*^9}, {3.8224103258607283`*^9, 
   3.8224103680085382`*^9}, {3.8224106566818247`*^9, 3.822410669616313*^9}, {
   3.823961661973564*^9, 3.8239616643099527`*^9}, 3.8239622659783*^9, {
   3.823962300674858*^9, 3.8239623825522823`*^9}, 3.823962422754868*^9, 
   3.823962786736369*^9, {3.823962881495325*^9, 3.823962906934071*^9}, {
   3.823962963283971*^9, 3.823963056940812*^9}, 3.823963093380777*^9, {
   3.82396331219761*^9, 3.823963343386162*^9}, {3.823965004003578*^9, 
   3.823965037422572*^9}, {3.823965330162958*^9, 3.823965331432219*^9}, {
   3.823965950866951*^9, 3.823965970892632*^9}, {3.823966005986055*^9, 
   3.823966012843987*^9}, {3.82396640373079*^9, 3.823966416346352*^9}, 
   3.823966604152594*^9, {3.823968066781678*^9, 3.823968220001564*^9}, {
   3.823968428885949*^9, 3.8239685297317047`*^9}, {3.8239685718156347`*^9, 
   3.8239686569783907`*^9}, {3.8239691658467073`*^9, 
   3.8239692996402187`*^9}, {3.823969348192993*^9, 3.823969352440496*^9}, {
   3.823969394695628*^9, 3.823969439837286*^9}, {3.823969472149981*^9, 
   3.823969503377589*^9}, {3.8239695413087*^9, 3.823969607928319*^9}, {
   3.823969681941433*^9, 3.8239697014374866`*^9}, {3.823969738192417*^9, 
   3.8239697393892107`*^9}, {3.8239697695952187`*^9, 
   3.8239698720786133`*^9}, {3.823969904268238*^9, 3.8239699284376373`*^9}, {
   3.823969966700811*^9, 3.823969970872013*^9}, {3.823970294898486*^9, 
   3.82397031176129*^9}, {3.8239703640405416`*^9, 3.82397040281819*^9}, 
   3.8239704395583982`*^9, {3.823970491688408*^9, 3.823970570284339*^9}, {
   3.823970604308741*^9, 3.823970604679431*^9}, {3.82397069480077*^9, 
   3.8239707045838633`*^9}, {3.824221212971336*^9, 3.8242212133636637`*^9}, {
   3.824221305232726*^9, 3.8242213065107727`*^9}, {3.83582297595339*^9, 
   3.8358230052889895`*^9}, {3.8358230556339197`*^9, 
   3.8358231487410283`*^9}, {3.8358231830266433`*^9, 3.835823227775673*^9}, {
   3.8358233406151943`*^9, 3.835823341365224*^9}, {3.835823435903347*^9, 
   3.835823550314596*^9}, {3.835823582305545*^9, 3.8358235977648973`*^9}, {
   3.8358236890848513`*^9, 3.8358237134094872`*^9}, {3.8358237533426747`*^9, 
   3.835823770174356*^9}, 3.83582382112772*^9, {3.835823886937731*^9, 
   3.835823888970908*^9}, {3.835823921032029*^9, 3.8358239322335005`*^9}, {
   3.8358239753602266`*^9, 3.835824259751311*^9}, {3.8358244762767076`*^9, 
   3.8358246515319386`*^9}, {3.8358247376045856`*^9, 
   3.8358248140483932`*^9}, {3.835824912593867*^9, 3.835825287902567*^9}, {
   3.835825318133273*^9, 3.835825472317851*^9}, {3.835825518892333*^9, 
   3.835825687074067*^9}, {3.8358257365892954`*^9, 3.8358258000580406`*^9}, {
   3.83582583572585*^9, 3.8358258954791756`*^9}, {3.8358259432906485`*^9, 
   3.8358261155485115`*^9}, {3.8358692423788347`*^9, 
   3.8358692440697536`*^9}, {3.835870556281602*^9, 3.835870557398241*^9}, {
   3.8364253728997097`*^9, 3.8364256451343803`*^9}, {3.836426399143236*^9, 
   3.8364264778608866`*^9}, {3.8396065087789717`*^9, 3.839606547895316*^9}, {
   3.8396066152700214`*^9, 3.8396066217024126`*^9}, {3.839606941541996*^9, 
   3.8396069633007965`*^9}, {3.839607305109297*^9, 3.839607313688013*^9}, {
   3.8396073594645977`*^9, 3.839607487191696*^9}, {3.8396075350021505`*^9, 
   3.839607579086155*^9}, {3.8396076512705083`*^9, 3.839607652712807*^9}, {
   3.839607693828867*^9, 3.839607708063816*^9}, {3.8396077405480547`*^9, 
   3.8396077501471434`*^9}, {3.8396078517588596`*^9, 
   3.8396079323301497`*^9}, {3.839607990357359*^9, 3.839608035441209*^9}, {
   3.8396080690717936`*^9, 3.8396081958738947`*^9}, {3.8396086670046234`*^9, 
   3.83960866900017*^9}, {3.839612468785245*^9, 3.8396124856243916`*^9}, {
   3.8399488864424963`*^9, 3.83994889303575*^9}, {3.83994894842152*^9, 
   3.839948967453308*^9}, {3.839949011546667*^9, 3.839949116902113*^9}, {
   3.8399492318199415`*^9, 3.8399493358122997`*^9}, {3.839949409457939*^9, 
   3.839949426269977*^9}, {3.8399494892397738`*^9, 3.83994955404221*^9}, {
   3.839949608244623*^9, 3.839949698901292*^9}, {3.8399498118183155`*^9, 
   3.8399498199456096`*^9}, 3.839949959138543*^9, {3.839954813431158*^9, 
   3.839954881571254*^9}, {3.839954916027192*^9, 3.8399549350648355`*^9}, {
   3.8399550456886187`*^9, 3.8399551339732533`*^9}, {3.8399552126633077`*^9, 
   3.83995532885364*^9}, {3.8399553925682173`*^9, 3.839955532052627*^9}, {
   3.839955638632244*^9, 3.8399556578646164`*^9}, {3.8400388499770203`*^9, 
   3.8400389057825947`*^9}, {3.840038974297141*^9, 3.8400389882692122`*^9}},
 CellLabel->"In[60]:=",
 CellID->161636932,ExpressionUUID->"16501b0d-f7ad-4982-9a60-50523ada5170"]
}, Closed]],

Cell[CellGroupData[{

Cell["List properties", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{3.8222555889522667`*^9},
 CellLabel->"In[24]:=",
 CellID->841457938,ExpressionUUID->"df200611-8e5e-40a7-9f27-b98d2de67fcb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<Identifiers\>\""}], "]"}], ":=", 
   RowBox[{"StringTrim", " ", "/@", " ", 
    RowBox[{"DeleteDuplicates", " ", "@", " ", 
     RowBox[{"StringExtract", "[", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"asso", "[", "\"\<ids\>\"", "]"}], ",", 
         RowBox[{"Whitespace", "\[Rule]", "\"\< \>\""}]}], "]"}], ",", 
       RowBox[{"\"\<|\>\"", "\[Rule]", "All"}]}], "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{"asso_", ",", "\"\<ObjectTypes\>\""}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"otypes", "=", 
       RowBox[{"StringTrim", " ", "/@", " ", 
        RowBox[{"DeleteDuplicates", " ", "@", " ", 
         RowBox[{"StringExtract", "[", 
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"asso", "[", "\"\<otypes\>\"", "]"}], ",", 
             RowBox[{"Whitespace", "\[Rule]", "\"\< \>\""}]}], "]"}], ",", 
           RowBox[{"\"\<|\>\"", "\[Rule]", "All"}]}], "]"}]}]}]}], ",", 
      "otype"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MissingQ", "[", 
          RowBox[{"otype", "=", 
           RowBox[{"otypeDescription", "[", "#", "]"}]}], "]"}]}], ",", 
        "otype", ",", "#"}], "]"}], "&"}], "/@", "otypes"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.836425655091284*^9, 3.8364256941308727`*^9}, {
  3.8399557605831413`*^9, 3.839955772021927*^9}, {3.839955891469657*^9, 
  3.8399558955095634`*^9}, {3.839956089156968*^9, 3.8399561312529883`*^9}, {
  3.839956173691588*^9, 3.8399562063914776`*^9}, {3.8399563063632913`*^9, 
  3.8399563516130867`*^9}, {3.8399586020769672`*^9, 3.839958613283743*^9}, {
  3.8400400117931757`*^9, 3.8400400162778254`*^9}, {3.840040071123054*^9, 
  3.8400400744329853`*^9}, {3.8400487087258463`*^9, 3.8400487175892315`*^9}, {
  3.8400487641292725`*^9, 3.8400487675955267`*^9}},
 CellLabel->"In[83]:=",
 CellID->41058265,ExpressionUUID->"1071fd86-40fb-452c-886e-0c32b16f0a5d"]
}, Closed]],

Cell[CellGroupData[{

Cell["One string properties", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{3.822255613370825*^9},
 CellLabel->"In[3]:=",
 CellID->748870089,ExpressionUUID->"0e17eabd-ba42-40fe-a21e-0d26c4118b4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<MainIdentifier\>\""}], "]"}], ":=", 
   RowBox[{"StringTrim", " ", "@", " ", 
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"asso", "[", "\"\<main_id\>\"", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Whitespace", "\[Rule]", "\"\< \>\""}], "}"}]}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<PositionWavelengthClass\>\""}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"wl", "=", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"asso", "[", "\"\<coo_wavelength\>\"", "]"}], "]"}]}], ",", 
       "translatedwl"}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "[", 
         RowBox[{"translatedwl", "=", 
          RowBox[{"wavelengthDescription", "[", "wl", "]"}]}], "]"}]}], ",", 
       "translatedwl", ",", "wl"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<MainObjectType\>\""}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"otype", "=", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"asso", "[", "\"\<otype_txt\>\"", "]"}], "]"}]}], ",", 
       "translatedotype"}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "[", 
         RowBox[{"translatedotype", "=", 
          RowBox[{"otypeDescription", "[", "otype", "]"}]}], "]"}]}], ",", 
       "translatedotype", ",", "otype"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<MorphologicalClass\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"asso", "[", "\"\<morph_type\>\"", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Whitespace", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{"asso_", ",", "\"\<SpectralClass\>\""}], "]"}], ":=", 
  RowBox[{"StringTrim", " ", "@", " ", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<sp_type\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Whitespace", "\[Rule]", "\"\< \>\""}], "}"}]}], 
    "]"}]}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8364244687180195`*^9, 3.8364244952585974`*^9}, {
   3.8364257107850237`*^9, 3.83642576228974*^9}, {3.836425793870558*^9, 
   3.8364257975522976`*^9}, {3.839689573656985*^9, 3.839689583948887*^9}, 
   3.8396901102133894`*^9, {3.839956412675568*^9, 3.8399564553568873`*^9}, 
   3.839956521800759*^9, {3.839956558746792*^9, 3.8399566081003942`*^9}, {
   3.839956684857705*^9, 3.8399568273692513`*^9}, {3.8400486815472517`*^9, 
   3.8400486923903*^9}},
 CellLabel->"In[85]:=",
 CellID->56690090,ExpressionUUID->"d1d5d0b3-4af7-4905-b96f-9b3ca089a3bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Quality Properties", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{3.822255638386935*^9},
 CellLabel->"In[6]:=",
 CellID->621747879,ExpressionUUID->"330f768d-f639-47cc-b6a2-d37043bcf939"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<PositionQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<coo_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ProperMotionQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<pm_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ParallaxQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<plx_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SpectralClassQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<sp_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<MorphologicalClassQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<morph_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GalaxySizeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<galdim_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RedshiftQuality\>\""}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<c\>\""}], "||", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<z\>\""}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_qual\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RadialVelocityQuality\>\""}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<v\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_qual\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<UMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<U_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<BMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<B_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<VMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<V_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<R_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<IMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<I_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<JMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<J_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<HMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<H_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<KMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<K_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<G_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSUMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<u_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSGMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<g_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSRMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<r_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSIMagnitudeQuality\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<i_qual\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{"asso_", ",", "\"\<SDSSZMagnitudeQuality\>\""}], "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"asso", "[", "\"\<z_qual\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.836425802362397*^9, 3.836425981692313*^9}, {
  3.839956877288731*^9, 3.8399569353328342`*^9}, {3.839956983408395*^9, 
  3.83995700673593*^9}, {3.8399570383503127`*^9, 3.839957150393628*^9}, {
  3.8399572036849227`*^9, 3.839957282092057*^9}, {3.8399573172168655`*^9, 
  3.839957593681437*^9}},
 CellLabel->"In[90]:=",
 CellID->795394670,ExpressionUUID->"4bab2fde-378f-439e-b4bb-88172005adce"]
}, Closed]],

Cell[CellGroupData[{

Cell["Bibcode Properties", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.822394144441256*^9, 3.822394148804203*^9}},
 CellLabel->"In[23]:=",
 CellID->457862341,ExpressionUUID->"b7499d11-03c4-468e-9ccf-07dec2185026"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RedshiftBibcode\>\""}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<c\>\""}], "||", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<z\>\""}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_bibcode\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RadialVelocityBibcode\>\""}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"asso", "[", "\"\<rvz_type\>\"", "]"}], "===", "\"\<v\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"asso", "[", "\"\<rvz_bibcode\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<PositionBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<coo_bibcode\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ProperMotionBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<pm_bibcode\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<ParallaxBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<plx_bibcode\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SpectralClassBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<sp_bibcode\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GalaxySizeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<galdim_bibcode\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<MorphologicalClassBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<morph_bibcode\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<UMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<U_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<BMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<B_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<VMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<V_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<RMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<R_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<IMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<I_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<JMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<J_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<HMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<H_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<KMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<K_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<GMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<G_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSUMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<u_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSGMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<g_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSRMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<r_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrangeProperty", "[", 
    RowBox[{"asso_", ",", "\"\<SDSSIMagnitudeBibcode\>\""}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"asso", "[", "\"\<i_bib\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"arrangeProperty", "[", 
   RowBox[{"asso_", ",", "\"\<SDSSZMagnitudeBibcode\>\""}], "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"asso", "[", "\"\<z_bib\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], "}"}]}], "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8364259878387623`*^9, 3.836426179293247*^9}, {
  3.8399576345885096`*^9, 3.8399580713292217`*^9}},
 CellLabel->"In[112]:=",
 CellID->480972582,ExpressionUUID->"5015a0e0-628a-4eb3-b5d3-4f97fcb2f399"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sky Region Functions", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.823119799907897*^9, 3.8231198091815853`*^9}},
 CellLabel->"In[23]:=",
 CellID->959464892,ExpressionUUID->"a8e867b8-7619-441a-8aa9-d384abb64af1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "Circle"}]}]}]}]}], " ", "sky", " ", "region", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"function", "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "should", " ", "be", " ", "called", " ", 
    "just", " ", 
    RowBox[{"internally", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"astroDataCircle", "[", 
    RowBox[{
     RowBox[{"x_", "?", "AssociationQ"}], ",", " ", "prop_", ",", " ", 
     "modifier_", ",", " ", "root_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
      "centerRA", ",", " ", "centerDE", ",", " ", "radius", ",", " ", 
       "maxitems", ",", " ", "columns", ",", " ", "tables", ",", " ", "query",
        ",", " ", 
       RowBox[{"modi", " ", "=", " ", "modifier"}], ",", " ", 
       "cleanProperties"}], "\n", "}"}], ",", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Translate", " ", "the", " ", "input", " ", "properties", " ", "to", 
       " ", "columns", " ", "and", " ", "tables", " ", "as", " ", "they", " ",
        "will", " ", "appear", " ", "in", " ", "the", " ", "SQL", " ", 
       "query"}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"columns", ",", " ", "tables", ",", " ", "cleanProperties"}], 
        "}"}], " ", "=", " ", 
       RowBox[{"translateProperties", "[", "prop", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", "Read"}]}], " ", "the", " ", "query", " ", "inside", 
         " ", "the", " ", 
         RowBox[{"association", "--"}]}], "-"}], " ", "*)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Default", " ", "radius", " ", "if", " ", "it", " ", "does", " ", 
        "not", " ", 
        RowBox[{"exist", "."}]}], " ", "*)"}], "\n", 
      RowBox[{"radius", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"x", ",", " ", "\"\<AstroRange\>\"", ",", " ", 
         RowBox[{"Quantity", "[", 
          RowBox[{"10", ",", " ", "\"\<ArcMinutes\>\""}], "]"}]}], "]"}]}], 
      ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Setting", " ", "the", " ", "radius"}], ",", " ", 
        RowBox[{"including", " ", "units"}]}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumericQ", "[", "radius", "]"}], ",", " ", 
        RowBox[{"radius", " ", "=", " ", 
         RowBox[{"Quantity", "[", 
          RowBox[{"radius", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], 
        ",", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"QuantityQ", "[", "radius", "]"}], ",", " ", 
          RowBox[{"radius", " ", "=", " ", 
           RowBox[{"UnitConvert", "[", 
            RowBox[{"radius", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], 
          ",", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}],
             "[", 
            RowBox[{
             RowBox[{"SIMBADData", "::", "wrongradius"}], ",", " ", 
             RowBox[{"Lookup", "[", 
              RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}]}], "]"}], 
           ";", " ", 
           RowBox[{"Throw", "[", 
            RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
         "]"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Check", " ", "correct", " ", "radius"}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FailureQ", "[", "radius", "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongradius"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}]}], "]"}], 
         ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Quantity", "[", 
            RowBox[{"0", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], " ", 
           "\[LessEqual]", " ", "radius", " ", "\[LessEqual]", " ", 
           RowBox[{"Quantity", "[", 
            RowBox[{"90", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], 
          ")"}]}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "bigradius"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}]}], "]"}], 
         ";", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "the", " ", "correctness", " ", "of", " ", "the", " ", 
        "center", " ", "and", " ", "transform", " ", "to", " ", "the", " ", 
        "proper", " ", "units"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"centerRA", ",", " ", "centerDE"}], "}"}], " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], ",", " ", 
            RowBox[{"Quantity", "[", 
             RowBox[{"#", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], ",", 
            " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"QuantityQ", "[", "#", "]"}], ",", " ", 
              RowBox[{"UnitConvert", "[", 
               RowBox[{"#", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], ",", 
              "\n", "$Failed"}], "]"}]}], "]"}], " ", "&"}], ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"x", ",", " ", "\"\<AstroCenter\>\""}], "]"}]}], "]"}]}], 
      ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FailureQ", "[", "centerRA", "]"}], " ", "||", " ", 
         RowBox[{"FailureQ", "[", "centerDE", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongcenter"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "\"\<AstroCenter\>\""}], "]"}]}], "]"}], 
         ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "the", " ", "correct", " ", "range", " ", "in", " ", 
        "the", " ", "declination", " ", "of", " ", "the", " ", "center"}], 
       " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Quantity", "[", 
            RowBox[{
             RowBox[{"-", "90"}], ",", " ", "\"\<AngularDegrees\>\""}], "]"}],
            " ", "\[LessEqual]", " ", "centerDE", " ", "\[LessEqual]", " ", 
           RowBox[{"Quantity", "[", 
            RowBox[{"90", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], 
          ")"}]}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{"SIMBADData", "::", "wrongdec"}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Get", " ", "the", " ", "values", " ", "that", " ", "will", " ", 
        "appear", " ", "in", " ", "the", " ", "query"}], " ", "*)"}], "\n", 
      RowBox[{"radius", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", "[", 
         RowBox[{"QuantityMagnitude", "[", "radius", "]"}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"centerRA", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", "[", 
         RowBox[{"QuantityMagnitude", "[", "centerRA", "]"}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"centerDE", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", "[", 
         RowBox[{"QuantityMagnitude", "[", "centerDE", "]"}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "MaxItems"}], " ", "*)"}], "\n", 
      RowBox[{"maxitems", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"x", ",", " ", "MaxItems", ",", " ", "50"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"IntegerQ", "[", "maxitems", "]"}]}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongmaxitems"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "MaxItems"}], "]"}]}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Remove", " ", "id", " ", "column", " ", 
        RowBox[{"(", 
         RowBox[{
         "this", " ", "column", " ", "is", " ", "just", " ", "usefull", " ", 
          "in", " ", "object", " ", "queries"}], ")"}]}], " ", "*)"}], "\n", 
      RowBox[{"columns", "=", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"columns", ",", 
         RowBox[{"First", " ", "@", " ", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"columns", ",", "\"\<, ident.id\>\""}], "]"}]}]}], "]"}]}],
       ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Building", " ", "the", " ", "SQL", " ", "query"}], " ", 
       "*)"}], "\n", 
      RowBox[{"query", " ", "=", " ", 
       RowBox[{"URLEncode", "[", 
        RowBox[{
         RowBox[{
         "StringTemplate", "[", "\n", 
          "\"\<select top `maxrows` `headers` from basic `tb`\nwhere \
CONTAINS(POINT('ICRS', ra, dec), CIRCLE('ICRS', `ra`, `de`, `r`)) = 1;\>\"", 
          "\n", "]"}], "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<headers\>\"", "\[Rule]", "columns"}], ",", " ", 
           RowBox[{"\"\<tb\>\"", "\[Rule]", "tables"}], ",", " ", 
           RowBox[{"\"\<maxrows\>\"", "\[Rule]", 
            RowBox[{"ToString", "[", "maxitems", "]"}]}], ",", " ", 
           RowBox[{"\"\<ra\>\"", "\[Rule]", "centerRA"}], ",", " ", 
           RowBox[{"\"\<de\>\"", "\[Rule]", "centerDE"}], ",", " ", 
           RowBox[{"\"\<r\>\"", "\[Rule]", "radius"}]}], "|>"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "the", " ", "data", " ", "from", " ", "Simbad"}], 
       " ", "*)"}], "\n", 
      RowBox[{"getData", "[", 
       RowBox[{
       "root", ",", " ", "query", ",", " ", "cleanProperties", ",", " ", 
        "modi"}], "]"}]}]}], "\n", "]"}]}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.839677689340415*^9, 3.839677689782345*^9}, 
   3.839679094840125*^9, {3.839686212649747*^9, 3.8396862136658006`*^9}, {
   3.840035045097254*^9, 3.840035065998654*^9}, {3.8400352115413055`*^9, 
   3.8400352904713316`*^9}, {3.840035454479534*^9, 3.8400354600682416`*^9}, {
   3.8400356275877433`*^9, 3.840035630152418*^9}, {3.840035667824576*^9, 
   3.840035670980591*^9}, 3.8400357041422715`*^9, {3.8400357693859625`*^9, 
   3.8400357696815634`*^9}, {3.840036084358943*^9, 3.840036085352481*^9}, {
   3.840036226137252*^9, 3.840036230107957*^9}, {3.8400363088994336`*^9, 
   3.84003630926821*^9}},
 CellLabel->"In[134]:=",
 CellID->716244860,ExpressionUUID->"ab90c3ce-aa0e-4a17-bb0a-bd20d0c98e6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "Rectangle"}]}]}]}]}], " ", "sky", " ", "region", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"function", "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "should", " ", "be", " ", "called", " ", 
    "just", " ", 
    RowBox[{"internally", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"astroDataRectangle", "[", 
    RowBox[{
     RowBox[{"x_", "?", "AssociationQ"}], ",", "prop_", ",", "modifier_", ",",
      "root_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
      "columns", ",", "tables", ",", "maxitems", ",", "box", ",", "centerRA", 
       ",", "centerDE", ",", "boxWidth", ",", "boxHeigth", ",", "query", ",", 
       RowBox[{"modi", "=", "modifier"}], ",", "cleanProperties"}], "\n", 
      "}"}], ",", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Translate", " ", "the", " ", "input", " ", "properties", " ", "to", 
       " ", "columns", " ", "and", " ", "tables", " ", "as", " ", "they", " ",
        "will", " ", "appear", " ", "in", " ", "the", " ", "SQL", " ", 
       "query"}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"columns", ",", "tables", ",", "cleanProperties"}], "}"}], 
       "=", 
       RowBox[{"translateProperties", "[", "prop", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", "Read"}]}], " ", "the", " ", "query", " ", "inside", 
         " ", "the", " ", 
         RowBox[{"association", "--"}]}], "-"}], " ", "*)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Checking", " ", "the", " ", "correctness", " ", "of", " ", "the", " ",
         "angles", " ", "and", " ", "moving", " ", "the", " ", "angles", " ", 
        "to", " ", "the", " ", "right", " ", "units"}], " ", "*)"}], "\n", 
      RowBox[{"box", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], ",", " ", 
            RowBox[{"Quantity", "[", 
             RowBox[{"#", ",", "\"\<AngularDegrees\>\""}], "]"}], ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"QuantityQ", "[", "#", "]"}], ",", " ", 
              RowBox[{"UnitConvert", "[", 
               RowBox[{"#", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], ",", 
              "\n", "$Failed"}], "]"}]}], "]"}], "&"}], ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AnyTrue", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "box", "]"}], ",", " ", "FailureQ"}], "]"}],
         ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongbox"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}]}], "]"}], 
         ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Checking", " ", "the", " ", "correct", " ", "declination", " ", 
        "range"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", " ", ">", " ", 
            RowBox[{"Quantity", "[", 
             RowBox[{"90", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], " ",
            "||", " ", 
           RowBox[{"#", " ", "<", " ", 
            RowBox[{"Quantity", "[", 
             RowBox[{
              RowBox[{"-", "90"}], ",", " ", "\"\<AngularDegrees\>\""}], 
             "]"}]}]}], ",", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}],
             "[", 
            RowBox[{"SIMBADData", "::", "wrongdec"}], "]"}], ";", " ", 
           RowBox[{"Throw", "[", 
            RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
         "]"}], " ", "&"}], " ", "/@", " ", 
       RowBox[{"Last", "[", "box", "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "the", " ", "correctness", " ", "of", " ", "the", " ", 
        "box"}], " ", "*)"}], "\n", 
      RowBox[{"box", " ", "=", " ", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"box", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"box", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Area", "[", "box", "]"}], " ", "===", " ", "Undefined"}], 
        ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongbox"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}]}], "]"}], 
         ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Get", " ", "the", " ", "parameters", " ", "for", " ", "the", " ", 
        "query"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"centerRA", ",", " ", "centerDE"}], "}"}], " ", "=", " ", 
       RowBox[{"RegionCentroid", "[", "box", "]"}]}], ";", "\n", 
      RowBox[{"centerRA", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", " ", "@", " ", 
         RowBox[{"QuantityMagnitude", "[", "centerRA", "]"}]}]}]}], ";", "\n", 
      RowBox[{"centerDE", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", " ", "@", " ", 
         RowBox[{"QuantityMagnitude", "[", "centerDE", "]"}]}]}]}], ";", "\n", 
      RowBox[{"boxWidth", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", " ", "@", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"QuantityMagnitude", "[", 
            RowBox[{"box", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], " ", 
           "-", " ", 
           RowBox[{"QuantityMagnitude", "[", 
            RowBox[{"box", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "]"}]}]}]}], ";", "\n", 
      RowBox[{"boxHeigth", " ", "=", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"N", " ", "@", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"QuantityMagnitude", "[", 
            RowBox[{"box", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], " ", 
           "-", " ", 
           RowBox[{"QuantityMagnitude", "[", 
            RowBox[{"box", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "]"}]}]}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "MaxItems"}], " ", "*)"}], "\n", 
      RowBox[{"maxitems", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"x", ",", " ", "MaxItems", ",", " ", "50"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"IntegerQ", "[", "maxitems", "]"}]}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongmaxitems"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "MaxItems"}], "]"}]}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Remove", " ", "id", " ", "column", " ", 
        RowBox[{"(", 
         RowBox[{
         "this", " ", "column", " ", "is", " ", "just", " ", "usefull", " ", 
          "in", " ", "object", " ", "queries"}], ")"}]}], " ", "*)"}], "\n", 
      RowBox[{"columns", "=", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"columns", ",", 
         RowBox[{"First", " ", "@", " ", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"columns", ",", "\"\<, ident.id\>\""}], "]"}]}]}], "]"}]}],
       ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Building", " ", "the", " ", "SQL", " ", "query"}], " ", 
       "*)"}], "\n", 
      RowBox[{"query", " ", "=", " ", 
       RowBox[{"URLEncode", "[", 
        RowBox[{
         RowBox[{
         "StringTemplate", "[", "\n", 
          "\"\<select top `maxrows` `headers` from basic `tb`\nwhere \
CONTAINS(POINT('ICRS', ra, dec), BOX('ICRS', `ra`, `de`, `w`, `h`)) = 1;\>\"",
           "\n", "]"}], "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<headers\>\"", "\[Rule]", "columns"}], ",", 
           RowBox[{"\"\<tb\>\"", "\[Rule]", "tables"}], ",", 
           RowBox[{"\"\<maxrows\>\"", "\[Rule]", 
            RowBox[{"ToString", "[", "maxitems", "]"}]}], ",", 
           RowBox[{"\"\<ra\>\"", "\[Rule]", "centerRA"}], ",", 
           RowBox[{"\"\<de\>\"", "\[Rule]", "centerDE"}], ",", 
           RowBox[{"\"\<w\>\"", "\[Rule]", "boxWidth"}], ",", 
           RowBox[{"\"\<h\>\"", "\[Rule]", "boxHeigth"}]}], "|>"}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "the", " ", "data", " ", "from", " ", "Simbad"}], 
       " ", "*)"}], "\n", 
      RowBox[{"getData", "[", 
       RowBox[{
       "root", ",", " ", "query", ",", " ", "cleanProperties", ",", " ", 
        "modi"}], "]"}]}]}], "\n", "]"}]}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.839677699325406*^9, 3.8396776996785636`*^9}, 
   3.8396791034985733`*^9, {3.839686223528695*^9, 3.83968622392505*^9}, {
   3.840035303688452*^9, 3.840035303954814*^9}, 3.840035778101349*^9, {
   3.840036098332765*^9, 3.840036098880048*^9}, {3.8400362493298635`*^9, 
   3.8400362519868402`*^9}, {3.840036314983624*^9, 3.8400363152263412`*^9}},
 CellLabel->"In[135]:=",
 CellID->902876368,ExpressionUUID->"cc69d1bc-c2ba-41e4-ae91-76f4b8361429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "Polygon"}]}]}]}]}], " ", "sky", " ", "region", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"function", "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "should", " ", "be", " ", "called", " ", 
    "just", " ", 
    RowBox[{"internally", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"astroDataPolygon", "[", 
    RowBox[{
     RowBox[{"x_", "?", "AssociationQ"}], ",", "prop_", ",", "modifier_", ",",
      "root_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
      "query", ",", "columns", ",", "tables", ",", "maxitems", ",", "polygon",
        ",", 
       RowBox[{"modi", "=", "modifier"}], ",", "cleanProperties"}], "\n", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Translate", " ", "the", " ", "input", " ", "properties", " ", "to", 
       " ", "columns", " ", "and", " ", "tables", " ", "as", " ", "they", " ",
        "will", " ", "appear", " ", "in", " ", "the", " ", "SQL", " ", 
       "query"}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"columns", ",", "tables", ",", "cleanProperties"}], "}"}], 
       " ", "=", " ", 
       RowBox[{"translateProperties", "[", "prop", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", "Read"}]}], " ", "the", " ", "query", " ", "inside", 
         " ", "the", " ", 
         RowBox[{"association", "--"}]}], "-"}], " ", "*)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Checking", " ", "the", " ", "correctness", " ", "of", " ", "the", " ",
         "angles", " ", "and", " ", "moving", " ", "the", " ", "angles", " ", 
        "to", " ", "the", " ", "right", " ", "units"}], " ", "*)"}], "\n", 
      RowBox[{"polygon", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], ",", " ", 
            RowBox[{"Quantity", "[", 
             RowBox[{"#", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], ",", 
            " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"QuantityQ", "[", "#", "]"}], ",", " ", 
              RowBox[{"UnitConvert", "[", 
               RowBox[{"#", ",", " ", "\"\<AngularDegrees\>\""}], "]"}], ",", 
              "\n", "$Failed"}], "]"}]}], "]"}], " ", "&"}], ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AnyTrue", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "polygon", "]"}], ",", " ", "FailureQ"}], 
         "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{"SIMBADData", "::", "wrongpoly"}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "that", " ", "the", " ", "vertexes", " ", "are", " ", 
        "different"}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Union", "[", "polygon", "]"}], "]"}], " ", "<", " ", "3"}],
         ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{"SIMBADData", "::", "wrongpoly"}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Checking", " ", "the", " ", "correct", " ", "declination", " ", 
        "range"}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AnyTrue", "[", 
         RowBox[{
          RowBox[{"polygon", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", " ", ">", " ", 
             RowBox[{"Quantity", "[", 
              RowBox[{"90", ",", " ", "\"\<AngularDegrees\>\""}], "]"}]}], 
            " ", "||", " ", 
            RowBox[{"#", " ", "<", " ", 
             RowBox[{"Quantity", "[", 
              RowBox[{
               RowBox[{"-", "90"}], ",", " ", "\"\<AngularDegrees\>\""}], 
              "]"}]}]}], " ", "&"}]}], "]"}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{"SIMBADData", "::", "wrongdec"}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "that", " ", "any", " ", "segment", " ", "is", " ", 
        "not", " ", "180", "\[Degree]"}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AnyTrue", "[", 
         RowBox[{
          RowBox[{"ArcLength", " ", "/@", " ", 
           RowBox[{"Line", " ", "/@", " ", 
            RowBox[{"Partition", "[", 
             RowBox[{"polygon", ",", " ", "2", ",", " ", "1"}], "]"}]}]}], 
          ",", " ", 
          RowBox[{
           RowBox[{"#", " ", "\[Equal]", " ", 
            RowBox[{"Quantity", "[", 
             RowBox[{"180", ",", "\"\<AngularDegrees\>\""}], "]"}]}], " ", 
           "&"}]}], "]"}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongpolysegment"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}]}], "]"}], 
         ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], "]"}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Get", " ", "the", " ", "parameters", " ", "that", " ", "appear", " ", 
        "in", " ", "the", " ", "query"}], " ", "*)"}], "\n", 
      RowBox[{"polygon", " ", "=", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"QuantityMagnitude", "[", 
           RowBox[{"Flatten", "[", "polygon", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<{\>\"", ",", " ", "\"\<}\>\""}], "}"}], " ", 
          "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "MaxItems"}], " ", "*)"}], "\n", 
      RowBox[{"maxitems", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"x", ",", " ", "MaxItems", ",", " ", "50"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"IntegerQ", "[", "maxitems", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"SIMBADData", "::", "wrongmaxitems"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"x", ",", " ", "MaxItems"}], "]"}]}], "]"}], ";", " ", 
         RowBox[{"Throw", "[", 
          RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], "]"}], 
      ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Remove", " ", "id", " ", "column", " ", 
        RowBox[{"(", 
         RowBox[{
         "this", " ", "column", " ", "is", " ", "just", " ", "usefull", " ", 
          "in", " ", "object", " ", "queries"}], ")"}]}], " ", "*)"}], "\n", 
      RowBox[{"columns", "=", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"columns", ",", 
         RowBox[{"First", " ", "@", " ", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"columns", ",", "\"\<, ident.id\>\""}], "]"}]}]}], "]"}]}],
       ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Building", " ", "the", " ", "SQL", " ", "query"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"query", " ", "=", " ", 
       RowBox[{"URLEncode", "[", 
        RowBox[{
         RowBox[{
         "StringTemplate", "[", "\n", 
          "\"\<select top `maxrows` `headers` from basic `tb`\nwhere \
CONTAINS(POINT('ICRS', ra, dec), POLYGON('ICRS', `poly`)) = 1;\>\"", "\n", 
          "]"}], "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<headers\>\"", "\[Rule]", "columns"}], ",", 
           RowBox[{"\"\<tb\>\"", "\[Rule]", "tables"}], ",", 
           RowBox[{"\"\<maxrows\>\"", "\[Rule]", 
            RowBox[{"ToString", "[", "maxitems", "]"}]}], ",", 
           RowBox[{"\"\<poly\>\"", "\[Rule]", "polygon"}]}], "|>"}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "the", " ", "data", " ", "from", " ", "Simbad"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"getData", "[", 
       RowBox[{
       "root", ",", " ", "query", ",", " ", "cleanProperties", ",", " ", 
        "modi"}], "]"}]}]}], "\n", "]"}]}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.8396777089296827`*^9, 3.8396777092311583`*^9}, 
   3.8396791148845315`*^9, {3.8396862302953024`*^9, 3.839686230854721*^9}, {
   3.8400353099215193`*^9, 3.8400353101617727`*^9}, 3.8400357865469084`*^9, {
   3.8400361064542084`*^9, 3.840036106839142*^9}, {3.840036257654727*^9, 
   3.840036260246971*^9}, {3.840036319397616*^9, 3.840036319652048*^9}},
 CellLabel->"In[136]:=",
 CellID->103545782,ExpressionUUID->"123d6e60-7578-429f-abc1-4b7e65efdaca"]
}, Closed]],

Cell[CellGroupData[{

Cell["Object Functions", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.824321451314823*^9, 3.824321465536783*^9}},
 CellLabel->"In[4]:=",
 CellID->748339060,ExpressionUUID->"0c9de5af-8393-4ca8-9532-2d2dd0d7346f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "One"}]}]}]}]}], " ", "object", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"function", "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"iSIMBADData", "[", 
    RowBox[{
    "obj_", ",", " ", "prop_", ",", " ", "modifier_", ",", " ", "root_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "query", ",", " ", "columns", ",", " ", "tables", ",", " ", "object", 
       ",", " ", "cleanProperties"}], "\[IndentingNewLine]", "}"}], ",", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Get", " ", "the", " ", "name", " ", "of", " ", "the", " ", "object"}],
        ",", " ", 
       RowBox[{
       "while", " ", "checking", " ", "for", " ", "invalid", " ", 
        "inputs"}]}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{"object", " ", "=", " ", 
       RowBox[{"fullName", "[", "obj", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Translate", " ", "the", " ", "input", " ", "properties", " ", "to", 
        " ", "columns", " ", "and", " ", "tables", " ", "as", " ", "they", 
        " ", "will", " ", "appear", " ", "in", " ", "the", " ", "SQL", " ", 
        "query"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"columns", ",", " ", "tables", ",", " ", "cleanProperties"}], 
        "}"}], " ", "=", " ", 
       RowBox[{"translateProperties", "[", "prop", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Making", " ", "the", " ", "SQL", " ", "query"}], " ", "*)"}], 
      "\n", 
      RowBox[{"query", " ", "=", " ", 
       RowBox[{"URLEncode", "[", 
        RowBox[{
         RowBox[{
         "StringTemplate", "[", "\n", 
          "\"\<select `headers` from ident join basic \
on(ident.oidref=basic.oid) `tb`\nwhere ident.id='`obj`';\>\"", "\n", "]"}], 
         "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<headers\>\"", " ", "\[Rule]", " ", "columns"}], ",", 
           " ", 
           RowBox[{"\"\<tb\>\"", " ", "\[Rule]", " ", "tables"}], ",", " ", 
           RowBox[{"\"\<obj\>\"", " ", "\[Rule]", " ", "object"}]}], "|>"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "the", " ", "data", " ", "from", " ", "Simbad"}], 
       " ", "*)"}], "\n", 
      RowBox[{"getData", "[", 
       RowBox[{
       "root", ",", " ", "query", ",", " ", "obj", ",", " ", 
        "cleanProperties", ",", " ", "modifier"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.821550992083293*^9, 3.821551053747445*^9}, {
   3.821551195716523*^9, 3.8215511988479557`*^9}, {3.8215513101291933`*^9, 
   3.8215514028456*^9}, {3.8218134156400146`*^9, 3.821813418671571*^9}, {
   3.821813511079761*^9, 3.821813512138406*^9}, 3.821874295805357*^9, {
   3.8218745748754787`*^9, 3.821874611675831*^9}, {3.821874941537367*^9, 
   3.8218749485965347`*^9}, {3.8218758151769037`*^9, 
   3.8218759438463287`*^9}, {3.821876016747238*^9, 3.821876036105515*^9}, {
   3.821876090269393*^9, 3.821876104475827*^9}, {3.8218765179347553`*^9, 
   3.821876636888096*^9}, {3.8218767195299463`*^9, 3.8218767497937317`*^9}, {
   3.821876874668828*^9, 3.821876912583323*^9}, {3.821876953279901*^9, 
   3.8218769750197897`*^9}, 3.821877123221333*^9, {3.821877223096506*^9, 
   3.821877228698224*^9}, {3.8218789189136457`*^9, 3.821878989935485*^9}, {
   3.821879436387538*^9, 3.821879487573572*^9}, {3.821890841280114*^9, 
   3.8218908489211693`*^9}, {3.821891226920699*^9, 3.821891239925811*^9}, {
   3.821891305425538*^9, 3.821891324052458*^9}, {3.821891424965507*^9, 
   3.8218914509142933`*^9}, 3.821891490712892*^9, {3.821892997973905*^9, 
   3.821893001314639*^9}, {3.821893102143899*^9, 3.8218931029120913`*^9}, {
   3.821893136260376*^9, 3.821893246621379*^9}, 3.821893572799274*^9, {
   3.821894520897876*^9, 3.8218945361133413`*^9}, {3.821894781315612*^9, 
   3.821894788306102*^9}, {3.8218951350802593`*^9, 3.821895235623774*^9}, {
   3.821895682260126*^9, 3.8218956991155577`*^9}, {3.821895870325346*^9, 
   3.821895940574132*^9}, {3.821895982569427*^9, 3.821895983242915*^9}, {
   3.821896053692664*^9, 3.82189605522219*^9}, {3.82189609008036*^9, 
   3.8218960943956327`*^9}, {3.821896137721616*^9, 3.8218961525836287`*^9}, {
   3.8218961838713837`*^9, 3.821896186465563*^9}, {3.8218962499984913`*^9, 
   3.821896253203144*^9}, {3.821896285769968*^9, 3.8218962865962677`*^9}, {
   3.82189635456243*^9, 3.8218963837769413`*^9}, {3.821897004172176*^9, 
   3.821897037333767*^9}, {3.8220451523985653`*^9, 3.8220451526861343`*^9}, {
   3.82204697466864*^9, 3.8220469830128107`*^9}, {3.822047095480343*^9, 
   3.8220471602887363`*^9}, {3.822074996852704*^9, 3.8220750063677883`*^9}, {
   3.822075069161257*^9, 3.822075071192855*^9}, {3.822075126141569*^9, 
   3.822075126330958*^9}, {3.822075367782164*^9, 3.822075368991724*^9}, {
   3.822075737185935*^9, 3.822075795182293*^9}, {3.8220758516116056`*^9, 
   3.8220758573440533`*^9}, {3.8220869301427937`*^9, 3.822086942520156*^9}, {
   3.822087115959551*^9, 3.822087136178499*^9}, {3.822087194923458*^9, 
   3.822087199336362*^9}, {3.822087236124131*^9, 3.8220872503347473`*^9}, {
   3.822087418738101*^9, 3.822087428675795*^9}, 3.8220875112274427`*^9, {
   3.8220878915276127`*^9, 3.8220879194375877`*^9}, {3.822088041371489*^9, 
   3.8220881232785263`*^9}, {3.822088196165948*^9, 3.8220882576679907`*^9}, {
   3.822088660780683*^9, 3.822088672352975*^9}, {3.822088781133307*^9, 
   3.8220887859191027`*^9}, {3.822089038984974*^9, 3.822089047421389*^9}, {
   3.8220891268631983`*^9, 3.822089157685145*^9}, {3.822089313600553*^9, 
   3.8220893347405787`*^9}, {3.822090677450717*^9, 3.822090681886443*^9}, {
   3.822090876655484*^9, 3.822090877145544*^9}, {3.822091955722946*^9, 
   3.822091987474222*^9}, {3.82209202460767*^9, 3.8220920464196653`*^9}, 
   3.822092096999277*^9, {3.822092565805344*^9, 3.82209257170155*^9}, {
   3.82209260196237*^9, 3.8220926070403023`*^9}, {3.822092640542068*^9, 
   3.8220926521175003`*^9}, {3.822092690423789*^9, 3.822092720508706*^9}, {
   3.8221307697484417`*^9, 3.822130779353097*^9}, {3.8221308957613583`*^9, 
   3.822130896094324*^9}, {3.8221325802285347`*^9, 3.82213259030624*^9}, {
   3.822132804132756*^9, 3.822132819889373*^9}, {3.822133178328238*^9, 
   3.822133188521467*^9}, {3.822133298565287*^9, 3.822133311279689*^9}, {
   3.8221333977321672`*^9, 3.822133494634102*^9}, {3.822133557011119*^9, 
   3.822133559172319*^9}, {3.822133758090724*^9, 3.822133760135738*^9}, {
   3.822134664903491*^9, 3.822134685403089*^9}, {3.822134754126624*^9, 
   3.822134824533598*^9}, {3.82213491476763*^9, 3.82213493881644*^9}, {
   3.822135112615337*^9, 3.822135136155367*^9}, {3.8221453563307753`*^9, 
   3.822145386862278*^9}, {3.82214560644326*^9, 3.822145607786083*^9}, {
   3.822145687769261*^9, 3.82214570334571*^9}, {3.822145750914666*^9, 
   3.822145792264188*^9}, {3.822146114248589*^9, 3.822146115838026*^9}, 
   3.822146223663949*^9, {3.822146286718853*^9, 3.822146289949033*^9}, {
   3.822146335457973*^9, 3.822146358729885*^9}, {3.8221463949237223`*^9, 
   3.822146408575946*^9}, 3.822146442306149*^9, 3.8221465047428713`*^9, {
   3.8221489990670023`*^9, 3.822149070197195*^9}, {3.8221491090395823`*^9, 
   3.822149136337472*^9}, {3.822149170287641*^9, 3.82214919735815*^9}, {
   3.822149243518023*^9, 3.822149254813016*^9}, {3.822149292188905*^9, 
   3.82214930702861*^9}, {3.822149370112322*^9, 3.822149377858498*^9}, 
   3.822410930470201*^9, {3.8224109773221416`*^9, 3.822411037472603*^9}, {
   3.8224111661728573`*^9, 3.822411167873908*^9}, 3.822412877434162*^9, {
   3.822564758292286*^9, 3.822564787208498*^9}, {3.822564822770535*^9, 
   3.822564903434966*^9}, {3.8225787678196573`*^9, 3.822578847613326*^9}, {
   3.823251015652314*^9, 3.823251036510942*^9}, {3.823251169161417*^9, 
   3.8232511743247232`*^9}, 3.8232513627195683`*^9, {3.8232585922058563`*^9, 
   3.8232586452880707`*^9}, {3.823258782027362*^9, 3.8232588430460978`*^9}, {
   3.823259026766293*^9, 3.823259058444953*^9}, {3.8232592515343857`*^9, 
   3.823259252117147*^9}, {3.8232605812493277`*^9, 3.823260583058288*^9}, 
   3.823260669745965*^9, {3.823683336073895*^9, 3.823683336489237*^9}, {
   3.823683698009523*^9, 3.823683707088099*^9}, {3.823683810717019*^9, 
   3.8236839378776417`*^9}, {3.8236839758541737`*^9, 
   3.8236840430701513`*^9}, {3.823684113596654*^9, 3.823684121747335*^9}, {
   3.8236849670966883`*^9, 3.8236849672412252`*^9}, {3.823685011858564*^9, 
   3.823685019621986*^9}, {3.823686925858478*^9, 3.8236869261493483`*^9}, {
   3.8239725125276613`*^9, 3.8239725144835873`*^9}, {3.824224731681657*^9, 
   3.824224769481043*^9}, 3.824224813505168*^9, {3.824225291307002*^9, 
   3.8242252937690773`*^9}, {3.824225359579603*^9, 3.8242253624230556`*^9}, 
   3.824233886819502*^9, {3.82423447181378*^9, 3.824234556011359*^9}, {
   3.8242358830407677`*^9, 3.824235898273437*^9}, {3.824235931114214*^9, 
   3.824235951552182*^9}, 3.824239261496663*^9, {3.8242502830557547`*^9, 
   3.8242502857859783`*^9}, 3.824252079466256*^9, {3.824252129671949*^9, 
   3.824252158094014*^9}, {3.824254306126442*^9, 3.824254306128525*^9}, {
   3.824310403444169*^9, 3.8243104037747707`*^9}, {3.8243108423946743`*^9, 
   3.824310855581401*^9}, {3.824313356186186*^9, 3.824313466291204*^9}, {
   3.824313510482729*^9, 3.824313515515972*^9}, 3.824313662451405*^9, 
   3.824314076084282*^9, {3.8243885200591497`*^9, 3.8243885204786673`*^9}, {
   3.824412763029565*^9, 3.824412766074353*^9}, {3.824412844266821*^9, 
   3.8244128444833727`*^9}, {3.8244850823435917`*^9, 3.824485086506156*^9}, {
   3.824485208246154*^9, 3.824485219967622*^9}, {3.824485447370338*^9, 
   3.8244854684934998`*^9}, 3.824486221611844*^9, {3.82448836824518*^9, 
   3.824488374692477*^9}, {3.8322576543603506`*^9, 3.8322576665952215`*^9}, {
   3.832260816017166*^9, 3.8322608194143534`*^9}, {3.832357043060938*^9, 
   3.8323570433792825`*^9}, {3.832357215667802*^9, 3.832357216002981*^9}, {
   3.8323584578576097`*^9, 3.8323584645007863`*^9}, {3.832360287164792*^9, 
   3.832360294300318*^9}, {3.832361849805601*^9, 3.8323618530681934`*^9}, {
   3.8323636154050927`*^9, 3.8323636160458984`*^9}, {3.834839343853718*^9, 
   3.834839351866664*^9}, {3.8357914703492594`*^9, 3.835791475687867*^9}, {
   3.839677656657651*^9, 3.8396776571818514`*^9}, {3.839680644312875*^9, 
   3.839680651040474*^9}, {3.8397842201047897`*^9, 3.8397842227078876`*^9}, {
   3.839788160163774*^9, 3.839788163828499*^9}, {3.8400249771056147`*^9, 
   3.8400249780594506`*^9}},
 CellLabel->"In[137]:=",
 CellID->618565956,ExpressionUUID->"c9477cd3-bbd7-422e-a773-96bacf6627cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", "Multi"}]}]}]}]}], " ", "object", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"function", "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"iSIMBADData", "[", 
    RowBox[{
    "objs_List", ",", " ", "prop_", ",", " ", "modifier_", ",", " ", 
     "root_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
      "query", ",", " ", "columns", ",", " ", "tables", ",", " ", "objects", 
       ",", " ", 
       RowBox[{"modi", " ", "=", " ", "modifier"}], ",", " ", 
       "cleanProperties"}], "\n", "}"}], ",", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Get", " ", "the", " ", "name", " ", "of", " ", "the", " ", 
        "objects"}], ",", " ", 
       RowBox[{
       "while", " ", "checking", " ", "for", " ", "invalid", " ", 
        "inputs"}]}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{"objects", " ", "=", " ", 
       RowBox[{"fullName", " ", "/@", " ", "objs"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Translate", " ", "the", " ", "input", " ", "properties", " ", "to", 
        " ", "columns", " ", "and", " ", "tables", " ", "as", " ", "they", 
        " ", "will", " ", "appear", " ", "in", " ", "the", " ", "SQL", " ", 
        "query"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"columns", ",", " ", "tables", ",", " ", "cleanProperties"}], 
        "}"}], " ", "=", " ", 
       RowBox[{"translateProperties", "[", "prop", "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Building", " ", "the", " ", "SQL", " ", "query"}], " ", 
       "*)"}], "\n", 
      RowBox[{"query", " ", "=", " ", 
       RowBox[{"URLEncode", "[", 
        RowBox[{
         RowBox[{
         "StringTemplate", "[", "\n", 
          "\"\<select `headers` from ident join basic \
on(ident.oidref=basic.oid) `tb`\nwhere ident.id IN ('`obj`');\>\"", "\n", 
          "]"}], "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<headers\>\"", " ", "\[Rule]", " ", "columns"}], ",", 
           " ", 
           RowBox[{"\"\<tb\>\"", " ", "\[Rule]", " ", "tables"}], ",", " ", 
           RowBox[{"\"\<obj\>\"", " ", "\[Rule]", " ", 
            RowBox[{"StringRiffle", "[", 
             RowBox[{"objects", ",", "\"\<','\>\""}], "]"}]}]}], "|>"}], 
         "]"}], "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Get", " ", "the", " ", "data", " ", "from", " ", "Simbad"}], 
       " ", "*)"}], "\n", 
      RowBox[{"getData", "[", 
       RowBox[{
       "root", ",", " ", "query", ",", " ", "objs", ",", " ", 
        "cleanProperties", ",", " ", "modi"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{
  3.839677666158467*^9, {3.839680674713209*^9, 3.839680679017747*^9}, {
   3.8397846542035427`*^9, 3.839784654653305*^9}, 3.840025012068572*^9},
 CellLabel->"In[138]:=",
 CellID->861291598,ExpressionUUID->"0d377574-4c47-4033-80e1-c6bb3c151c47"]
}, Closed]],

Cell[CellGroupData[{

Cell["Main", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8221525283711233`*^9, 3.822152530750957*^9}},
 CellLabel->"In[3]:=",
 CellID->581921379,ExpressionUUID->"d3dfffb2-09be-48df-819e-212cc8158723"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{
          RowBox[{
           RowBox[{"Parser", "--"}], "--"}], "--"}]}]}]}]}]}], 
    RowBox[{"--", "--"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"SIMBADData", "[", 
    RowBox[{"x_", ",", " ", "prop_", ",", " ", 
     RowBox[{"modifier_String", ":", "\"\<Default\>\""}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"root", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<DataSource\>\"", "]"}]}], ",", "\n", 
       "res"}], "\n", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "root", "]"}], " ", "===", " ", "Entity"}], 
         " ", "&&", " ", 
         RowBox[{
          RowBox[{"EntityTypeName", "[", "root", "]"}], " ", "===", " ", 
          "\"\<Country\>\""}]}], ",", "\n", 
        RowBox[{"root", " ", "=", " ", 
         RowBox[{
          RowBox[{"CanonicalName", "[", "root", "]"}], " ", "/.", " ", 
          RowBox[{
          "\"\<UnitedStates\>\"", " ", "\[Rule]", " ", "\"\<US\>\""}]}]}]}], 
       "]"}], ";", "\n", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Catch", "[", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"Read", " ", "the", " ", "DataSource", " ", "option"}], " ", 
         "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"root", " ", "===", " ", "\"\<France\>\""}], ",", " ", 
            RowBox[{"root", " ", "=", " ", "rootFrance"}], ",", " ", "\n", 
            RowBox[{"root", " ", "===", " ", "\"\<US\>\""}], ",", " ", 
            RowBox[{"root", " ", "=", " ", "rootUS"}], ",", "\n", "True", ",",
             " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", 
               "]"}], "[", 
              RowBox[{"SIMBADData", "::", "wrongmirror"}], "]"}], ";", " ", 
             RowBox[{"Throw", "[", 
              RowBox[{"$fail", ",", " ", "\"\<AstroDataError\>\""}], 
              "]"}]}]}], "]"}], ";", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Call", " ", "to", " ", "the", " ", "proper", " ", "function"}], 
           " ", "*)"}], "\n", 
          RowBox[{"Which", "[", "\n", 
           RowBox[{"(*", " ", 
            RowBox[{"Query", " ", "by", " ", "object"}], " ", "*)"}], "\n", 
           RowBox[{
            RowBox[{"!", " ", 
             RowBox[{"AssociationQ", "[", "x", "]"}]}], ",", " ", 
            RowBox[{"iSIMBADData", "[", 
             RowBox[{
             "x", ",", " ", "prop", ",", " ", "modifier", ",", " ", "root"}], 
             "]"}], ",", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Query", " ", "by", " ", "object"}], " ", "*)"}], "\n", 
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{"x", ",", " ", "\"\<Object\>\""}], "]"}], ",", " ", 
            RowBox[{"iSIMBADData", "[", 
             RowBox[{
              RowBox[{"Lookup", "[", 
               RowBox[{"x", ",", " ", "\"\<Object\>\""}], "]"}], ",", " ", 
              "prop", ",", " ", "modifier", ",", " ", "root"}], "]"}], ",", 
            "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Query", " ", "by", " ", "circle"}], " ", "*)"}], "\n", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"x", ",", " ", "\"\<AstroCenter\>\""}], "]"}], " ", "&&",
              " ", 
             RowBox[{"ListQ", "[", 
              RowBox[{"Lookup", "[", 
               RowBox[{"x", ",", " ", "\"\<AstroCenter\>\""}], "]"}], "]"}], 
             " ", "&&", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"Lookup", "[", 
                RowBox[{"x", ",", " ", "\"\<AstroCenter\>\""}], "]"}], "]"}], 
              " ", "\[Equal]", " ", 
              RowBox[{"{", "2", "}"}]}]}], ",", "\n", 
            RowBox[{"astroDataCircle", "[", 
             RowBox[{
             "x", ",", " ", "prop", ",", " ", "modifier", ",", " ", "root"}], 
             "]"}], ",", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Query", " ", "by", " ", "rectangle"}], " ", "*)"}], 
            "\n", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], " ", "&&",
              " ", 
             RowBox[{"ListQ", "[", 
              RowBox[{"Lookup", "[", 
               RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], "]"}], 
             " ", "&&", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"Lookup", "[", 
                RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], "]"}], 
              " ", "\[Equal]", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "2"}], "}"}]}]}], ",", "\n", 
            RowBox[{"astroDataRectangle", "[", 
             RowBox[{
             "x", ",", " ", "prop", ",", " ", "modifier", ",", " ", "root"}], 
             "]"}], ",", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Query", " ", "by", " ", "polygon"}], " ", "*)"}], "\n", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], " ", "&&",
              " ", 
             RowBox[{"ListQ", "[", 
              RowBox[{"Lookup", "[", 
               RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], "]"}], 
             " ", "&&", " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Lookup", "[", 
                RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], "]"}], 
              " ", ">", " ", "2"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"Lookup", "[", 
                RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], "]"}], 
              " ", "\[Equal]", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Lookup", "[", 
                  RowBox[{"x", ",", " ", "\"\<AstroRange\>\""}], "]"}], "]"}],
                 ",", " ", "2"}], "}"}]}]}], ",", "\n", 
            RowBox[{"astroDataPolygon", "[", 
             RowBox[{
             "x", ",", " ", "prop", ",", " ", "modifier", ",", " ", "root"}], 
             "]"}], ",", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Wrong", " ", "query"}], " ", "*)"}], "\n", "True", ",", 
            " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", 
               "]"}], "[", 
              RowBox[{
               RowBox[{"SIMBADData", "::", "invalidquery"}], ",", "x"}], 
              "]"}], ";", " ", 
             RowBox[{"Throw", "[", 
              RowBox[{"$fail", ",", "\"\<AstroDataError\>\""}], "]"}]}]}], 
           "\n", "]"}]}], ",", " ", "\"\<AstroDataError\>\""}], "]"}]}], ";", 
      "\n", 
      RowBox[{"res", " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$fail"}]}]}]}], "\n", 
    "]"}]}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[139]:=",
 CellID->888772535,ExpressionUUID->"54b70caa-7ddd-4e5a-9bea-4967bf31bbf0"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->94487535,ExpressionUUID->"1759420f-579a-4064-bfd5-5d358cfa63a5"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4a9256be-5955-4798-a5d7-3f54bddbbac7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->321985898,ExpressionUUID->"1479c980-78d2-4623-9daa-130032cf16cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
  "\"\<\!\(\*StyleBox[\"keywords\", \"TI\"]\)\!\(\*StyleBox[\"\\\"\<\>\", \
\"TI\"]\)\>", ",", 
   StyleBox[" ", "TI"], 
   StyleBox["property", "TI"]}], "]"}]], "UsageInputs",
 TaggingRules->{},
 FontFamily->"Source Sans Pro",
 CellID->403014978,ExpressionUUID->"61012637-5fb8-4ed6-bcf9-94a9caeeafc2"],

Cell[TextData[{
 "gives",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "389d1bf4-0595-42db-863b-47dbbfc72df5"],
 "the",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "80746a81-0f38-439d-93cb-339c540be398"],
 "value",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4e32cb57-f48a-417f-9319-40f6a86b95d1"],
 "of",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "11fe3afc-855d-457e-baef-d80d7c640e91"],
 "the",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "79147880-d460-4cfb-a9e6-cd77895b3e8c"],
 "specified",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5b1b6f54-fcad-49ce-b895-2d3ba67e48d7"],
 Cell[BoxData[
  StyleBox["property", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "491a2950-9216-432d-8968-654f82da8164"],
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "861ba851-e921-43b3-9676-bed3c7e4f092"],
 "for",
 Cell[BoxData[
  StyleBox[" ", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6baec8cb-463f-4a3c-86c4-89dc7773733f"],
 "a ",
 ButtonBox["SIMBAD",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://simbad.u-strasbg.fr/simbad/"], None},
  ButtonNote->"http://simbad.u-strasbg.fr/simbad/"],
 " astronomical object specified by the given keywords."
}], "UsageDescription",
 TaggingRules->{},
 CellID->557743573,ExpressionUUID->"3bc87d81-e627-40d7-858a-2848412d4626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{"\"\<\!\(\*StyleBox[\"keywords\", \"TI\"]\)\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      StyleBox["property", "TI"], 
      StyleBox["1", "TR"]], ",", 
     SubscriptBox[
      StyleBox["property", "TI"], 
      StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}]}], 
  "]"}]], "UsageInputs",
 TaggingRules->{},
 FontFamily->"Source Sans Pro",
 CellID->793812532,ExpressionUUID->"e4bd3e36-7567-4d26-bf42-2efe0b61f893"],

Cell[TextData[{
 "gives the list of values of the ",
 Cell[BoxData[
  StyleBox[
   SubscriptBox["property", "i"], "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "60734503-4935-44ef-9203-8ecd39e6e526"],
 " for an astronomical object specified by keywords."
}], "UsageDescription",
 TaggingRules->{},
 CellID->289377844,ExpressionUUID->"9364e4e6-0208-494b-96df-687459675e40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   StyleBox["list", "TI"], ",", 
   StyleBox["property", "TI"]}], "]"}]], "UsageInputs",
 TaggingRules->{},
 FontFamily->"Source Sans Pro",
 CellID->541773043,ExpressionUUID->"bb793fcf-bc84-486a-a7ef-61b4b03d33aa"],

Cell[TextData[{
 "gives the values of the ",
 Cell[BoxData[
  StyleBox["property", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "abed600b-e851-436f-9704-3757ac545b55"],
 " for the astronomical objects specified by the ",
 Cell[BoxData[
  StyleBox["list", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ea61261c-6202-43f5-bca7-45feb8607f91"],
 " of keywords."
}], "UsageDescription",
 TaggingRules->{},
 CellID->680724859,ExpressionUUID->"98d8defa-2077-4e1f-8338-3305c428d1d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   StyleBox["list", "TI"], ",", 
   StyleBox["properties", "TI"]}], "]"}]], "UsageInputs",
 TaggingRules->{},
 FontFamily->"Source Sans Pro",
 CellID->139853468,ExpressionUUID->"6aeef816-37e9-4f71-b0e2-65680ffac0b4"],

Cell[TextData[{
 "gives the values of the ",
 Cell[BoxData[
  StyleBox["properties", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cb036453-7a2e-4e76-a77e-0ec1db8e9ac7"],
 " for the astronomical objects specified by the ",
 Cell[BoxData[
  StyleBox["list", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "96a88b10-b434-4576-93ac-45ee348351aa"],
 " of keywords."
}], "UsageDescription",
 TaggingRules->{},
 CellID->338850868,ExpressionUUID->"a8246af2-f9ab-48f8-80bb-f4a62fc91ebb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   StyleBox["assoc", "TI"], ",", 
   StyleBox["properties", "TI"]}], "]"}]], "UsageInputs",
 TaggingRules->{},
 FontFamily->"Source Sans Pro",
 CellID->506612031,ExpressionUUID->"54e9f888-cc44-40f6-832b-3ada4cab7018"],

Cell[TextData[{
 "gives the values of the ",
 Cell[BoxData[
  StyleBox["properties", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "dc5cbcf8-9355-48f2-8d77-95d6a56e9009"],
 " for the astronomical objects specified by the association."
}], "UsageDescription",
 TaggingRules->{},
 CellID->257196836,ExpressionUUID->"a7c8abc6-9512-4ae8-aa14-2cb1e21888d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2786aefc-705d-4815-9cd9-cfd7d4906954"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->892718828,ExpressionUUID->"9975791d-9fc6-43aa-99e8-3470b798775b"],

Cell[TextData[{
 Cell[BoxData["SIMBADData"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5ef034da-35ad-431c-b31e-d4df0065da56"],
 " retrieves data from ",
 ButtonBox["SIMBAD",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://simbad.u-strasbg.fr/simbad/"], None},
  ButtonNote->"http://simbad.u-strasbg.fr/simbad/"],
 " (Set of Identifications, Measurements and Bibliography for Astronomical \
Data) using Table Access Protocol (",
 ButtonBox["TAP",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.ivoa.net/documents/TAP/20190927/index.html"], None},
  ButtonNote->"https://www.ivoa.net/documents/TAP/20190927/index.html"],
 ")."
}], "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->225664197,ExpressionUUID->"57c08ad1-824d-4b59-be61-338e007b5172"],

Cell[TextData[{
 ButtonBox["Entity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Entity"],
 " can be used to specify an astronomical object as well."
}], "Notes",
 TaggingRules->{},
 CellID->839626257,ExpressionUUID->"4bb43979-e6d4-472b-9065-99b850e45033"],

Cell[TextData[{
 Cell[BoxData["SIMBADData"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5fa7e847-f76a-4779-8771-1b1f99908b94"],
 "[",
 Cell[BoxData["\"\<Properties\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e9068dee-b4a0-475b-8887-33fe82a59744"],
 "] shows all the available properties."
}], "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->498220170,ExpressionUUID->"cf328602-1f4f-4fb9-b1b6-1d961c509e32"],

Cell[TextData[{
 Cell[BoxData["SIMBADData"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8f292cea-67a1-4b72-82d9-acca3eb7d110"],
 " takes the following option:"
}], "Notes",
 TaggingRules->{},
 CellID->95989191,ExpressionUUID->"29cb7aa4-3612-42bd-8f5f-f05926d7796e"],

Cell[BoxData[GridBox[{
   {"\"\<DataSource\>\"", "\"\<US\>\"", Cell[TextData[{
     "a ",
     ButtonBox["String",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/String"],
     " representing the source of the data. Only \"US\" and \"France\" are \
supported"
    }], "TableText",ExpressionUUID->"ac0874e8-3fa1-499f-a48e-e39b0fdb5f43"]}
  }]], "TableNotes",
 TaggingRules->{},
 CellID->848795082,ExpressionUUID->"103cc2fc-4cb3-4c0b-8625-d4451d82f3ba"],

Cell[TextData[{
 ButtonBox["ExternalIdentifier",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ExternalIdentifier"],
 " is used to uniquely represent an astronomical object in the ",
 ButtonBox["SIMBAD",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://simbad.u-strasbg.fr/simbad/"], None},
  ButtonNote->"http://simbad.u-strasbg.fr/simbad/"],
 " database."
}], "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->552624789,ExpressionUUID->"6424bae4-b606-4769-9614-7791fd388831"],

Cell[TextData[{
 "To get all the astronomical objects inside a certain sky region, use an ",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " as a first argument with \"AstroCenter\", \"AstroRange\" and ",
 ButtonBox["MaxItems",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MaxItems"],
 " as keys to specify the region and number of objects to retrieve."
}], "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->867083213,ExpressionUUID->"fdf5867d-a8db-4e4e-b6d9-60c6f6ea81bc"],

Cell[TextData[{
 "\"AstroCenter\" takes a center of a circle of the form ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox["ra", "TI"], ",", 
     StyleBox["dec", "TI"]}], "}"}], "."}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "722166aa-77de-4ac4-8ca0-03e0bea52539"]
}], "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->38153223,ExpressionUUID->"fad9f24f-d7aa-47db-a14a-f5a4eaa2fabd"],

Cell["\"AstroRange\" takes the following settings:", "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->248084303,ExpressionUUID->"201a665e-262e-4ab9-8eaf-72b66670c04e"],

Cell[BoxData[GridBox[{
   {Cell[TextData[Cell[BoxData[Cell[TextData[Cell[BoxData[
      StyleBox["r", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "3fc8e478-885a-46d2-acc3-d5e78fba76cc"]], "TableText",ExpressionUUID->
      "04cb4df9-3be1-486d-8edc-622853c8ecfc"]],ExpressionUUID->
     "54d868c3-122a-4de8-b9dc-0713dffe9d49"]], "TableText",ExpressionUUID->
     "4b50f014-beaa-4f8c-a7e4-7a617ac111a6"], Cell[
    "explicit radius of a circle", "TableText",ExpressionUUID->
     "483b8b4b-e256-4146-a712-aaba30c62e60"]},
   {Cell[TextData[Cell[BoxData[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          SubscriptBox["ra", "1"], "TI"], ",", 
         StyleBox[
          SubscriptBox["ra", "2"], "TI"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          SubscriptBox["dec", "1"], "TI"], ",", 
         StyleBox[
          SubscriptBox["dec", "2"], "TI"]}], "}"}]}], "}"}]],
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "16cf9ed7-6b75-48d7-9f6b-a18d6f6463bf"]], "TableText",ExpressionUUID->
     "6a25ffda-ea55-4675-8d31-42654fc348f9"], Cell[
    "explicit limit for right ascension and declination", "TableText",
     ExpressionUUID->"de267905-bae9-4b2f-9312-edd87863c508"]},
   {Cell[TextData[Cell[BoxData[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          SubscriptBox["ra", "1"], "TI"], ",", 
         StyleBox[
          SubscriptBox["dec", "1"], "TI"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          SubscriptBox["ra", "2"], "TI"], ",", 
         StyleBox[
          SubscriptBox["dec", "2"], "TI"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          SubscriptBox["ra", "3"], "TI"], ",", 
         StyleBox[
          SubscriptBox["dec", "3"], "TI"]}], "}"}], ",", "\[Ellipsis]"}], 
      "}"}]],
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "64bed193-b154-42b2-a56d-f1a14935a4ea"]], "TableText",ExpressionUUID->
     "04445a05-fe5f-4522-980a-054467f3c1b3"], Cell[
    "a polygon constructed with the specified vertices", "TableText",
     ExpressionUUID->"db5fb155-fdf4-4ee9-bc7b-652c879ab618"]}
  }]], "TableNotes",
 TaggingRules->{},
 CellID->51655653,ExpressionUUID->"638063c4-ebd1-479d-af89-9b2c2d2613eb"],

Cell[TextData[{
 "All the values that specified a sky region are assumed to be in degrees, \
but they can be specified as a ",
 ButtonBox["Quantity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Quantity"],
 " as well."
}], "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->589975426,ExpressionUUID->"1da57378-8e3c-42ec-a49e-e512b652df47"],

Cell["\<\
The maximum number of astronomical objects that can be obtained at a time is \
50 000.\
\>", "Notes",
 TaggingRules->{},
 CellTags->{"TemplateCell", "TabNext"},
 CellID->659952295,ExpressionUUID->"86a72e5e-dabf-4d37-8d60-926d74cf379a"],

Cell[TextData[{
 "The following modifiers can be used in ",
 Cell[BoxData["SIMBADData"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7c2cf7d9-fa13-4573-b1c1-c4ff6210bcc0"],
 "[",
 Cell[BoxData[
  RowBox[{"\"\<\!\(\*StyleBox[\"keywords\", \"TI\"]\)\>\"", ",", 
   StyleBox["property", "TI"], ",", 
   "\"\<\!\(\*StyleBox[\"modifier\", \"TI\"]\)\>\""}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "02627eab-a86f-45c9-ac02-cbd3e01c9703"],
 "]:"
}], "Notes",
 TaggingRules->{},
 CellID->734293762,ExpressionUUID->"dc4c9df0-a600-4719-903c-b4fd3aacdeef"],

Cell[BoxData[GridBox[{
   {Cell[TextData[Cell[BoxData[
    Cell[TextData[Cell[BoxData[
     "\"\<ExternalIdentifierAssociation\>\""], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fe9c34e1-f3c0-4bad-9ddc-d64c5e560cf2"]], "TableText",ExpressionUUID->
      "80cde63f-e521-421b-b506-46cb70a0ab6c"]],ExpressionUUID->
     "c233a930-7eea-4105-bc99-cf4bae1d7a36"]], "TableText",ExpressionUUID->
     "3bf913ca-ccf9-4fca-b4bd-4f8a789a04d4"], Cell["\<\
an association of SIMBAD externalIdentifiers and their property values\
\>", "TableText",ExpressionUUID->"93670fc3-9bda-4169-9efc-c434403512ae"]},
   {Cell["\"Association\"", "TableText",ExpressionUUID->
     "f239e0c5-459c-4847-8d2d-6dd1bae921d7"], Cell["\<\
a nested association with externalIdentifiers keys on the first level and \
property keys on the second level\
\>", "TableText",ExpressionUUID->"eea89095-99f5-4d24-9a56-e59d3af58878"]},
   {Cell["\"Dataset\"", "TableText",ExpressionUUID->
     "097538a6-d946-4b34-ae1c-07478972d822"], Cell["\<\
a dataset containing the same structure of the \"Association\" modifier\
\>", "TableText",ExpressionUUID->"b99fe447-ab56-42f8-ae6b-de46fab8ae05"]}
  }]], "TableNotes",
 TaggingRules->{},
 CellID->913361609,ExpressionUUID->"20166820-d837-492b-94d2-714521ea6e0e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.286275], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.286275], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.286275], FontSize -> 14,
                  StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.286275], FontSize -> 14,
                  StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
      Deletable -> True, CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "737a97c5-e9a7-4843-9d06-d76fceb26fe9"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->677271657,ExpressionUUID->"e1c74c68-12b2-45dc-88c2-536673a6270b"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8348321361092234`*^9, 3.8348321399883575`*^9}},
 CellLabel->"In[148]:=",
 CellID->904125756,ExpressionUUID->"a7734da7-e04a-45ae-9658-eefa9a59d731"],

Cell["Retrieve the SIMBAD main identifier of a star:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8348322400968056`*^9, 3.8348322961718464`*^9}, {
  3.8348323572546616`*^9, 3.834832357844746*^9}, {3.834834312263857*^9, 
  3.8348343136679845`*^9}},
 CellID->3113111,ExpressionUUID->"6e948081-035f-4f44-a5ca-04ce0d754483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   TemplateBox[{"\"HIP 5054\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Star\"", ",", "\"HIP5054\""}], "]"}], 
     "\"Entity[\\\"Star\\\", \\\"HIP5054\\\"]\"", "\"star\""},
    "Entity"], ",", "\"\<MainIdentifier\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8399645313968506`*^9, 3.8399645849125686`*^9}, {
  3.8399646247514334`*^9, 3.8399646833111615`*^9}, {3.8399648927730827`*^9, 
  3.839964923882118*^9}},
 CellLabel->"In[1]:=",
 CellID->2128253,ExpressionUUID->"bab688ae-0fa3-4a49-806a-a3260ec82ba8"],

Cell[BoxData["\<\"HD 6434\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.839964559822426*^9, 3.83996458551088*^9}, {
   3.8399646255815344`*^9, 3.839964684012194*^9}, 3.839964894584443*^9, 
   3.8399649250623207`*^9, 3.840029734114357*^9, 3.8400365183673515`*^9, 
   3.840048350030177*^9, 3.8400491668003244`*^9},
 CellLabel->"Out[1]=",
 CellID->52083034,ExpressionUUID->"9601b55b-ca98-4dab-affe-9992fecf6758"]
}, Open  ]],

Cell["Get the position with uncertainty of such star:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834832419198799*^9, 3.8348324291302986`*^9}, {
  3.8348325076119347`*^9, 3.8348325115435925`*^9}},
 CellID->295549938,ExpressionUUID->"aae8d3cb-9387-466f-b690-e3d20a8052a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   TemplateBox[{"\"HIP 5054\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Star\"", ",", "\"HIP5054\""}], "]"}], 
     "\"Entity[\\\"Star\\\", \\\"HIP5054\\\"]\"", "\"star\""},
    "Entity"], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<RightAscensionWithUncertainty\>\"", ",", 
     "\"\<DeclinationWithUncertainty\>\""}], "}"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834832437282241*^9, 3.834832464330366*^9}, 
   3.835791610117*^9},
 CellLabel->"In[2]:=",
 CellID->494973198,ExpressionUUID->"1fdb5367-f362-4930-ae26-11938867a742"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "4", 
     RowBox[{"(", 
       InterpretationBox[
        TemplateBox[{"40.15037", "4", "4"}, "AroundSeq", SyntaxForm -> 
         PlusMinus], 
        Around[40.15037433420043, 4.1933333333333336`*^-6]], ")"}], 
     SuperscriptBox["\[Null]", "\"h\""], 
     SuperscriptBox["\[Null]", "\"m\""], 
     SuperscriptBox["\[Null]", "\"s\""], 
     "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
     RowBox[{"{", 
       RowBox[{
        "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", ",", 
         "\"SecondsOfRightAscension\""}], "}"}]},
    "QuantityMixedUnit3"], ",", 
   TemplateBox[{
     RowBox[{"-", "39"}], 
     RowBox[{"-", "29"}], 
     RowBox[{"(", 
       InterpretationBox[
        TemplateBox[{"-17.585568", "0.000034"}, "Around", SyntaxForm -> 
         PlusMinus], 
        Around[-17.58556845198939, 0.00003419999999999999]], ")"}], 
     RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
     RowBox[{"\[ThinSpace]", "\"'\""}], 
     RowBox[{"\[ThinSpace]", "\"\\\"\""}], "degrees,arc minutes,arc seconds", 
     RowBox[{"{", 
       RowBox[{
        "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", "\"ArcSeconds\""}], 
       "}"}]},
    "QuantityMixedUnit3"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8348324659252214`*^9, 3.834839449271305*^9, 3.8348474954619107`*^9, 
   3.835098993464044*^9, 3.8353805124787874`*^9, 3.835790652081829*^9, 
   3.8357929740581136`*^9, {3.8357931681694827`*^9, 3.83579318796172*^9}, 
   3.8357938523663287`*^9, 3.835794271427844*^9, 3.835794921744322*^9, 
   3.8358320907843227`*^9, 3.835863763375783*^9, 3.8358640683556986`*^9, 
   3.8358667947073565`*^9, 3.8358672917904096`*^9, 3.835868065503679*^9, 
   3.8358688207414083`*^9, 3.8358696818974442`*^9, 3.835870665016481*^9, 
   3.836423921609844*^9, 3.836424517233286*^9, {3.836426294512482*^9, 
   3.8364263029240775`*^9}, 3.836426518517927*^9, 3.839612385125119*^9, 
   3.8396131719905815`*^9, 3.839678791436045*^9, 3.83967919753339*^9, 
   3.8397882321727705`*^9, 3.839932593495985*^9, 3.83995819259114*^9, 
   3.839958497950749*^9, 3.839964369952173*^9, 3.8400297346521654`*^9, 
   3.840036518845072*^9, 3.8400389514378767`*^9, 3.8400390070006943`*^9, 
   3.840048351398717*^9, 3.840049167946498*^9},
 CellLabel->"Out[2]=",
 CellID->15097784,ExpressionUUID->"73ea6837-ec58-4b19-97fe-89d65ca2c451"]
}, Open  ]],

Cell["Get the radial velocity of a list of stars:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834832666111184*^9, 3.834832680757131*^9}, {
  3.834832767636326*^9, 3.8348327708666677`*^9}, {3.8348331776179504`*^9, 
  3.8348331831473775`*^9}},
 CellID->803544052,ExpressionUUID->"f440524c-aa57-4e84-a493-a94661e72a1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<HD 3070\>\"", ",", "\"\<HD 107596\>\"", ",", "\"\<HD 142532\>\"", 
     ",", 
     TemplateBox[{"\"HIP 5054\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Star\"", ",", "\"HIP5054\""}], "]"}], 
       "\"Entity[\\\"Star\\\", \\\"HIP5054\\\"]\"", "\"star\""},
      "Entity"]}], "}"}], ",", "\"\<RadialVelocity\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834832702508766*^9, 3.834832730447296*^9}, {
   3.834832777558696*^9, 3.83483284091613*^9}, 3.8348328888177767`*^9, {
   3.834833134584524*^9, 3.8348331568379593`*^9}, 3.8348475738533163`*^9, 
   3.835791678731481*^9, {3.8357938080368137`*^9, 3.8357938095126247`*^9}, {
   3.8399645259854584`*^9, 3.839964528348974*^9}},
 CellLabel->"In[3]:=",
 CellID->402274049,ExpressionUUID->"bf4e68bf-143d-45cb-9a90-9b410f52c823"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1.27`", 
     RowBox[{
      "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "kilometers per second", 
     FractionBox["\"Kilometers\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"13.04`", 
     RowBox[{
      "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "kilometers per second", 
     FractionBox["\"Kilometers\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{
     RowBox[{"-", "34.64`"}], 
     RowBox[{
      "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "kilometers per second", 
     FractionBox["\"Kilometers\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"22.92`", 
     RowBox[{
      "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "kilometers per second", 
     FractionBox["\"Kilometers\"", "\"Seconds\""]},
    "Quantity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8357938529993267`*^9, 3.8357942722770042`*^9, 3.8357949222102957`*^9, 
   3.835832091592338*^9, 3.835864072814643*^9, 3.83586679490962*^9, 
   3.8358672919724474`*^9, 3.835868825933256*^9, 3.8358706656247454`*^9, 
   3.8364239223309336`*^9, 3.8364262951993847`*^9, 3.836426519061613*^9, 
   3.839612385703583*^9, 3.8396131728105693`*^9, 3.8396787923071938`*^9, 
   3.8396791984127836`*^9, 3.839932595085309*^9, 3.8399581931034775`*^9, {
   3.8399584894506655`*^9, 3.8399584984661636`*^9}, 3.8399643827602477`*^9, 
   3.8400297352612095`*^9, 3.840036519367305*^9, 3.8400483525707245`*^9, 
   3.840049168948996*^9},
 CellLabel->"Out[3]=",
 CellID->371093969,ExpressionUUID->"6591e9f8-2035-492c-b16e-68390d5110b9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8348332025483384`*^9, 3.83483320403556*^9}},
 CellLabel->"In[4]:=",
 CellID->204653245,ExpressionUUID->"1c4e733b-f90e-45db-b000-13159d55c97f"],

Cell["Look up for all properties of the galaxy M31:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8348361899377747`*^9, 3.83483620454045*^9}, {
   3.8348362878750887`*^9, 3.834836289532251*^9}, 3.8348512062783036`*^9},
 CellID->119808796,ExpressionUUID->"627828f0-53e2-4610-a25e-2969681f363c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{"\"\<M31\>\"", ",", "All", ",", "\"\<Dataset\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8348400501910877`*^9, 3.834840060378389*^9}, {
   3.8348446045731115`*^9, 3.8348446082965155`*^9}, {3.8348468428427153`*^9, 
   3.8348468447809763`*^9}, {3.8348472963103666`*^9, 3.8348472977701635`*^9}, 
   3.835791612299135*^9},
 CellLabel->"In[140]:=",
 CellID->289921112,ExpressionUUID->"d02574df-7e64-4273-be51-0b1692949ebc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "M31" -> Association[
        "Identifiers" -> {
          "2MASX J00424433+4116074", "[VV98c] J004245.1+411622", "DA 21", 
           "UZC J004244.3+411608", "BD+40 148", "IRC +40013", "K79 1C", 
           "LEDA 2557", "[VV2010] J004244.3+411610", "4FGL J0043.2+4114", 
           "3FGL J0042.5+4117", "IRAS 00400+4059", "MCG+07-02-016", 
           "PPM 43228", "XSS J00425+4102", "2MAXI J0043+412", "UGC 454", 
           "IRAS F00400+4059", "M 31", "HD 3969", "Z 535-17", 
           "NAME Andromeda", "GIN 801", "[VV2006] J004244.3+411610", 
           "NGC 224", "PLX 124.00", "RAFGL 104", "NAME Andromeda Galaxy", 
           "2FGL J0042.5+4114", "[DGW65] 4", "AG+40 60", 
           "[VV2000c] J004244.3+411610", "2C 56", "NAME And Nebula", 
           "PLX 124", "Z 0040.0+4100", "[VV2003c] J004244.3+411610", 
           "NAME Andromeda Nebula", "[M98c] 004000.1+405943"}, 
         "MainIdentifier" -> "M 31", 
         "ObjectTypes" -> {
          "Galaxy", "Quasar", "Galaxy in Cluster of Galaxies", 
           "Active Galaxy Nucleus", "X-ray source", "Infra-Red source", 
           "LINER-type Active Galaxy Nucleus", "Radio-source", 
           "Galaxy in Group of Galaxies", "gamma-ray source", "Star"}, 
         "MainObjectType" -> "Galaxy", "RightAscensionWithUncertainty" -> 
         Missing["NotAvailable"], "RightAscension" -> Quantity[
           MixedMagnitude[{0, 42, 44.32999999999993}], 
           
           MixedUnit[{
            "HoursOfRightAscension", "MinutesOfRightAscension", 
             "SecondsOfRightAscension"}]], "DeclinationWithUncertainty" -> 
         Missing["NotAvailable"], "Declination" -> Quantity[
           MixedMagnitude[{41, 16, 7.500000000015347}], 
           MixedUnit[{"AngularDegrees", "ArcMinutes", "ArcSeconds"}]], 
         "PositionErrorEllipse" -> Missing["NotAvailable"], 
         "PositionWavelengthClass" -> "Infrared", "PositionQuality" -> "C", 
         "PositionBibcode" -> "2006AJ....131.1163S", 
         "ProperMotionRightAscensionWithUncertainty" -> 
         Missing["NotAvailable"], "ProperMotionRightAscension" -> 
         Missing["NotAvailable"], "ProperMotionDeclinationWithUncertainty" -> 
         Missing["NotAvailable"], "ProperMotionDeclination" -> 
         Missing["NotAvailable"], "ProperMotionErrorEllipse" -> 
         Missing["NotAvailable"], "ProperMotionQuality" -> 
         Missing["NotAvailable"], "ProperMotionBibcode" -> 
         Missing["NotAvailable"], "ParallaxWithUncertainty" -> Quantity[
           Around[6., 14.1], "MilliarcSeconds"], "Parallax" -> 
         Quantity[6., "MilliarcSeconds"], "ParallaxQuality" -> "E", 
         "ParallaxBibcode" -> "1995GCTP..C......0V", 
         "RedshiftWithUncertainty" -> Missing["NotAvailable"], 
         "Redshift" -> -0.0010001920937326991`, "RedshiftQuality" -> 
         Missing["NotAvailable"], "RedshiftBibcode" -> 
         Missing["NotAvailable"], "RadialVelocityWithUncertainty" -> Quantity[
           Around[-300., 4.], "Kilometers"/"Seconds"], "RadialVelocity" -> 
         Quantity[-300., "Kilometers"/"Seconds"], "RadialVelocityQuality" -> 
         "C", "RadialVelocityBibcode" -> "2012AJ....144....4M", 
         "SpectralClass" -> Missing["NotAvailable"], "SpectralClassQuality" -> 
         Missing["NotAvailable"], "SpectralClassBibcode" -> 
         Missing["NotAvailable"], "MorphologicalClass" -> "SA(s)b", 
         "MorphologicalClassQuality" -> "D", "MorphologicalClassBibcode" -> 
         "2013AJ....146...67B", "GalaxyMajorAxis" -> 
         Quantity[199.53, "ArcMinutes"], "GalaxyMinorAxis" -> 
         Quantity[70.79, "ArcMinutes"], "GalaxyPositionAngle" -> 
         Quantity[35, "AngularDegrees"], "GalaxySizeQuality" -> "D", 
         "GalaxySizeBibcode" -> "2003A&A...412...45P", 
         "VMagnitudeWithUncertainty" -> Around[3.44, 0.03], "VMagnitude" -> 
         3.44, "VMagnitudeQuality" -> "D", "VMagnitudeBibcode" -> 
         "2007ApJS..173..185G", "UMagnitudeWithUncertainty" -> 
         Around[4.86, 0.03], "UMagnitude" -> 4.86, "UMagnitudeQuality" -> "D",
          "UMagnitudeBibcode" -> "2007ApJS..173..185G", 
         "BMagnitudeWithUncertainty" -> Around[4.36, 0.02], "BMagnitude" -> 
         4.36, "BMagnitudeQuality" -> "D", "BMagnitudeBibcode" -> 
         "2007ApJS..173..185G", "RMagnitudeWithUncertainty" -> 
         Missing["NotAvailable"], "RMagnitude" -> Missing["NotAvailable"], 
         "RMagnitudeQuality" -> Missing["NotAvailable"], "RMagnitudeBibcode" -> 
         Missing["NotAvailable"], "IMagnitudeWithUncertainty" -> 
         Missing["NotAvailable"], "IMagnitude" -> Missing["NotAvailable"], 
         "IMagnitudeQuality" -> Missing["NotAvailable"], "IMagnitudeBibcode" -> 
         Missing["NotAvailable"], "JMagnitudeWithUncertainty" -> 
         Around[2.094, 0.016], "JMagnitude" -> 2.094, "JMagnitudeQuality" -> 
         "C", "JMagnitudeBibcode" -> "2006AJ....131.1163S", 
         "HMagnitudeWithUncertainty" -> Around[1.283, 0.017], "HMagnitude" -> 
         1.283, "HMagnitudeQuality" -> "C", "HMagnitudeBibcode" -> 
         "2006AJ....131.1163S", "KMagnitudeWithUncertainty" -> 
         Around[0.984, 0.017], "KMagnitude" -> 0.984, "KMagnitudeQuality" -> 
         "C", "KMagnitudeBibcode" -> "2006AJ....131.1163S", 
         "SDSSUMagnitudeWithUncertainty" -> Missing["NotAvailable"], 
         "SDSSUMagnitude" -> Missing["NotAvailable"], "SDSSUMagnitudeQuality" -> 
         Missing["NotAvailable"], "SDSSUMagnitudeBibcode" -> 
         Missing["NotAvailable"], "SDSSGMagnitudeWithUncertainty" -> 
         Missing["NotAvailable"], "SDSSGMagnitude" -> Missing["NotAvailable"],
          "SDSSGMagnitudeQuality" -> Missing["NotAvailable"], 
         "SDSSGMagnitudeBibcode" -> Missing["NotAvailable"], 
         "SDSSRMagnitudeWithUncertainty" -> Missing["NotAvailable"], 
         "SDSSRMagnitude" -> Missing["NotAvailable"], "SDSSRMagnitudeQuality" -> 
         Missing["NotAvailable"], "SDSSRMagnitudeBibcode" -> 
         Missing["NotAvailable"], "SDSSIMagnitudeWithUncertainty" -> 
         Missing["NotAvailable"], "SDSSIMagnitude" -> Missing["NotAvailable"],
          "SDSSIMagnitudeQuality" -> Missing["NotAvailable"], 
         "SDSSIMagnitudeBibcode" -> Missing["NotAvailable"], 
         "SDSSZMagnitudeWithUncertainty" -> Missing["NotAvailable"], 
         "SDSSZMagnitude" -> Missing["NotAvailable"], "SDSSZMagnitudeQuality" -> 
         Missing["NotAvailable"], "SDSSZMagnitudeBibcode" -> 
         Missing["NotAvailable"]]], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[33.6], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[425.6], 
            TypeSystem`PackageScope`UnknownShape[False]]], 20, 
          DirectedInfinity[1], {All}]]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, 94], 1], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[425.6], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 94], "Path" -> {
       Key["M31"]}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 94, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["M31"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 75, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSUMagnitudeWithUncertainty", 
                  Style[
                  "SDSSUMagnitudeWithUncertainty", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSUMagnitudeWithUncertainty"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitudeWithUncertainty"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitudeWithUncertainty"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSUMagnitude", 
                  Style[
                  "SDSSUMagnitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSUMagnitude"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitude"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSUMagnitudeQuality", 
                  Style[
                  "SDSSUMagnitudeQuality", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSUMagnitudeQuality"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitudeQuality"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitudeQuality"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSUMagnitudeBibcode", 
                  Style[
                  "SDSSUMagnitudeBibcode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSUMagnitudeBibcode"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitudeBibcode"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSUMagnitudeBibcode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSGMagnitudeWithUncertainty", 
                  Style[
                  "SDSSGMagnitudeWithUncertainty", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSGMagnitudeWithUncertainty"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitudeWithUncertainty"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitudeWithUncertainty"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSGMagnitude", 
                  Style[
                  "SDSSGMagnitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSGMagnitude"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitude"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSGMagnitudeQuality", 
                  Style[
                  "SDSSGMagnitudeQuality", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSGMagnitudeQuality"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitudeQuality"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitudeQuality"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSGMagnitudeBibcode", 
                  Style[
                  "SDSSGMagnitudeBibcode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSGMagnitudeBibcode"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitudeBibcode"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSGMagnitudeBibcode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSRMagnitudeWithUncertainty", 
                  Style[
                  "SDSSRMagnitudeWithUncertainty", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSRMagnitudeWithUncertainty"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitudeWithUncertainty"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitudeWithUncertainty"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSRMagnitude", 
                  Style[
                  "SDSSRMagnitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSRMagnitude"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitude"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSRMagnitudeQuality", 
                  Style[
                  "SDSSRMagnitudeQuality", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSRMagnitudeQuality"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitudeQuality"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitudeQuality"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSRMagnitudeBibcode", 
                  Style[
                  "SDSSRMagnitudeBibcode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSRMagnitudeBibcode"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitudeBibcode"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSRMagnitudeBibcode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSIMagnitudeWithUncertainty", 
                  Style[
                  "SDSSIMagnitudeWithUncertainty", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSIMagnitudeWithUncertainty"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitudeWithUncertainty"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitudeWithUncertainty"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSIMagnitude", 
                  Style[
                  "SDSSIMagnitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSIMagnitude"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitude"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSIMagnitudeQuality", 
                  Style[
                  "SDSSIMagnitudeQuality", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSIMagnitudeQuality"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitudeQuality"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitudeQuality"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSIMagnitudeBibcode", 
                  Style[
                  "SDSSIMagnitudeBibcode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSIMagnitudeBibcode"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitudeBibcode"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSIMagnitudeBibcode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSZMagnitudeWithUncertainty", 
                  Style[
                  "SDSSZMagnitudeWithUncertainty", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSZMagnitudeWithUncertainty"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitudeWithUncertainty"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitudeWithUncertainty"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSZMagnitude", 
                  Style[
                  "SDSSZMagnitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSZMagnitude"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitude"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSZMagnitudeQuality", 
                  Style[
                  "SDSSZMagnitudeQuality", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSZMagnitudeQuality"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitudeQuality"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitudeQuality"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SDSSZMagnitudeBibcode", 
                  Style[
                  "SDSSZMagnitudeBibcode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][{
                    Key["M31"], 
                    Key["SDSSZMagnitudeBibcode"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitudeBibcode"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][{
                 Key["M31"], 
                 Key["SDSSZMagnitudeBibcode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 94, 1], {1, 94 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 94, 1], {1, 94 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 75, "\[Dash]", 94, " of ", 
                    Style[94, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 75, "\[Dash]", 94, " of ", 
                    Style[94, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 94, 1], {1, 94 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 94, 1], {1, 94 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "cfdb04af-08ba-4bb9-a7f2-180de5269a0d", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "cfdb04af-08ba-4bb9-a7f2-180de5269a0d"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{526., {341.84743643933905`, 348.15256356066095`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{526., {341.84743643933905`, 348.15256356066095`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{"AttachedInlineCell" -> CellObject[1883809]},
 CellChangeTimes->{3.834840062335434*^9, 3.834844610948184*^9, 
  3.8348468481469216`*^9, 3.834847222255582*^9, 3.8350989952293963`*^9, 
  3.8353805134991436`*^9, 3.8357906533926525`*^9, 3.835792974728798*^9, 
  3.835793188926897*^9, 3.835793853599208*^9, 3.8357942727867393`*^9, 
  3.8357949226976614`*^9, 3.835832092126489*^9, 3.835864076892446*^9, 
  3.8358668166407633`*^9, 3.8358688289536376`*^9, 3.8358706661416626`*^9, 
  3.836423922960001*^9, 3.8364262956723843`*^9, 3.8364265196207747`*^9, 
  3.839612386327941*^9, 3.839613173418743*^9, 3.839678793142876*^9, 
  3.839679199722517*^9, 3.839932597877184*^9, 3.8399581940499735`*^9, 
  3.839958499212781*^9, 3.839958624554164*^9, 3.84002973604218*^9, 
  3.840036520129466*^9, 3.8400483538252993`*^9, 3.840048972917635*^9},
 CellLabel->"Out[140]=",
 CellID->516990456,ExpressionUUID->"a99ac447-3457-4e18-a682-97cc5eeff85f"]
}, Open  ]],

Cell["\<\
Request information about 5 astronomical objects inside a circular region of \
the sky with a radius of 5 arc-minutes, centered in the origin of the ICRF:\
\>", "Text",
 TaggingRules->{},
 CellID->234866660,ExpressionUUID->"74d23eee-452d-4679-8afa-68b7982a8259"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<AstroCenter\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"\"\<AstroRange\>\"", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", "\"\<ArcMinutes\>\""}], "]"}]}], ",", 
     RowBox[{"MaxItems", "\[Rule]", "5"}]}], "|>"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<RightAscension\>\"", ",", "\"\<Declination\>\"", ",", 
     "\"\<ObjectTypes\>\""}], "}"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834848030586028*^9, 3.834848068041037*^9}, {
   3.8348481176162567`*^9, 3.8348481716151433`*^9}, {3.8348483628598747`*^9, 
   3.8348483660663548`*^9}, 3.834848475937764*^9, 3.835791614486571*^9, 
   3.8358318477925787`*^9, 3.8358319713517556`*^9, {3.8400298463759966`*^9, 
   3.8400298479242287`*^9}, {3.840030349244993*^9, 3.840030386401209*^9}, 
   3.8400310697323*^9},
 CellLabel->"In[142]:=",
 CellID->131051677,ExpressionUUID->"dc1575c0-fe1d-42c2-918f-acd7d8acac32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"23", "59", "59.96687999999622`", 
       SuperscriptBox["\[Null]", "\"h\""], 
       SuperscriptBox["\[Null]", "\"m\""], 
       SuperscriptBox["\[Null]", "\"s\""], 
       "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
       RowBox[{"{", 
         RowBox[{
          "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", 
           ",", "\"SecondsOfRightAscension\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     TemplateBox[{"0", 
       RowBox[{"-", "1"}], 
       RowBox[{"-", "58.35000000000001`"}], 
       RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
       RowBox[{"\[ThinSpace]", "\"'\""}], 
       RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
       "degrees,arc minutes,arc seconds", 
       RowBox[{"{", 
         RowBox[{
          "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
           "\"ArcSeconds\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Possible Quasar\"\>", ",", "\<\"Quasar\"\>"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"0", "0", "11.962082099736003`", 
       SuperscriptBox["\[Null]", "\"h\""], 
       SuperscriptBox["\[Null]", "\"m\""], 
       SuperscriptBox["\[Null]", "\"s\""], 
       "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
       RowBox[{"{", 
         RowBox[{
          "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", 
           ",", "\"SecondsOfRightAscension\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     TemplateBox[{"0", "2", "25.332088246079998`", 
       RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
       RowBox[{"\[ThinSpace]", "\"'\""}], 
       RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
       "degrees,arc minutes,arc seconds", 
       RowBox[{"{", 
         RowBox[{
          "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
           "\"ArcSeconds\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Quasar\"\>", ",", "\<\"X-ray source\"\>", 
       ",", "\<\"Possible Quasar\"\>", ",", "\<\"Infra-Red source\"\>", 
       ",", "\<\"Active Galaxy Nucleus\"\>", ",", "\<\"Star\"\>"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"0", "0", "4.189999999999999`", 
       SuperscriptBox["\[Null]", "\"h\""], 
       SuperscriptBox["\[Null]", "\"m\""], 
       SuperscriptBox["\[Null]", "\"s\""], 
       "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
       RowBox[{"{", 
         RowBox[{
          "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", 
           ",", "\"SecondsOfRightAscension\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     TemplateBox[{"0", "1", "22.66000000000002`", 
       RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
       RowBox[{"\[ThinSpace]", "\"'\""}], 
       RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
       "degrees,arc minutes,arc seconds", 
       RowBox[{"{", 
         RowBox[{
          "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
           "\"ArcSeconds\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"SuperNova\"\>", ",", "\<\"SuperNova Candidate\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"23", "59", "56.964959999993994`", 
       SuperscriptBox["\[Null]", "\"h\""], 
       SuperscriptBox["\[Null]", "\"m\""], 
       SuperscriptBox["\[Null]", "\"s\""], 
       "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
       RowBox[{"{", 
         RowBox[{
          "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", 
           ",", "\"SecondsOfRightAscension\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     TemplateBox[{"0", "2", "45.7728`", 
       RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
       RowBox[{"\[ThinSpace]", "\"'\""}], 
       RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
       "degrees,arc minutes,arc seconds", 
       RowBox[{"{", 
         RowBox[{
          "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
           "\"ArcSeconds\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     RowBox[{"{", "\<\"Quasar\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"23", "59", "59.76539538900994`", 
       SuperscriptBox["\[Null]", "\"h\""], 
       SuperscriptBox["\[Null]", "\"m\""], 
       SuperscriptBox["\[Null]", "\"s\""], 
       "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
       RowBox[{"{", 
         RowBox[{
          "\"HoursOfRightAscension\"", ",", "\"MinutesOfRightAscension\"", 
           ",", "\"SecondsOfRightAscension\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     TemplateBox[{"0", 
       RowBox[{"-", "3"}], 
       RowBox[{"-", "55.26358335719996`"}], 
       RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
       RowBox[{"\[ThinSpace]", "\"'\""}], 
       RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
       "degrees,arc minutes,arc seconds", 
       RowBox[{"{", 
         RowBox[{
          "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
           "\"ArcSeconds\""}], "}"}]},
      "QuantityMixedUnit3"], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Star\"\>", ",", "\<\"Infra-Red source\"\>"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8348480533854117`*^9, 3.834848070342516*^9}, {
   3.834848119161322*^9, 3.83484817322054*^9}, 3.8348483670906906`*^9, 
   3.8348484776402225`*^9, 3.835098995612315*^9, 3.8353805139929204`*^9, 
   3.8357906539665794`*^9, 3.8357929754433746`*^9, 3.835793189593722*^9, 
   3.835793854267745*^9, 3.835794273639738*^9, 3.83579492325364*^9, 
   3.8358320929846096`*^9, 3.835864085928345*^9, 3.8358668172166953`*^9, 
   3.8358688426622148`*^9, 3.835870666772487*^9, 3.836423923734185*^9, 
   3.8364262963553443`*^9, 3.836426520154747*^9, 3.8396123873321257`*^9, 
   3.839613174120745*^9, 3.839678799735242*^9, 3.8396788729546957`*^9, 
   3.8396792003987813`*^9, 3.8399326013566437`*^9, 3.8399581946790495`*^9, 
   3.8399584997440915`*^9, 3.8399586341433816`*^9, 3.840029736320318*^9, {
   3.840029842471018*^9, 3.840029848639826*^9}, 3.8400302965634947`*^9, {
   3.840030355351553*^9, 3.840030387058813*^9}, 3.8400307586269836`*^9, {
   3.8400310537929316`*^9, 3.8400310705934353`*^9}, 3.840035364337782*^9, 
   3.8400357178736305`*^9, 3.840035748327186*^9, 3.840035822652068*^9, 
   3.8400359342947764`*^9, 3.8400363474135313`*^9, 3.840036520408681*^9, 
   3.8400483542603817`*^9, 3.840049075680242*^9},
 CellLabel->"Out[142]=",
 CellID->63407937,ExpressionUUID->"e3138d22-2a09-414b-a4a1-e1c6b3c5451f"]
}, Open  ]],

Cell["\<\
Look up 5 astronomical objects inside a rectangular sky region:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8348505492066216`*^9, 3.8348505610467677`*^9}, {
  3.8348506014762874`*^9, 3.8348506306913004`*^9}, {3.8348506960001116`*^9, 
  3.834850696535978*^9}, {3.834850849131511*^9, 3.8348508494233894`*^9}},
 CellID->254703675,ExpressionUUID->"26722ee7-bb8d-46ad-97b2-04650419ed51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<AstroRange\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Quantity", "[", 
           RowBox[{"40", ",", "\"\<MinutesOfRightAscension\>\""}], "]"}], ",", 
          RowBox[{"Quantity", "[", 
           RowBox[{"50", ",", "\"\<MinutesOfRightAscension\>\""}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"MaxItems", "\[Rule]", "5"}]}], "|>"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<RightAscension\>\"", ",", "\"\<Declination\>\"", ",", 
     "\"\<ObjectTypes\>\""}], "}"}], ",", 
   "\"\<ExternalIdentifierAssociation\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8233525683784943`*^9, 3.823352684175029*^9}, {
   3.824388318640478*^9, 3.824388342558516*^9}, {3.824466889221838*^9, 
   3.824466894919857*^9}, {3.8244896182475443`*^9, 3.8244896548949413`*^9}, {
   3.824504192653933*^9, 3.824504193225493*^9}, {3.834848671793908*^9, 
   3.834848672986137*^9}, {3.834850716199694*^9, 3.834850728825648*^9}, {
   3.8348508711498137`*^9, 3.834850885318206*^9}, 3.8357916162887273`*^9, 
   3.835831974359934*^9, {3.840035795094382*^9, 3.840035808182099*^9}},
 CellLabel->"In[143]:=",
 CellID->481746220,ExpressionUUID->"760d58b1-2676-4901-9982-631829ff2387"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"LEDA 1117487\""}], "]"}], 
      "\"SIMBAD\"", "\"LEDA 1117487\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=LEDA 1117487"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "49", "36.60000000000039`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{
        RowBox[{"-", "1"}], 
        RowBox[{"-", "29"}], 
        RowBox[{"-", "17.999999999999616`"}], 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Galaxy\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"LEDA 1120326\""}], "]"}], 
      "\"SIMBAD\"", "\"LEDA 1120326\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=LEDA 1120326"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "49", "15.900000000000034`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{
        RowBox[{"-", "1"}], 
        RowBox[{"-", "22"}], 
        RowBox[{"-", "4.000000000000199`"}], 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Galaxy\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"LMPU 23\""}], "]"}], "\"SIMBAD\"", 
      "\"LMPU 23\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=LMPU 23"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "49", "11.999999999999744`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{
        RowBox[{"-", "1"}], 
        RowBox[{"-", "42"}], "0.`", 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"High-velocity Cloud\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"NVSS J004858-012847\""}], "]"}], 
      "\"SIMBAD\"", "\"NVSS J004858-012847\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=NVSS J004858-012847"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "48", "59.10000000000039`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{
        RowBox[{"-", "1"}], 
        RowBox[{"-", "28"}], 
        RowBox[{"-", "51.00000000000072`"}], 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Radio-source\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"[RRB2014] RM J004940.2-012553.2\""}], 
        "]"}], "\"SIMBAD\"", "\"[RRB2014] RM J004940.2-012553.2\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=[RRB2014] RM \
J004940.2-012553.2"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "49", "40.10000000000019`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{
        RowBox[{"-", "1"}], 
        RowBox[{"-", "25"}], 
        RowBox[{"-", "53.00000000000061`"}], 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Cluster of Galaxies\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8348507321646004`*^9, 3.834850886711345*^9, 3.835098995981561*^9, 
   3.835380514314872*^9, 3.8357906543416853`*^9, 3.8357929757121983`*^9, 
   3.83579318985583*^9, 3.835793854535713*^9, 3.8357942739387264`*^9, 
   3.8357949235510387`*^9, 3.835832093280596*^9, 3.8358640921163344`*^9, 
   3.8358668175233917`*^9, 3.8358688457624826`*^9, 3.8358706670537453`*^9, 
   3.8364239240650296`*^9, 3.836426296629511*^9, 3.8364265204712477`*^9, 
   3.8396123877598*^9, 3.8396131744825487`*^9, 3.8396788002898417`*^9, 
   3.8396792007987566`*^9, 3.8399326030607557`*^9, 3.839958194963036*^9, 
   3.839958500006778*^9, 3.839958643227515*^9, 3.8400297365866394`*^9, 
   3.8400357280174465`*^9, {3.840035792230523*^9, 3.840035808985324*^9}, 
   3.840035843575263*^9, 3.840036356229498*^9, 3.8400365205891256`*^9, 
   3.8400483549086046`*^9, 3.8400491026654124`*^9},
 CellLabel->"Out[143]=",
 CellID->41060039,ExpressionUUID->"95da8cb3-73c0-4e1e-bd55-192ff4f5dfd2"]
}, Open  ]],

Cell["Look up 5 astronomical objects inside a triangle:", "Text",
 TaggingRules->{},
 CellID->65658513,ExpressionUUID->"048f8e69-8f28-4dcb-9d52-21f685e75859"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<AstroRange\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"MaxItems", "\[Rule]", "5"}]}], "|>"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<RightAscension\>\"", ",", "\"\<Declination\>\"", ",", 
     "\"\<ObjectTypes\>\""}], "}"}], ",", "\"\<ObjectAssociation\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.823352740688855*^9, 3.82335278609956*^9}, {
   3.8239715960165043`*^9, 3.823971625587924*^9}, {3.8243886439322166`*^9, 
   3.824388646547439*^9}, {3.8244669102311*^9, 3.8244669102957993`*^9}, {
   3.824490013867758*^9, 3.82449001803218*^9}, {3.824504202823398*^9, 
   3.8245042033789062`*^9}, {3.834850859470256*^9, 3.834850860229312*^9}, {
   3.8348508974754868`*^9, 3.8348509088924036`*^9}, {3.8348510876653957`*^9, 
   3.8348511120094833`*^9}, 3.8357916180388565`*^9, 3.835831976417037*^9, {
   3.8400358526506386`*^9, 3.840035866226055*^9}},
 CellLabel->"In[144]:=",
 CellID->727715067,ExpressionUUID->"51e128cd-3e6a-4d1a-92b6-ef1002f0a55e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"QSO B2359+011A\""}], "]"}], 
      "\"SIMBAD\"", "\"QSO B2359+011A\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=QSO B2359+011A"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "2", "6.483839999999984`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{"1", "25", "24.4344000000001`", 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Possible Quasar\"\>", ",", "\<\"Quasar\"\>"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"LBQS 2358+0109\""}], "]"}], 
      "\"SIMBAD\"", "\"LBQS 2358+0109\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=LBQS 2358+0109"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "1", "9.344640000000007`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{"1", "26", "40.5240000000002`", 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"UV-emission source\"\>", ",", "\<\"Quasar\"\>", 
        ",", "\<\"Star\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"LEDA 1196631\""}], "]"}], 
      "\"SIMBAD\"", "\"LEDA 1196631\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=LEDA 1196631"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "0", "49.7`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{"1", "29", "39.00000000000012`", 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Galaxy\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"ZYCJ 2359+011C\""}], "]"}], 
      "\"SIMBAD\"", "\"ZYCJ 2359+011C\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=ZYCJ 2359+011C"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "2", "15.200000000000005`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{"1", "25", "4.000000000000412`", 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          RowBox[{
           "\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Possible Quasar\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"SIMBADID\"", ",", "\"PB 5672\""}], "]"}], "\"SIMBAD\"", 
      "\"PB 5672\"", 
      "https://simbad.u-strasbg.fr/simbad/sim-id?Ident=PB 5672"},
     "ExternalIdentifierURL"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "0", "28.999999999999996`", 
        SuperscriptBox["\[Null]", "\"h\""], 
        SuperscriptBox["\[Null]", "\"m\""], 
        SuperscriptBox["\[Null]", "\"s\""], 
        "hours of right ascension,minutes of right ascension,seconds of right \
ascension", 
        RowBox[{"{", 
          
          RowBox[{"\"HoursOfRightAscension\"", ",", 
            "\"MinutesOfRightAscension\"", ",", 
            "\"SecondsOfRightAscension\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      TemplateBox[{"1", "46", "6.000000000000085`", 
        RowBox[{"\[ThinSpace]", "\"\[Degree]\""}], 
        RowBox[{"\[ThinSpace]", "\"'\""}], 
        RowBox[{"\[ThinSpace]", "\"\\\"\""}], 
        "degrees,arc minutes,arc seconds", 
        RowBox[{"{", 
          
          RowBox[{"\"AngularDegrees\"", ",", "\"ArcMinutes\"", ",", 
            "\"ArcSeconds\""}], "}"}]},
       "QuantityMixedUnit3"], ",", 
      RowBox[{"{", "\<\"Star\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8348508625623207`*^9, 3.8348509110240607`*^9, {3.834851098286632*^9, 
   3.834851112772599*^9}, 3.8350989963926463`*^9, 3.835380514559323*^9, 
   3.835790654612982*^9, 3.8357929759637127`*^9, 3.83579319012593*^9, 
   3.835793854771248*^9, 3.8357942741858034`*^9, 3.835794923769987*^9, 
   3.835832093557588*^9, 3.835864096266346*^9, 3.8358668177910576`*^9, 
   3.8358688481368947`*^9, 3.835870667337556*^9, 3.836423924379245*^9, 
   3.8364262968823013`*^9, 3.8364265207555265`*^9, 3.8396123880619993`*^9, 
   3.8396131748271713`*^9, 3.839678800617972*^9, 3.839679201155402*^9, 
   3.839932604305375*^9, 3.8399581952212553`*^9, 3.8399585003127174`*^9, 
   3.839958648769968*^9, 3.840029736831089*^9, {3.84003584858995*^9, 
   3.840035866737383*^9}, 3.8400363627754335`*^9, 3.840036520780104*^9, 
   3.8400483564083033`*^9, 3.840049111399707*^9},
 CellLabel->"Out[144]=",
 CellID->13587480,ExpressionUUID->"b821455e-5705-4daa-948c-77162ca977b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.834851230550805*^9, 3.834851233503462*^9}},
 CellLabel->"In[5]:=",
 CellID->890561555,ExpressionUUID->"56615d90-c8a1-4377-8639-00329b6c75c1"],

Cell[CellGroupData[{

Cell["DataSource", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8348512491458764`*^9, 3.8348512630510645`*^9}},
 CellLabel->"In[1]:=",
 CellID->540758629,ExpressionUUID->"24a60d3e-777e-4bfb-a83b-e66380932263"],

Cell["Select a mirror in France as the data source:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834851325030461*^9, 3.834851346059019*^9}, {
  3.8357909857945757`*^9, 3.835790987849394*^9}},
 CellID->590900056,ExpressionUUID->"bb0720e2-5e73-4ecb-b568-9611b80fb146"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{
   TemplateBox[{"\"Altair\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Star\"", ",", "\"Altair\""}], "]"}], 
     "\"Entity[\\\"Star\\\", \\\"Altair\\\"]\"", "\"star\""},
    "Entity"], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Identifiers\>\"", ",", "\"\<ObjectTypes\>\""}], "}"}], ",", 
   "\"\<Association\>\"", ",", 
   RowBox[{"\"\<DataSource\>\"", "->", "\"\<France\>\""}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8348513483005304`*^9, 3.834851479923767*^9}, {
   3.835790978780558*^9, 3.8357909795816317`*^9}, 3.8357916204064093`*^9},
 CellLabel->"In[145]:=",
 CellID->357692825,ExpressionUUID->"cdf74062-8dc4-4d63-8100-5b6a97171fe8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   TemplateBox[{"\"Altair\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Star\"", ",", "\"Altair\""}], "]"}], 
     "\"Entity[\\\"Star\\\", \\\"Altair\\\"]\"", "\"star\""},
    "Entity"], "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Identifiers\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"TIC 70257116\"\>", ",", "\<\"PLX 4665\"\>", 
        ",", "\<\"LSPM J1950+0852\"\>", ",", "\<\"ASCC 1075038\"\>", 
        ",", "\<\"USNO-B1.0 0988-00511792\"\>", ",", "\<\"* alf Aql\"\>", 
        ",", "\<\"* 53 Aql\"\>", ",", "\<\"2E 4294\"\>", 
        ",", "\<\"8pc 194.44\"\>", ",", "\<\"ADS 13009 A\"\>", 
        ",", "\<\"AG+08 2636\"\>", ",", "\<\"BD+08 4236\"\>", 
        ",", "\<\"CCDM J19508+0852A\"\>", ",", "\<\"CSI+08 4236 1\"\>", 
        ",", "\<\"Ci 20 1169\"\>", ",", "\<\"FK5 745\"\>", 
        ",", "\<\"GAT 549\"\>", ",", "\<\"GC 27470\"\>", 
        ",", "\<\"GCRV 12193\"\>", ",", "\<\"GEN# +1.00187642\"\>", 
        ",", "\<\"GJ 768\"\>", ",", "\<\"HD 187642\"\>", 
        ",", "\<\"HIC 97649\"\>", ",", "\<\"HIP 97649\"\>", 
        ",", "\<\"HR 7557\"\>", ",", "\<\"IDS 19459+0836 A\"\>", 
        ",", "\<\"IRAS 19483+0844\"\>", ",", "\<\"IRC +10441\"\>", 
        ",", "\<\"JP11 3142\"\>", ",", "\<\"LFT 1499\"\>", 
        ",", "\<\"LHS 3490\"\>", ",", "\<\"LTT 15795\"\>", 
        ",", "\<\"N30 4388\"\>", ",", "\<\"NAME Altair\"\>", 
        ",", "\<\"NLTT 48314\"\>", ",", "\<\"NSV 24910\"\>", 
        ",", "\<\"PM 19484+0844\"\>", ",", "\<\"PMC 90-93 530\"\>", 
        ",", "\<\"PPM 168779\"\>", ",", "\<\"RAFGL 2463\"\>", 
        ",", "\<\"ROT 2857\"\>", ",", "\<\"SAO 125122\"\>", 
        ",", "\<\"SKY# 37134\"\>", ",", "\<\"TD1 25537\"\>", 
        ",", "\<\"UBV M 24205\"\>", ",", "\<\"UBV 16885\"\>", 
        ",", "\<\"USNO 891\"\>", ",", "\<\"Zkh 297\"\>", 
        ",", "\<\"uvby98 100187642\"\>", 
        ",", "\<\"2MASS J19504698+0852060\"\>", ",", "\<\"PLX 4665.00\"\>", 
        ",", "\<\"1ES 1948+08.7\"\>", ",", "\<\"2E 1948.3+0844\"\>", 
        ",", "\<\"1RXS J195047.0+085159\"\>", ",", "\<\"WDS J19508+0852A\"\>",
         ",", "\<\"TYC 1058-3399-1\"\>", ",", "\<\"GSC 01058-03399\"\>", 
        ",", "\<\"V* alf Aql\"\>", 
        ",", "\<\"AKARI-FIS-V1 J1950472+085209\"\>", 
        ",", "\<\"2XMMi J195047.1+085208\"\>", ",", "\<\"WEB 17173\"\>"}], 
       "}"}]}], ",", 
     RowBox[{"\<\"ObjectTypes\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"UV-emission source\"\>", ",", "\<\"X-ray source\"\>", 
        ",", "\<\"Variable Star\"\>", ",", "\<\"High proper-motion Star\"\>", 
        ",", "\<\"Double or multiple star\"\>", 
        ",", "\<\"Infra-Red source\"\>", ",", "\<\"Star\"\>", 
        ",", "\<\"Variable Star of delta Sct type\"\>"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.834851440502554*^9, 3.8348514811271105`*^9}, 
   3.8350989971043525`*^9, 3.8353805148698506`*^9, 3.8357906549334497`*^9, 
   3.8357909931884446`*^9, 3.83579297700616*^9, 3.8357931910453987`*^9, 
   3.8357938557794003`*^9, 3.8357942760686197`*^9, 3.8357949246510468`*^9, 
   3.8358320944195814`*^9, 3.835864100388218*^9, 3.835868852152381*^9, 
   3.83587066827795*^9, 3.836423925472692*^9, 3.8364262976645555`*^9, 
   3.8364265215670567`*^9, 3.839612390070243*^9, 3.8396131759115987`*^9, 
   3.8396788019189715`*^9, 3.8396792021821375`*^9, 3.8399581960171347`*^9, 
   3.839958501005311*^9, 3.8399586570624046`*^9, 3.840029737545092*^9, 
   3.840036522011194*^9, 3.8400483578304973`*^9, 3.8400491307591987`*^9},
 CellLabel->"Out[145]=",
 CellID->7077889,ExpressionUUID->"758000d7-0616-4daf-aeca-361a662a7ac8"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Properties & Relations", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8348515493738136`*^9, 3.8348515585107093`*^9}},
 CellLabel->"In[2]:=",
 CellID->541205145,ExpressionUUID->"205f8757-164c-4a28-aff7-1c3642dd4f31"],

Cell["Ask for the spectral class of a star:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834851571979916*^9, 3.8348515789978614`*^9}, {
  3.8348516239010935`*^9, 3.8348516496800456`*^9}},
 CellID->626784582,ExpressionUUID->"860f81c0-8d31-45d4-9104-5a92129ec5d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"specClass", "=", 
  RowBox[{"SIMBADData", "[", 
   RowBox[{
    TemplateBox[{"\"Altair\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Star\"", ",", "\"Altair\""}], "]"}], 
      "\"Entity[\\\"Star\\\", \\\"Altair\\\"]\"", "\"star\""},
     "Entity"], ",", "\"\<SpectralClass\>\""}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834851595690282*^9, 3.834851667987935*^9}, 
   3.8357916225272512`*^9, {3.839613234558429*^9, 3.8396132355938463`*^9}},
 CellLabel->"In[146]:=",
 CellID->741307662,ExpressionUUID->"3ddbd09d-d3e1-4316-bf12-59529b5f0f59"],

Cell[BoxData["\<\"A7Vn\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8348516372112694`*^9, 3.8348516704343114`*^9}, 
   3.8350989973991165`*^9, 3.8353805151390467`*^9, 3.835790655239803*^9, 
   3.83579297734795*^9, 3.835793191400345*^9, 3.8357938561597233`*^9, 
   3.8357942763184404`*^9, 3.835794924872524*^9, 3.8358320947197123`*^9, 
   3.835864103000203*^9, 3.83587066855993*^9, 3.836423925773275*^9, 
   3.836426297961669*^9, 3.8364265218617773`*^9, 3.839612390402645*^9, 
   3.839613176243433*^9, 3.839613236817162*^9, 3.839678802379174*^9, 
   3.8396792026636796`*^9, 3.8399581965698943`*^9, 3.839958502307355*^9, 
   3.840029738086812*^9, 3.840036522560591*^9, 3.8400483589513407`*^9, 
   3.840049143840528*^9},
 CellLabel->"Out[146]=",
 CellID->240127613,ExpressionUUID->"9c16afb2-1294-449e-8561-356fdf1a6aa7"]
}, Open  ]],

Cell["Use this result to extract more information about the star:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8348516551818256`*^9, 3.834851686721569*^9}},
 CellID->527800749,ExpressionUUID->"7fd1d271-8d58-4d1e-89d8-66391363264d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<StellarSpectralClassData\>\"", "]"}], 
  "[", "specClass", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834851688081724*^9, 3.834851748788957*^9}},
 CellLabel->"In[2]:=",
 CellID->276458845,ExpressionUUID->"81caf9a8-76c8-499d-9790-d24898ae9310"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TemperatureClass\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"A7\"\>", "}"}]}], ",", 
   RowBox[{"\<\"LuminosityClass\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"V\"\>", "}"}]}], ",", 
   RowBox[{"\<\"StarType\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Color\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.8336134453781512, 0.873015873015873, 1.], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5557422969187675, 0.5820105820105821, 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.8336134453781512`", ",", "0.873015873015873`", ",", 
            "1.`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.8336134453781512, 0.873015873015873, 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8336134453781512, 0.873015873015873, 1.],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"AbsoluteMagnitude\"\>", "\[Rule]", 
    "2.2010323390461647094`1.4807183879031223"}], ",", 
   RowBox[{"\<\"EffectiveTemperature\"\>", "\[Rule]", 
    TemplateBox[{"7800.`2.", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Mass\"\>", "\[Rule]", 
    TemplateBox[{"1.7600309796821556231`1.9913501525911261", 
      StyleBox[
       SubscriptBox["\"M\"", "\"\[Sun]\""], Italic, StripOnInput -> False], 
      "solar masses", "\"SolarMass\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Radius\"\>", "\[Rule]", 
    TemplateBox[{"1.8594652867615351445`2.", 
      StyleBox[
       SubscriptBox["\"R\"", "\"\[Sun]\""], Italic, StripOnInput -> False], 
      "solar radii", "\"SolarRadius\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Luminosity\"\>", "\[Rule]", 
    TemplateBox[{"11.4706245359403112863`1.2217763732339035", 
      StyleBox[
       SubscriptBox["\"L\"", "\"\[Sun]\""], Italic, StripOnInput -> False], 
      "solar luminosities", "\"SolarLuminosity\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Peculiarities\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"spin-induced broad absorption\"\>", "}"}]}], ",", 
   RowBox[{"\<\"MainSequenceLifetime\"\>", "\[Rule]", 
    TemplateBox[{
     "2.4333199647331118583679199219`2.*^9", "\"yr\"", "years", "\"Years\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"StellarEndState\"\>", 
    "\[Rule]", "\<\"carbon\[Hyphen]oxygen white dwarf\"\>"}], ",", 
   RowBox[{"\<\"Examples\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"BU Cancri\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"BUCancri\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"BUCancri\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"\[Epsilon] 2 Lyrae B\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"Epsilon2LyraeB\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"Epsilon2LyraeB\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 104771\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP104771\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP104771\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 114258\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP114258\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP114258\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 118256\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP118256\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP118256\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 15717A\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP15717A\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP15717A\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 24348\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP24348\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP24348\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"BY Cancri\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP42705\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP42705\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 48029\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP48029\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP48029\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"EN Ursae Majoris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP50685\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP50685\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 55485\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP55485\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP55485\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 61692\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP61692\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP61692\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"GG Virginis\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP61937\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP61937\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 71094\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP71094\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP71094\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 72131\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP72131\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP72131\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"FP Serpentis\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP77910\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP77910\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 9075\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP9075\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP9075\\\"]\"", "\"star\""},
       "Entity"], ",", 
      TemplateBox[{"\"HIP 92674\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Star\"", ",", "\"HIP92674\""}], "]"}], 
        "\"Entity[\\\"Star\\\", \\\"HIP92674\\\"]\"", "\"star\""},
       "Entity"]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8348517590781965`*^9, 3.835099000554038*^9, 
  3.835380516913534*^9, 3.8357906596783495`*^9, 3.8357929796040835`*^9, 
  3.835793195706792*^9, 3.835793859746909*^9, 3.835794279932293*^9, 
  3.835794925497339*^9, 3.8358320979745674`*^9, 3.8358706732315683`*^9, 
  3.8364239287611876`*^9, 3.8364263005272694`*^9, 3.836426524578808*^9, 
  3.839612393959179*^9, 3.839613179710191*^9, 3.839613238641608*^9, 
  3.8396788029282055`*^9, 3.839679206093158*^9, 3.8399582001312013`*^9, 
  3.839958505109147*^9, 3.8400297411780696`*^9, 3.840036522936839*^9, 
  3.8400483642872934`*^9},
 CellLabel->"Out[2]=",
 CellID->441580740,ExpressionUUID->"b9020844-fbb2-47f1-a305-8ab2aaf94441"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "50ca24a0-16ca-40d9-a929-3afe82d1c344"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107562,ExpressionUUID->"b79dd19a-d9c0-4bbc-b4d2-5db8d29bd08e"],

Cell["Get the redshift of the quasar \[OpenCurlyDoubleQuote]3C 273\
\[CloseCurlyDoubleQuote]:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8348551466245995`*^9, 3.8348551673811555`*^9}},
 CellID->693186011,ExpressionUUID->"9dcb0778-4c26-4d19-9739-8f6e4ea800f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"SIMBADData", "[", 
   RowBox[{"\"\<3C 273\>\"", ",", "\"\<Redshift\>\""}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834855169912414*^9, 3.8348551910634336`*^9}, 
   3.8357916287269354`*^9},
 CellLabel->"In[147]:=",
 CellID->512578517,ExpressionUUID->"aaad7a87-77c5-41b2-9cb7-99f37dd531fa"],

Cell[BoxData["0.158339`"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.834855185083242*^9, 3.8348551920365667`*^9}, 
   3.8350990009408*^9, 3.835380517151904*^9, 3.835790659915249*^9, 
   3.835792979871105*^9, 3.835793196073217*^9, 3.835793860118374*^9, 
   3.8357942814540834`*^9, 3.8357949256787214`*^9, 3.8358320982644873`*^9, 
   3.8358641077881145`*^9, 3.835870673517556*^9, 3.836423929090927*^9, 
   3.836426300834574*^9, 3.836426524848822*^9, 3.8396123944964714`*^9, 
   3.839613180085699*^9, 3.839678803169346*^9, 3.8396792064322424`*^9, 
   3.839958200733156*^9, 3.8399585056060557`*^9, 3.8400297417472887`*^9, 
   3.8400365234088793`*^9, 3.8400491501134605`*^9},
 CellLabel->"Out[147]=",
 CellID->31297835,ExpressionUUID->"3f24ad21-53a8-4d02-b602-f099839bac09"]
}, Open  ]],

Cell["\<\
Get the properties of the Universe based on the redshift of this object:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.834855251418274*^9, 3.8348552560453672`*^9}, {
  3.8348553702063932`*^9, 3.8348553903990107`*^9}},
 CellID->376035766,ExpressionUUID->"d01a3d9d-7418-4572-bff8-43642f8f07a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UniverseModelData", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<Redshift\>\"", "->", "z"}], "|>"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834855391848146*^9, 3.8348554128054276`*^9}},
 CellLabel->"In[2]:=",
 CellID->903516355,ExpressionUUID->"b631a684-7842-4a43-a149-e4a7dbeea8b6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AngularDiameterDistance\"\>", "\[Rule]", 
    TemplateBox[{
     "1.8986804389059541`*^9", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"ComovingDistance\"\>", "\[Rule]", 
    TemplateBox[{
     "2.199315601260639`*^9", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"ComovingVolume\"\>", "\[Rule]", 
    TemplateBox[{"4.456062062099568`*^28", 
      RowBox[{
        SuperscriptBox["\"ly\"", "3"]}], "light years cubed", 
      SuperscriptBox["\"LightYears\"", "3"]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"ConformalTime\"\>", "\[Rule]", 
    TemplateBox[{"1.4624535114292718`*^18", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"DarkEnergyDensityRatio\"\>", "\[Rule]", 
    TemplateBox[{"59.108305964854644`", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"Epoch\"\>", "\[Rule]", 
    TemplateBox[{"\"dark energy dominated, post\[Hyphen]recombination\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"CosmologicalEpoch\"", ",", 
          "\"DarkEnergyDominatedPostRecombination\""}], "]"}], 
      "\"Entity[\\\"CosmologicalEpoch\\\", \
\\\"DarkEnergyDominatedPostRecombination\\\"]\"", "\"epoch\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"EventHorizon\"\>", "\[Rule]", 
    TemplateBox[{
     "4.3031888943270615`*^10", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"HubbleDistance\"\>", "\[Rule]", 
    TemplateBox[{
     "6.62943126299575`*^11", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"HubbleParameter\"\>", "\[Rule]", 
    TemplateBox[{"73.35985846017084`", 
      RowBox[{
       "\"km\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
        "\"Mpc\"", "\[ThinSpace]", "\"s\"", "\[InvisibleSpace]", "\")\""}], 
      "kilometers per megaparsec second", 
      FractionBox["\"Kilometers\"", 
       RowBox[{"\"Megaparsecs\"", " ", "\"Seconds\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"LuminosityDistance\"\>", "\[Rule]", 
    TemplateBox[{
     "2.5475530338562536`*^9", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"MatterEnergyDensityRatio\"\>", "\[Rule]", 
    TemplateBox[{"40.888405143067544`", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"MaximumUniverseAge\"\>", "\[Rule]", 
    TemplateBox[{"\[Infinity]", "\"yr\"", "years", "\"Years\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"ParticleHorizon\"\>", "\[Rule]", 
    TemplateBox[{
     "4.634235529410576`*^10", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"RadiationEnergyDensityRatio\"\>", "\[Rule]", 
    TemplateBox[{"0.012912591864866981`", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"RadiationTemperature\"\>", "\[Rule]", 
    TemplateBox[{"3.1564737750000003`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Redshift\"\>", "\[Rule]", "0.158339`"}], ",", 
   RowBox[{"\<\"ScaleFactor\"\>", "\[Rule]", "0.8633051291547639`"}], ",", 
   RowBox[{"\<\"TimeAgo\"\>", "\[Rule]", 
    TemplateBox[{"2.0436087352644715`*^9", "\"yr\"", "years", "\"Years\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TotalObservableRadiusFraction\"\>", "\[Rule]", 
    "0.04745800223797361`"}], ",", 
   RowBox[{"\<\"TransverseComovingDistance\"\>", "\[Rule]", 
    TemplateBox[{
     "2.1993156009218836`*^9", "\"ly\"", "light years", "\"LightYears\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"UniverseCurvature\"\>", "\[Rule]", 
    RowBox[{"-", "0.00008397079999994395`"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8348553957664566`*^9, 3.8348554161256075`*^9}, 
   3.8350990016203413`*^9, 3.8353805175891895`*^9, 3.8357906605457044`*^9, 
   3.835792980142108*^9, 3.8357931987587214`*^9, 3.8357938622400007`*^9, 
   3.835794282814459*^9, 3.835794926920163*^9, 3.835832100243507*^9, 
   3.835864110520831*^9, 3.8358706755546136`*^9, 3.8364239297794123`*^9, 
   3.8364263020184827`*^9, 3.836426528826727*^9, 3.8396123965086603`*^9, 
   3.8396131813094006`*^9, 3.8396788048243914`*^9, 3.8396792078776903`*^9, 
   3.839958200799152*^9, 3.8399585056200047`*^9, 3.8400297423372865`*^9, 
   3.840036525407953*^9},
 CellLabel->"Out[2]=",
 CellID->30731813,ExpressionUUID->"e7cc8cde-3858-44be-a4a2-32d144e15514"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8348538616525583`*^9, 3.8348538683257055`*^9}},
 CellLabel->"In[3]:=",
 CellID->158766396,ExpressionUUID->"a46edf0a-3356-4503-9138-d3359d6eda67"],

Cell[TextData[{
 "If no astronomical object is found ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Missing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Missing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5e064e21-f511-44e0-a65d-b29e98ba62a1"],
 " is returned:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8348539105315847`*^9, 3.8348539753348055`*^9}, 
   3.8357943811040792`*^9},
 CellID->894237375,ExpressionUUID->"ae47b3d3-3022-4ad4-8094-0130f9a506c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIMBADData", "[", 
  RowBox[{"\"\<Invalid123\>\"", ",", "\"\<MainIdentifier\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.834853883273238*^9, 3.834853900616696*^9}, 
   3.8357916787434826`*^9, {3.835792994049778*^9, 3.8357929971582932`*^9}},
 CellLabel->"In[1]:=",
 CellID->172297434,ExpressionUUID->"12ad761f-5c75-4ac4-80a2-67bf51c12634"],

Cell[BoxData[
 TemplateBox[{
  "ResourceFunction", "usermessage", 
   "\"\\!\\(\\*TemplateBox[List[StyleBox[RowBox[List[\\\"SIMBADData\\\", \
\\\"::\\\", \\\"noinfofound\\\"]], \\\"MessageName\\\"], \\\"\\\\\\\": \\\\\\\
\"\\\", TemplateBox[List[\\\"\\\\\\\"No object has been found.\\\\\\\"\\\"], \
\\\"RowDefault\\\"]], \\\"RowDefault\\\"]\\)\"", 2, 1, 27, 
   27437658460343402964, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 TaggingRules->{},
 CellChangeTimes->{{3.835792997905016*^9, 3.835793029168287*^9}, 
   3.8357931992958255`*^9, 3.835793862740261*^9, 3.835794283277266*^9, 
   3.8357949272011666`*^9, 3.8358321008913336`*^9, 3.835864128532716*^9, 
   3.835870676171093*^9, 3.836423930804991*^9, 3.836426302648102*^9, 
   3.8364265294844503`*^9, 3.839612397252965*^9, 3.8396131819736586`*^9, 
   3.839678805407241*^9, 3.83967920893678*^9, 3.8399585067952957`*^9, 
   3.840029742975363*^9, 3.8400365257720723`*^9},
 CellLabel->"During evaluation of In[1]:=",
 CellID->207953491,ExpressionUUID->"769c9467-dc7b-4df0-b159-bb084b0015cc"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8357929979230175`*^9, 3.8357930291822853`*^9}, 
   3.8357931993187914`*^9, 3.8357938627612553`*^9, 3.835794283310278*^9, 
   3.835794927216174*^9, 3.8358321009192457`*^9, 3.8358641285707226`*^9, 
   3.835870676357917*^9, 3.836423930927932*^9, 3.836426302662424*^9, 
   3.8364265295936856`*^9, 3.8396123972559147`*^9, 3.8396131819758644`*^9, 
   3.839678805419797*^9, 3.839679208957963*^9, 3.839958506800295*^9, 
   3.8400297429784493`*^9, 3.8400365257750735`*^9},
 CellLabel->"Out[1]=",
 CellID->149389246,ExpressionUUID->"c68c6dcb-d737-47b2-8560-f2c6b7f3c303"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->122838224,ExpressionUUID->"27b8f380-69d2-4045-a3b2-f441b58bd050"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
      True, CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e5ca699a-c6ea-46ed-94d5-0256262f9043"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->340488457,ExpressionUUID->"f384af17-32bb-43ed-a107-c45a7d54ecd3"],

Cell["Truman Tapia", "Text",
 TaggingRules->{},
 CellID->884353747,ExpressionUUID->"8b7d771d-091a-4ac4-9c20-68eae0459787"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
      Deletable -> True, CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "956a141f-635e-42aa-8561-d908cfd38619"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->888841136,ExpressionUUID->"4b5bfb2d-18ea-45a9-a6b3-771da8c1302f"],

Cell["astronomy", "Item",
 TaggingRules->{},
 CellID->636451929,ExpressionUUID->"1096d221-06e0-4ff9-99af-05fa8bf47ba1"],

Cell["SIMBAD", "Item",
 TaggingRules->{},
 CellID->304470364,ExpressionUUID->"6ea33331-54ab-49dc-8405-caaa0e89643c"],

Cell["data", "Item",
 TaggingRules->{},
 CellID->970596894,ExpressionUUID->"dd3eb57d-421d-4415-8039-4f5c05365d95"],

Cell["database", "Item",
 TaggingRules->{},
 CellID->211644459,ExpressionUUID->"19b601eb-2613-4db5-9f61-cb0684fbe66a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->841175420,ExpressionUUID->"29546386-591d-40fe-961d-5f90e5c7ab72"],

Cell["Data Manipulation & Analysis", "Item",
 TaggingRules->{},
 CellID->282865502,ExpressionUUID->"9e59acc2-56ee-42e1-92e6-58a142e18c5b"],

Cell["External Interfaces & Connections", "Item",
 TaggingRules->{},
 CellID->691257605,ExpressionUUID->"08b0e233-ba8e-4dee-8f5a-dbf6205d91ae"],

Cell["Scientific and Medical Data & Computation", "Item",
 TaggingRules->{},
 CellID->525597770,ExpressionUUID->"b33852d7-2fe7-4ef5-9dd2-c79231c1d333"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "18c23634-6202-4d13-b2fb-31c686515e6f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->819464728,ExpressionUUID->"21693879-2a74-4160-9889-42d351e6f6ce"],

Cell["ExternalIdentifier", "Item",
 TaggingRules->{},
 CellID->493630992,ExpressionUUID->"63855f4c-c74d-4be9-9334-4b5ee98c0513"],

Cell["WikidataData", "Item",
 TaggingRules->{},
 CellID->156823216,ExpressionUUID->"9be331f3-83b6-4485-94e4-48f228bf39fb"],

Cell["ServiceConnect", "Item",
 TaggingRules->{},
 CellID->233491296,ExpressionUUID->"3dc6ab74-61c7-4e9f-a5e1-01bbd072d318"],

Cell["StarData", "Item",
 TaggingRules->{},
 CellID->584723729,ExpressionUUID->"e20f7e44-1360-4b92-b7fb-42edf10fd602"],

Cell["GalaxyData", "Item",
 TaggingRules->{},
 CellID->36129225,ExpressionUUID->"c02ec044-a3cb-41cc-920d-e683ea7c322d"],

Cell["ExoplanetData", "Item",
 TaggingRules->{},
 CellID->377724266,ExpressionUUID->"9bef0476-1ccd-4aab-ba09-86bb5370c8c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "26843434-aa44-4563-8161-04c00d89ccc0"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->58300769,ExpressionUUID->"d868d990-2914-4317-93fd-822bb08dfc87"],

Cell["SIMBADIdentifiers", "Item",
 TaggingRules->{},
 CellID->389830986,ExpressionUUID->"485eb841-7880-461b-8e3f-eae6ffe8eb05"],

Cell["VizierCatalogData", "Item",
 TaggingRules->{},
 CellID->131410424,ExpressionUUID->"bc472543-e54b-4f09-8f37-c687f7cf11ec"],

Cell["AstroAngularDistance", "Item",
 TaggingRules->{},
 CellID->156315255,ExpressionUUID->"9489b6b1-6f0c-47ce-8b61-e21048b5e742"],

Cell["DeepSpaceNetData", "Item",
 TaggingRules->{},
 CellID->311843426,ExpressionUUID->"e983934c-a1ff-43fd-bc7e-615d26a80bf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
      "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "12cd3a32-ff1a-4116-969d-1461ccfe6403"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->218541429,ExpressionUUID->"ff8316f4-e416-480a-a0f4-bd739373e75c"],

Cell["\<\
M. Wenger et al. (2000), The SIMBAD astronomical database. The CDS reference \
database for astronomical objects. Astronomy and Astrophysics Supplement \
Series Volume 143, Number 1, 9-22.
DOI: 10.1051/aas:2000332\
\>", "Text",
 TaggingRules->{},
 CellID->624999032,ExpressionUUID->"6d40f09b-517b-42bb-b50d-c042ccba6654"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "05f0eb89-c70e-41d7-bfcc-dab11a21ea08"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->280139842,ExpressionUUID->"38dc0f50-07dd-4995-b9ef-51379d633650"],

Cell[TextData[ButtonBox["SIMBAD Astronomical Database - CDS (Strasbourg)",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://simbad.u-strasbg.fr/simbad/"], None},
 ButtonNote->"http://simbad.u-strasbg.fr/simbad/"]], "Item",
 TaggingRules->{},
 CellID->7390230,ExpressionUUID->"2d344e94-fb96-4efc-941f-1869d418399d"],

Cell[TextData[ButtonBox["SIMBAD TAP Service",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://simbad.u-strasbg.fr/simbad/sim-tap"], None},
 ButtonNote->"http://simbad.u-strasbg.fr/simbad/sim-tap"]], "Item",
 TaggingRules->{},
 CellID->564221152,ExpressionUUID->"10fedd44-228d-4310-a6d8-1a41074571c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> 
                    RGBColor[0.854902, 0.396078, 0.145098]}, {"Link"}]], 
                ButtonData -> "paclet:ref/VerificationTest", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
      Deletable -> True, CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eb996447-d440-46b7-9fa5-fd64c33182f5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->269191388,ExpressionUUID->"14ca16b4-235c-4c05-8278-4860f31423ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->946203791,ExpressionUUID->"8f3ba377-e08e-45eb-9b12-75e7ae2aee97"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 TaggingRules->{},
 CellLabel->"Out[3]=",
 CellID->993233288,ExpressionUUID->"ae67e3e6-030d-49ec-b94b-12807110938d"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
      Deletable -> True, CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5ce1845c-35d8-4322-9db2-adad55fa0b7e"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->720474325,ExpressionUUID->"2e5ea787-0261-44f1-a4c7-3b9ce47cf39f"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->958952487,ExpressionUUID->"c65f3f53-00df-405e-9202-ef935d33db27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
      "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "96f69577-e688-4bef-9a55-009360d8fdbc"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->577229082,ExpressionUUID->"aacde900-960f-4be8-afb7-7cdc1ee9f7c4"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->604291542,ExpressionUUID->"94f13033-0347-4bf6-ab07-5c4953a3b450"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1142.1, 581.4},
WindowMargins->{{-4.8, Automatic}, {Automatic, 0}},
WindowTitle->"SIMBADData | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.921569, 0.341176, 0.105882], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     ByteArray[CompressedData["
1:eJwBdgiJ9yFib1JiAQAAAGkIAAA4Qzp4nK1ba3MbtxWtZavjyTiZOpMPnXza
tGzrtGleTtL0MU0kUrLZkWhJSzlfDe5ekqiwCxbAimL/WP9eL/ZFErsg7w7j
0Yz52HMOHhcX916A0yP9YV8mC5ml8dnDQoHWXKbTR/r4OuNgpkf6aDjFt0/P
GReZgmt8/f4ViwSYYaoNEyL89QCmPOUGcSNpYCLlXV9wSC3Ywz0CiHX44ga0
zFQE4UobSArQuybbuylrJTrS74VgBiDYCum+9DXjXX8O0V3zW/0DVd9D4DTg
xe4GnEt1u4iZwcb/pZPwGugI/tEvKHh0N5Z9uVidZsbIVP+VLOlCHdGeX1QK
AZF5zVOjX5Ll1iBH6Pc7hJIE/0f7A2X0a6rUQEaZxTH76VhKobeZuuqP5Wwm
4OfQL5gc/U926KcGHsy1/mqP9K3hAl+AriGOxhd+jUwp2zJIFgJN7y0ou+T0
P8nz2op35F965ddfVAwXMsoHTp+Sx9vLQV64+ARPuAFV2tq/Dphrh8tpwx92
tGEh5KoS1t/Ru7+JI7uOAddsIgAbucB1ybu4jgaUvKIQiRO0Co3iC9DfdhBc
wxyxb7xiZ//J+D0T+LLSuVJygVOyutZ9qvQOEqchn/obggQZM3bM+iCE1t+T
1R0k2aDPHiKR6dwmc+d1iEE7XGSDPs8waFglEylGLIG9m+HaiW0DHb0/7dBL
c2u84OlduRteHtDtJh15wl9BCoqJt0xw3M+lok+4iySvrFdgToSwRjIcaPrK
2oI5Yr/ZJVZC9u1Mm0IFhGzCiHjN4xhSu+zTGT2YcoCOYOAVtLEJxNf6C6pQ
CXAEPvMKDGepVBDbcbhiBneIVOu/U8VawI7wV37hfCeqlN5M/o1uexjh+viR
rO5hIC/O9WZRrSv9tw7iDtaR/Z1X9sJuxEwM00Vm9KsDvMEmETm4upAsbslH
yMFVO96R/9wrf4kfJ0xYd7p+Zq/62g+34slOYiTLYFR/TVasMeRkZCTDOYvl
0nqIbzro1Chydlm9PZUPNxhysQisiWh6dukhcBrw3d4G2AwZLXNiO7MagzZ9
GYM+69qMVhpy+Fi9fZOZAcvdJjl8bEAd0T/vFa2UxiuMIv/RVXcT3Xn23USp
8+zvzpT8McWV1JrbOLBKCveN99raXSjZfyHQYLiL2YgOI8UWEA/TqaT7r3Y8
OQK4UnDPYVmnROQIwAHS+5tNBNdzTN0GfQW597+9uejQ31a8I/+tV/4GZhwF
1ElmZJjNZrgm681SD6iN2MVCjhgqkgr55h6U4uhmyBGDj4G82CuCrSCQvNjb
0OSoYQ1G/7xvV2mRbNS4/Mt6EzS2myU5VXCR5JpLBWwJychp4pXCrNjADq7O
ppZ7CJylujGdTc1l6DwiFUGZ4qPvpFeh/Bydm1Fmf5sT07kZTQ7yVofBidQc
k89VQaaKehx9q/MQOA342tuAkN3DVgheR84n1CZ4KciBZbFhnUyk6lDl3gCR
yyQFpnvdbxtHH9wtmN2PVVLMD31wfRTkakXBEJaFR3K1YgtGDiPwofJQ6wLu
QdDDCAdI3j7CuVzi8p/Z8yv69rGJIruMEL0un66Kc6MypBxwJuSM7jL8HGSX
ERqWxkzF/L9QxbfnXADdZXgIyOWFYoPfyvYPqf016chFngJadaJoyujgpmzx
0X1YNqly8A7J8QaKHMYgJuFm7fjpYYyLJAfrLrA8OyUH6+14ulfJJjpSfGF+
hiMjh4tcsSyK5Nf6S/rcFgiyBY3Lgx7bw/MDerjB42j/drf2JahZh+KGTzqn
IW/JOeRGLsuODw9Vr6nIxbMcFtrYg5z3+cTDZjDi35i3/dYhR967PNb3O/R1
46CtPoLD6Ihcwt1DRB+Q/MzLdmnCFD1S2YKRY7PbdJjOQfH8qGTMZjP0/DcZ
7qP02MxLQc7HCj/YUrYm52M+BvI4vOWwPDAB8FKQN3LLcPbA0Iqhlief1rSA
OwmHZiXgVcZjEDyFDsdELWCys/+Jm3m189PDhQ0UubbTO+UmYYtLNkv5lJcX
Psierio+tLGQg/ReeSfHFuv0J63Sm4+QQ2Ec3kk2qz5c1+/IobCHgFyZL/Bl
5S+XJlfmG1Dyjtkr74TEecmMnsRu4+h9zO8kxBDX4e2+w8S1vTaw5CSj1zjX
pydZtc02OOhjvFUJ7TDGWzh6b8sT541iGPnEtoklZxK9YZpPT7n2OlyWcZGd
JSvD6C5ZIekGfMG0Kc9EiiVD3tlqS3Ip6P21yHWBsMsQO0i6MV2yh7yRY1le
5upgTA0sXbY6dVj7YbpsA0tOTXvFTbWqmlP1mJyatuPpxmVjb6mYWlUuroN3
dLF01dqlvVkUQ93dpF2K6aP8Svq6gm0vqR/pxyepXWpPLmyB7YNeWbMaZckE
Z+xl/u/Fj4h81p9LHkFRzAr/92g85zpIS9WALRaAMX1gZDCBILIHdhAHUyWT
gAUpLEEF9wXzZ4GW+JdAMMWHMpyTIGEryxQspUImHcCDPf+A+PNgIIOVzIIl
13NLbdQqYJmRtkIaMSFWQSTTe+sU01lgthqETzP8tjiWF1Cp/4BdPT4VMrqb
PsY+c2300141s8+qV1fMzPUHOJLFZdx8CqfHnvv0j8P8yv+z8vYuDnsGOF5P
QiFN/1E+tFbm2WYCEb4fYiSd6UtkYTP7+PPKQIdpbMOv/Lrak/zh907ywWWY
aoVPRxDd2esO+Wz+sihBhB8XPy64ZCmSqXfFuyJzCD9qMxwy+leVvdS18fqX
CD33q9ZfIRxvCH3aQHizm63xs6MQPs9PgWEEyzqDOD5nQkP9xMc3kMh7OEsW
mJ4W+UJVFXcf/cgOaRrfpnOWxqK4Cab1k7HK1s88Lxr3E09juRxzgzNRsvxC
f1heJt1o8v8BGs6SpF7eUus=
      "]]]], "CreationTimestamp" -> 3.837170639668898`16.33658610194148*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Function", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource"}, 
  "ToolsOpen" -> False, "UpdatedTimestamp" -> 
  3.83717063972592`16.336586101947937*^9, 
  "VersionInformation" -> {"ResourceVersion" -> "1.0.0"}, "TemplateVersion" -> 
  "1.5.0", "StatusMessage" -> "", 
  "SubmissionReviewData" -> {"Review" -> False}, "TryRealOnly" -> False, 
  "AutoUpdate" -> True},
CreateCellID->True,
Magnification:>1.1 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.921569, 0.341176, 0.105882], CellTags -> {"MainDockedCell"},
        CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.04581818181818182], 
              RGBColor[0.627441, 0.627441, 0.627441, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQLTQ3t12zRcShJLdco9dU3mHepS6LtrvCcP4+Xv/m
N77CDovcOdKu58g7FPjtSo+5KuTw57fmw+zb8g5K/ao+Z2KEHHRuqOoxqCo4
1OhH27UoCDnsSqhWX5aN4K+ZPvXO8oMI/txz6yeuFFeE67fRSpTaE6sIN79j
1cqy+5MV4fZf1fp0iemUItx9v7PEGkWeKjrA3A/jf+Fa9FHHQBTOX+1ud9n/
oChcv3mwk84kczG4+Yfi3FqvrBWD29+RcmLj1xdicPfB+DD3w/gw/8H0w/wP
Mx8WPjD7YeEHcx8sfNHDHwBu/qSR
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvf+bus9hGwmHDp1Dj7Lq+R1g/C8aMf2HvvI4TGr/
8PXaHQEMPkz934jyRxrThRx4jt4OchAXgPMDH16pmH8JwZ97RmCl6XRBOP9D
W/9jplQhOF+/1m7LFGNhOJ/l29N9k18i+AUfW5kZ2kXg/Ple3+bO/C4K5+fN
DQ4+fUAMzt9xf9q57xnicH6N4AF++Q8IvqPzywC3cgk4PyFkivMkFkk4/4bL
wedMMyQdDs1vE5FYJOBwYaHqp4u3EPzQT5dO7vwk5SCxtot3p4WYw73/Kfef
X5RxYLv4XzxkhpjDona/Xv0OBH+hx9ZwiywJOB/mHxgf5l8Y30/526VcIyR+
5Tb7vkQhON/3fNmadRME4fxHts2x9mcF4HxYfKDHLwCFIt67
                "]}]}, {
              FaceForm[
               RGBColor[0.627441, 0.627441, 0.627441, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.04581818181818182], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQLTQ3t12zRcShJLdco9dU3mHepS6LtrvCcP4+Xv/m
N77CDovcOdKu58g7FPjtSo+5KuTw57fmw+zb8g5K/ao+Z2KEHHRuqOoxqCo4
1OhH27UoCDnsSqhWX5aN4K+ZPvXO8oMI/txz6yeuFFeE67fRSpTaE6sIN79j
1cqy+5MV4fZf1fp0iemUItx9v7PEGkWeKjrA3A/jf+Fa9FHHQBTOX+1ud9n/
oChcv3mwk84kczG4+Yfi3FqvrBWD29+RcmLj1xdicPfB+DD3w/gw/8H0w/wP
Mx8WPjD7YeEHcx8sfNHDHwBu/qSR
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvf+bus9hGwmHDp1Dj7Lq+R1g/C8aMf2HvvI4TGr/
8PXaHQEMPkz934jyRxrThRx4jt4OchAXgPMDH16pmH8JwZ97RmCl6XRBOP9D
W/9jplQhOF+/1m7LFGNhOJ/l29N9k18i+AUfW5kZ2kXg/Ple3+bO/C4K5+fN
DQ4+fUAMzt9xf9q57xnicH6N4AF++Q8IvqPzywC3cgk4PyFkivMkFkk4/4bL
wedMMyQdDs1vE5FYJOBwYaHqp4u3EPzQT5dO7vwk5SCxtot3p4WYw73/Kfef
X5RxYLv4XzxkhpjDona/Xv0OBH+hx9ZwiywJOB/mHxgf5l8Y30/526VcIyR+
5Tb7vkQhON/3fNmadRME4fxHts2x9mcF4HxYfKDHLwCFIt67
                "]}]}, {
              FaceForm[
               RGBColor[0.999985, 0.999985, 0.999985, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 2/3, 0], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro", 
                FontSize -> 11, StripOnInput -> False], 
               "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                   DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                   DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                 Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
             Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> GrayLevel[1], 
                  TaggingRules -> {"ButtonHovering" -> True}}, {
                 FontColor -> 
                  RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                  TaggingRules -> {"ButtonHovering" -> False}}], {
                FontColor -> 
                 RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                 TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> GrayLevel[0.9], Method -> "Queued", 
             ImageSize -> {All, 20}, Evaluator -> Automatic], 
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                FontSize -> 11, StripOnInput -> False], 
               "\"Format selection as literal Wolfram Language code\""}, 
              "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                   DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                   DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                 Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
             Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> GrayLevel[1], 
                  TaggingRules -> {"ButtonHovering" -> True}}, {
                 FontColor -> 
                  RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                  TaggingRules -> {"ButtonHovering" -> False}}], {
                FontColor -> 
                 RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                 TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> GrayLevel[0.9], Method -> "Queued", 
             ImageSize -> {All, 20}, Evaluator -> Automatic], 
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Insert Delimiter\"", "Text", FontFamily -> 
                "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
               "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
             ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                   DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                   DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                 Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
             Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> GrayLevel[1], 
                  TaggingRules -> {"ButtonHovering" -> True}}, {
                 FontColor -> 
                  RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                  TaggingRules -> {"ButtonHovering" -> False}}], {
                FontColor -> 
                 RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                 TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> GrayLevel[0.9], Method -> "Queued", 
             ImageSize -> {All, 20}, Evaluator -> Automatic], 
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Subscripted Variable\"", "Text", FontFamily -> 
                "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
               "\"Insert subscripted variable placeholder\""}, 
              "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                   DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                   DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                 Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
             Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> GrayLevel[1], 
                  TaggingRules -> {"ButtonHovering" -> True}}, {
                 FontColor -> 
                  RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                  TaggingRules -> {"ButtonHovering" -> False}}], {
                FontColor -> 
                 RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                 TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> GrayLevel[0.9], Method -> "Queued", 
             ImageSize -> {All, 20}, Evaluator -> Automatic], 
            ActionMenuBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                 
                 TemplateBox[{
                  "\"Tables\"", 
                   "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Table functions\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> 
                   RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> 
                  RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
              Background -> GrayLevel[0.9], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             ButtonBox[
              StyleBox[
               
               TemplateBox[{
                "\"Cells\"", 
                 "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
               StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> 
                   RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> 
                  RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
              Background -> GrayLevel[0.9], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222222222222223`], {
                   FaceForm[{
                    RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                    Opacity[1.]}], 
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                    0.}, {22.5, 0.}, {10.074, 0.}, {0., 
                    10.073999999999998`}, {0., 22.5}, {0., 34.926}, {10.074, 
                    45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {45., 
                    22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                    "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                    27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                    26.308999999999997`}, {21.375, 26.258000000000003`}, {
                    21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 
                    15.315999999999999`}, {23.828, 14.242}}, {{24.578, 
                    18.75}, {24.578, 23.078000000000003`}, {24.578, 23.539}, {
                    24.953, 23.914}, {25.418, 23.91}, {29.746, 23.91}, {
                    30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078000000000003`}, {30.578, 18.75}, {
                    30.581999999999997`, 18.288999999999998`}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.315999999999999`}, {33.684, 
                    15.539000000000001`}, {33.789, 15.602}, {33.789, 
                    17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                    26.281}, {31.328, 26.512000000000004`}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 
                    14.234000000000002`}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.988235, 0.419608, 0.203922], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            ItemBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                 "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
                StripOnInput -> False], 
               "https://resources.wolframcloud.com/FunctionRepository"}, 
              "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
             False]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], (
              DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
              DefinitionNotebookClient`ViewExampleNotebook[
                ButtonNotebook[]])& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], (
              DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
              DefinitionNotebookClient`ViewStyleGuidelines[
                ButtonNotebook[]])& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, 
               "PrettyTooltipTemplate"], (
              DefinitionNotebookClient`$ClickedButton = "Tools"; 
              DefinitionNotebookClient`ToggleToolbar[
                ButtonNotebook[]])& , "\"Toggle documentation toolbar\"", 
              False}, "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], (
              DefinitionNotebookClient`$ClickedButton = "Check"; 
              DefinitionNotebookClient`CheckDefinitionNotebook[
                ButtonNotebook[]])& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Preview\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Null& , "\"\"", True}, 
              "OrangeButtonTemplate"], {
             "\"In a notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Preview"; 
                    DefinitionNotebookClient`$ClickedAction = "In a notebook"; 
                    DefinitionNotebookClient`PreviewResource[
                    ButtonNotebook[], "Notebook"]]]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"On the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Preview"; 
                    DefinitionNotebookClient`$ClickedAction = "On the cloud"; 
                    DefinitionNotebookClient`PreviewResource[
                    ButtonNotebook[], "Cloud"]]]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Null& , "\"\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your resource submission\""}, 
                   "PrettyTooltipTemplate"], (
                  DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                  With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]])& , 
                  "\"Submit changes to update your resource submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], (
                  DefinitionNotebookClient`$ClickedButton = "Submit"; 
                  With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]])& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.988235, 0.419608, 0.203922], 
              RGBColor[0.921569, 0.341176, 0.105882]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
              RGBColor[0.921569, 0.341176, 0.105882]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.988235, 0.419608, 0.203922]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222222222222223`], {
                FaceForm[{
                  RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                 0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                 0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {34.926,
                  45.}, {45., 34.926}, {45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                  "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                  27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                  26.308999999999997`}, {21.375, 26.258000000000003`}, {
                  21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                  15.602}, {21.426, 15.547}, {23.828, 15.315999999999999`}, {
                  23.828, 14.242}}, {{24.578, 18.75}, {24.578, 
                  23.078000000000003`}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078000000000003`}, {30.578, 18.75}, {
                  30.581999999999997`, 18.288999999999998`}, {30.207, 
                  17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                  17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                  14.242}, {31.328, 15.315999999999999`}, {33.684, 
                  15.539000000000001`}, {33.789, 15.602}, {33.789, 17.641}, {
                  33.789, 24.188}, {33.789, 26.227}, {33.684, 26.281}, {
                  31.328, 26.512000000000004`}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234000000000002`}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.9568627450980391, 0.8019607843137255, 0.75]], 
           Evaluator -> "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                 ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]]; CurrentValue[
            RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null], 
        FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPnQeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPAsWu
mjNdNmVARkARoDhc2aswqWtWLGhqIAgoDpSFuBao5QqGURB0BWwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAMJyEaA=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotcmIc7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2cswqY2GnGhqIAgoDpSFuBaoZTWGURC0GmwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAJxlBG4=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nb99I5gU7gaCAKKAMWBshDXArV8unUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBBtDmK
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
        "Queued", ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWHlMVEcYf28XlGM5VlcRapRDDFK0sBaLBWVXUDxTKpe4JgvoQlALAsvV
hHIoV4KK6wGiQlUqoqDcKKysDSZtPZJWTTzaxGrV2mqrNtqKB3Qnz8+Zd6Cv
tn90vkgyv+/4zc58M9/3dEtIXZoooSgqw8r8Z2l8tjo9PT43wtE8iUrJSE5K
0a1akKLXJenSAxKkZlD58h9y+X+M8Z7a/I3G7V/lHQgKp2kGmzw9rcrQb+j/
ZItPIGBvNywsVVGVJ01DWAqbpBYUFZ1hGsTYvssRqTLHt4nvoIgvbP6ZjM+I
Nt9PzUePPdbvcvX+ZwzTQ9vv8yMh6R04fFNY0/ciOkM8wzjXY4+F47xJgiPF
cqRuY3kOlnUGLFq4khsv53NPv8zd7NXs/lYsR+158Gm9l1Tu7IYwmq7oJaMd
uWMnR7jMMXLd/isYt7UXx4F9Rjtj1NmNXPPsCKyh6S9+AHzUOHEcpR3gMWM+
iQdHrq1kZFkmidvYQS633399ZBf31G21F/ZdLmmvPo0zVcyalCFg33Qr78Ce
7+qv5jdOm8W3e39u9yN+npR3ieHQ5ArlWGwW28pBIXwfilvFcESnC2eyMoS0
ii8UstncZ2XDjiaROihGjbMcyWVJLBP0N2ELC8vm229icHFPKKo+Y3zK3Jj6
q2lV3gFvZpk4BfSqKHwfFC4fLNDml3cVt2IGO7m+5sRzfoSNxglemGVV8dZT
yRXqaKeJ5V1gkWIALX5bk8r5u+3x3qEbwvuN3kJ1DN9j5mLQdz60skXIeM9X
PoPMnWYzdD4cjoGRMC3XRyI5+CNolyQhJK4A5mWdXGs7Ofs3HP+z9nz16fbf
Scz41Muf67c8B7Q7z6L5RiPMAxZxbfU1OFbDtVDNSGtmnb4qQz/W1F1ElYsc
8rG9A6BF8x1fw2zhSnbddHHHJ115kl3rJNI1mzBL6HI2x9SglrugQzHzG7Ft
RQ95IglF+DfwqylNb2gRugnWMnNteFWLj/+FsNlLyd3tfoTrTPWZV+vUcBnQ
cHbre8HoTzy3ljGYxzT2Cep3MespaibRtZWwGy9vnPmkmXPgjy1fgte7Mxlk
fhwZa/8V+9EQTZuPzwg4HBSA1J4XZqCotB1gExTO58hrYOoYM5RzcCcAHHIn
QKpPD8eBzx12GHP0PAlfjXPI3C8J7JXlSNjt9vuSYVrKkjbwUs4R2quCwxLU
mFJTZpCoaQjXuPqrgPmqhBhs7XH1lTsxmP889su24lOEZuzEyJE7ZJ3Gu23o
Z9bDHvitrb2A0Um+NedwxKO/IGzrKZhn15FnRFHeAdh2zSZuXxscCXtpGorR
kxqpRWx2zxPQsTk8/bgrxe+MaWj9UXw/be11pZih5VduxzPCqu03kiPFALPM
3VyOCV5kv9P3ovJk6rbkipI2du3n39AwLegO3UBzn0CYH3vMfzHUMeyM4Mu6
7Vwfiqr6BrRxBWhO0/suAxK5jm8fpoX7LszAz4bJStAanylcGCwiFbD9V2ja
xk4ZosmNTsc+Xv51F4Xit9yduwJbqaJ0JYEfoT4xaw9YFDaBVuaId93cVb58
MxPLsL/UIlSz2URmft3FGL2tA7YI1UAONF7HOeWnxhb6XULrJFnQsLHz+XDW
x6ooZQjcOD4DKXsvkfnu6i1kYxpaVcw/H/5QRQl7L0lk27HfLJCtp8Rw6EqF
fDe08F+54MjaC0jX8aDpFtglV4jhCAoH+44HzPvdfFuTy63xMGwd5GMpKq8B
fNTRpNZj2vw4RvznkfhoZ7A/fBO9AdzTEhrM70HiNBGj1jJcRY3PJvmSHod+
Ao3Yr2j8HVXeNXMx7Cr7K7HmHOzFZGXWHpytjmPEcXx2kIzWcG15juOYqUHk
dz+S2OwRVmFa3DkhaboljgF1R9wc6R3A/RJIz5PWe1wsNlssB0XFZgllI8Qe
TrOhxcJSPAfqIjabhOLkNYSvFsL3XlqsG67qv264eqcYuv4gI9V/bz+Kptcf
IbETz4ualXP+zf/+WMuWJO08i2J1P0qrYjJTIl2WyXx5NV6PK1C88/bR/7vx
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> False], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> False], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`file = SystemDialogInput["FileOpen"], RSNB`cell = 
             ParentCell[
               EvaluationCell[]]}, 
            If[
            RSNB`file =!= $Canceled, 
             SelectionMove[RSNB`cell, All, CellContents]; NotebookWrite[
               Notebooks[RSNB`cell], 
               RowBox[{"File", "[", 
                 ToBoxes[RSNB`file], "]"}]]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{
            RSNB`file = SystemDialogInput["Directory"], RSNB`cell = ParentCell[
               EvaluationCell[]]}, 
            If[
            RSNB`file =!= $Canceled, 
             SelectionMove[RSNB`cell, All, CellContents]; NotebookWrite[
               Notebooks[RSNB`cell], 
               RowBox[{"File", "[", 
                 ToBoxes[RSNB`file], "]"}]]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "12.3 for Microsoft Windows (64-bit) (July 9, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"06d1bcf5-6550-49fe-94b5-f95cc3886e87"
]

